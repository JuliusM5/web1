{"ast":null,"code":"// src/services/stripeService.js\n// Browser-compatible Stripe service using Stripe.js\n\nimport ApiClient from './ApiClient';\nclass StripeService {\n  constructor() {\n    this.stripe = null;\n    this.elements = null;\n    this.apiKey = process.env.REACT_APP_STRIPE_PUBLIC_KEY;\n    this.initialized = false;\n  }\n  async init() {\n    if (this.initialized) return;\n    try {\n      // Load Stripe.js dynamically\n      if (window.Stripe) {\n        this.stripe = window.Stripe(this.apiKey);\n        this.initialized = true;\n      } else {\n        // If Stripe.js is not loaded yet, load it\n        const script = document.createElement('script');\n        script.src = 'https://js.stripe.com/v3/';\n        script.async = true;\n        script.onload = () => {\n          this.stripe = window.Stripe(this.apiKey);\n          this.initialized = true;\n        };\n        document.body.appendChild(script);\n      }\n    } catch (error) {\n      console.error('Failed to initialize Stripe:', error);\n    }\n  }\n  async ensureInitialized() {\n    if (!this.initialized) {\n      await this.init();\n\n      // Wait for initialization\n      let attempts = 0;\n      while (!this.initialized && attempts < 10) {\n        await new Promise(resolve => setTimeout(resolve, 100));\n        attempts++;\n      }\n      if (!this.initialized) {\n        throw new Error('Failed to initialize Stripe service');\n      }\n    }\n  }\n  async createPaymentMethod(cardElement, billingDetails) {\n    await this.ensureInitialized();\n    const result = await this.stripe.createPaymentMethod({\n      type: 'card',\n      card: cardElement,\n      billing_details: billingDetails\n    });\n    if (result.error) {\n      throw result.error;\n    }\n    return result.paymentMethod;\n  }\n  async createSubscription(paymentMethodId, planId) {\n    try {\n      // Create subscription via API\n      const response = await ApiClient.post('/api/subscriptions', {\n        paymentMethodId,\n        planId\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Failed to create subscription:', error);\n      throw error;\n    }\n  }\n  async cancelSubscription(subscriptionId) {\n    try {\n      // Cancel subscription via API\n      const response = await ApiClient.post(`/api/subscriptions/${subscriptionId}/cancel`);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to cancel subscription:', error);\n      throw error;\n    }\n  }\n\n  // Create card element for mounting in the UI\n  createCardElement(options = {}) {\n    if (!this.stripe) {\n      console.error('Stripe not initialized');\n      return null;\n    }\n    if (!this.elements) {\n      this.elements = this.stripe.elements();\n    }\n    return this.elements.create('card', {\n      style: {\n        base: {\n          fontSize: '16px',\n          color: '#32325d',\n          fontFamily: 'Arial, sans-serif',\n          '::placeholder': {\n            color: '#aab7c4'\n          }\n        },\n        invalid: {\n          color: '#fa755a',\n          iconColor: '#fa755a'\n        }\n      },\n      ...options\n    });\n  }\n}\nexport default new StripeService();","map":{"version":3,"names":["ApiClient","StripeService","constructor","stripe","elements","apiKey","process","env","REACT_APP_STRIPE_PUBLIC_KEY","initialized","init","window","Stripe","script","document","createElement","src","async","onload","body","appendChild","error","console","ensureInitialized","attempts","Promise","resolve","setTimeout","Error","createPaymentMethod","cardElement","billingDetails","result","type","card","billing_details","paymentMethod","createSubscription","paymentMethodId","planId","response","post","data","cancelSubscription","subscriptionId","createCardElement","options","create","style","base","fontSize","color","fontFamily","invalid","iconColor"],"sources":["C:/Users/juliu/Desktop/web/src/services/stripeService.js"],"sourcesContent":["// src/services/stripeService.js\r\n// Browser-compatible Stripe service using Stripe.js\r\n\r\nimport ApiClient from './ApiClient';\r\n\r\nclass StripeService {\r\n  constructor() {\r\n    this.stripe = null;\r\n    this.elements = null;\r\n    this.apiKey = process.env.REACT_APP_STRIPE_PUBLIC_KEY;\r\n    this.initialized = false;\r\n  }\r\n\r\n  async init() {\r\n    if (this.initialized) return;\r\n    \r\n    try {\r\n      // Load Stripe.js dynamically\r\n      if (window.Stripe) {\r\n        this.stripe = window.Stripe(this.apiKey);\r\n        this.initialized = true;\r\n      } else {\r\n        // If Stripe.js is not loaded yet, load it\r\n        const script = document.createElement('script');\r\n        script.src = 'https://js.stripe.com/v3/';\r\n        script.async = true;\r\n        \r\n        script.onload = () => {\r\n          this.stripe = window.Stripe(this.apiKey);\r\n          this.initialized = true;\r\n        };\r\n        \r\n        document.body.appendChild(script);\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to initialize Stripe:', error);\r\n    }\r\n  }\r\n\r\n  async ensureInitialized() {\r\n    if (!this.initialized) {\r\n      await this.init();\r\n      \r\n      // Wait for initialization\r\n      let attempts = 0;\r\n      while (!this.initialized && attempts < 10) {\r\n        await new Promise(resolve => setTimeout(resolve, 100));\r\n        attempts++;\r\n      }\r\n      \r\n      if (!this.initialized) {\r\n        throw new Error('Failed to initialize Stripe service');\r\n      }\r\n    }\r\n  }\r\n\r\n  async createPaymentMethod(cardElement, billingDetails) {\r\n    await this.ensureInitialized();\r\n    \r\n    const result = await this.stripe.createPaymentMethod({\r\n      type: 'card',\r\n      card: cardElement,\r\n      billing_details: billingDetails\r\n    });\r\n    \r\n    if (result.error) {\r\n      throw result.error;\r\n    }\r\n    \r\n    return result.paymentMethod;\r\n  }\r\n\r\n  async createSubscription(paymentMethodId, planId) {\r\n    try {\r\n      // Create subscription via API\r\n      const response = await ApiClient.post('/api/subscriptions', {\r\n        paymentMethodId,\r\n        planId\r\n      });\r\n      \r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Failed to create subscription:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async cancelSubscription(subscriptionId) {\r\n    try {\r\n      // Cancel subscription via API\r\n      const response = await ApiClient.post(`/api/subscriptions/${subscriptionId}/cancel`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Failed to cancel subscription:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Create card element for mounting in the UI\r\n  createCardElement(options = {}) {\r\n    if (!this.stripe) {\r\n      console.error('Stripe not initialized');\r\n      return null;\r\n    }\r\n    \r\n    if (!this.elements) {\r\n      this.elements = this.stripe.elements();\r\n    }\r\n    \r\n    return this.elements.create('card', {\r\n      style: {\r\n        base: {\r\n          fontSize: '16px',\r\n          color: '#32325d',\r\n          fontFamily: 'Arial, sans-serif',\r\n          '::placeholder': {\r\n            color: '#aab7c4'\r\n          }\r\n        },\r\n        invalid: {\r\n          color: '#fa755a',\r\n          iconColor: '#fa755a'\r\n        }\r\n      },\r\n      ...options\r\n    });\r\n  }\r\n}\r\n\r\nexport default new StripeService();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}