{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\juliu\\\\Desktop\\\\web\\\\src\\\\components\\\\Offline\\\\OfflineIndicator.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction OfflineIndicator() {\n  _s();\n  const [isOffline, setIsOffline] = useState(!navigator.onLine);\n  const [showIndicator, setShowIndicator] = useState(false);\n  const [lastSynced, setLastSynced] = useState(localStorage.getItem('lastSyncTime') || null);\n\n  // Update online/offline status\n  useEffect(() => {\n    const handleOnline = () => {\n      setIsOffline(false);\n      setShowIndicator(true);\n\n      // Hide the indicator after 5 seconds when going back online\n      const timer = setTimeout(() => {\n        setShowIndicator(false);\n      }, 5000);\n\n      // Update last synced time\n      const now = new Date().toISOString();\n      localStorage.setItem('lastSyncTime', now);\n      setLastSynced(now);\n      return () => clearTimeout(timer);\n    };\n    const handleOffline = () => {\n      setIsOffline(true);\n      setShowIndicator(true);\n    };\n\n    // Set initial state\n    setIsOffline(!navigator.onLine);\n    if (!navigator.onLine) {\n      setShowIndicator(true);\n    }\n\n    // Add event listeners\n    window.addEventListener('online', handleOnline);\n    window.addEventListener('offline', handleOffline);\n\n    // Clean up event listeners\n    return () => {\n      window.removeEventListener('online', handleOnline);\n      window.removeEventListener('offline', handleOffline);\n    };\n  }, []);\n\n  // Format last synced time\n  const formatLastSynced = () => {\n    if (!lastSynced) return 'Never';\n    try {\n      const date = new Date(lastSynced);\n      return date.toLocaleString();\n    } catch (error) {\n      return 'Unknown';\n    }\n  };\n  if (!showIndicator) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `fixed bottom-4 left-4 rounded-lg shadow-lg z-50 p-4 ${isOffline ? 'bg-red-500 text-white' : 'bg-green-500 text-white'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `w-3 h-3 rounded-full mr-2 ${isOffline ? 'bg-red-200' : 'bg-green-200'}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-medium\",\n        children: isOffline ? 'You are offline' : 'Connected'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), !isOffline && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowIndicator(false),\n        className: \"ml-4 text-white hover:text-gray-200\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"w-4 h-4\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          viewBox: \"0 0 24 24\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: \"2\",\n            d: \"M6 18L18 6M6 6l12 12\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-xs mt-1\",\n      children: isOffline ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Changes will be saved locally and synchronized when you reconnect.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), \"Last synced: \", formatLastSynced()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your data has been synchronized.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(OfflineIndicator, \"nwLSD+htY/Splmtbp7+rGdluHtg=\");\n_c = OfflineIndicator;\nexport default OfflineIndicator;\nvar _c;\n$RefreshReg$(_c, \"OfflineIndicator\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","OfflineIndicator","_s","isOffline","setIsOffline","navigator","onLine","showIndicator","setShowIndicator","lastSynced","setLastSynced","localStorage","getItem","handleOnline","timer","setTimeout","now","Date","toISOString","setItem","clearTimeout","handleOffline","window","addEventListener","removeEventListener","formatLastSynced","date","toLocaleString","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","fill","stroke","viewBox","xmlns","strokeLinecap","strokeLinejoin","strokeWidth","d","_c","$RefreshReg$"],"sources":["C:/Users/juliu/Desktop/web/src/components/Offline/OfflineIndicator.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction OfflineIndicator() {\r\n  const [isOffline, setIsOffline] = useState(!navigator.onLine);\r\n  const [showIndicator, setShowIndicator] = useState(false);\r\n  const [lastSynced, setLastSynced] = useState(localStorage.getItem('lastSyncTime') || null);\r\n  \r\n  // Update online/offline status\r\n  useEffect(() => {\r\n    const handleOnline = () => {\r\n      setIsOffline(false);\r\n      setShowIndicator(true);\r\n      \r\n      // Hide the indicator after 5 seconds when going back online\r\n      const timer = setTimeout(() => {\r\n        setShowIndicator(false);\r\n      }, 5000);\r\n      \r\n      // Update last synced time\r\n      const now = new Date().toISOString();\r\n      localStorage.setItem('lastSyncTime', now);\r\n      setLastSynced(now);\r\n      \r\n      return () => clearTimeout(timer);\r\n    };\r\n    \r\n    const handleOffline = () => {\r\n      setIsOffline(true);\r\n      setShowIndicator(true);\r\n    };\r\n    \r\n    // Set initial state\r\n    setIsOffline(!navigator.onLine);\r\n    if (!navigator.onLine) {\r\n      setShowIndicator(true);\r\n    }\r\n    \r\n    // Add event listeners\r\n    window.addEventListener('online', handleOnline);\r\n    window.addEventListener('offline', handleOffline);\r\n    \r\n    // Clean up event listeners\r\n    return () => {\r\n      window.removeEventListener('online', handleOnline);\r\n      window.removeEventListener('offline', handleOffline);\r\n    };\r\n  }, []);\r\n  \r\n  // Format last synced time\r\n  const formatLastSynced = () => {\r\n    if (!lastSynced) return 'Never';\r\n    \r\n    try {\r\n      const date = new Date(lastSynced);\r\n      return date.toLocaleString();\r\n    } catch (error) {\r\n      return 'Unknown';\r\n    }\r\n  };\r\n  \r\n  if (!showIndicator) {\r\n    return null;\r\n  }\r\n  \r\n  return (\r\n    <div className={`fixed bottom-4 left-4 rounded-lg shadow-lg z-50 p-4 ${\r\n      isOffline ? 'bg-red-500 text-white' : 'bg-green-500 text-white'\r\n    }`}>\r\n      <div className=\"flex items-center\">\r\n        <div className={`w-3 h-3 rounded-full mr-2 ${\r\n          isOffline ? 'bg-red-200' : 'bg-green-200'\r\n        }`}></div>\r\n        <p className=\"font-medium\">\r\n          {isOffline ? 'You are offline' : 'Connected'}\r\n        </p>\r\n        {!isOffline && (\r\n          <button\r\n            onClick={() => setShowIndicator(false)}\r\n            className=\"ml-4 text-white hover:text-gray-200\"\r\n          >\r\n            <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\r\n            </svg>\r\n          </button>\r\n        )}\r\n      </div>\r\n      \r\n      <div className=\"text-xs mt-1\">\r\n        {isOffline ? (\r\n          <p>\r\n            Changes will be saved locally and synchronized when you reconnect.\r\n            <br />\r\n            Last synced: {formatLastSynced()}\r\n          </p>\r\n        ) : (\r\n          <p>Your data has been synchronized.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OfflineIndicator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}