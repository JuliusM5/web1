{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\juliu\\\\Desktop\\\\web\\\\src\\\\components\\\\Settings\\\\NotificationSettings.jsx\",\n  _s = $RefreshSig$();\n// src/components/Settings/NotificationSettings.jsx\n\nimport React, { useState, useEffect } from 'react';\nimport notificationService from '../../services/notificationService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction NotificationSettings() {\n  _s();\n  const [status, setStatus] = useState('checking');\n  const [canSubscribe, setCanSubscribe] = useState(false);\n  const [priceAlerts, setPriceAlerts] = useState(false);\n  const [tripReminders, setTripReminders] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Check initial notification status\n  useEffect(() => {\n    const checkStatus = async () => {\n      const permissionResult = await notificationService.checkPermission();\n      if (permissionResult.granted) {\n        setStatus('granted');\n\n        // Check server for user preferences\n        try {\n          const response = await fetch('/api/notifications/preferences');\n          if (response.ok) {\n            const preferences = await response.json();\n            setPriceAlerts(preferences.priceAlerts);\n            setTripReminders(preferences.tripReminders);\n          }\n        } catch (error) {\n          console.error('Error fetching notification preferences:', error);\n        }\n      } else if (permissionResult.permission === 'denied') {\n        setStatus('denied');\n      } else {\n        setStatus('default');\n        setCanSubscribe(true);\n      }\n    };\n    checkStatus();\n  }, []);\n\n  // Handle enabling notifications\n  const handleEnableNotifications = async () => {\n    setIsLoading(true);\n    try {\n      const permissionResult = await notificationService.requestPermission();\n      if (permissionResult.granted) {\n        const subscriptionResult = await notificationService.subscribeToPush();\n        if (subscriptionResult.success) {\n          setStatus('granted');\n          // Enable default notifications\n          setPriceAlerts(true);\n          setTripReminders(true);\n          await savePreferences(true, true);\n\n          // Show confirmation notification\n          notificationService.showNotification('Notifications enabled!', {\n            body: 'You will now receive updates on flight deals and trip reminders.',\n            icon: '/logo192.png'\n          });\n        } else {\n          console.error('Failed to subscribe:', subscriptionResult);\n        }\n      } else {\n        setStatus(permissionResult.permission);\n      }\n    } catch (error) {\n      console.error('Error enabling notifications:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Handle disabling notifications\n  const handleDisableNotifications = async () => {\n    setIsLoading(true);\n    try {\n      const result = await notificationService.unsubscribeFromPush();\n      if (result.success) {\n        await savePreferences(false, false);\n        setPriceAlerts(false);\n        setTripReminders(false);\n        setStatus('unsubscribed');\n      }\n    } catch (error) {\n      console.error('Error disabling notifications:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Save notification preferences to server\n  const savePreferences = async (priceAlertsValue, tripRemindersValue) => {\n    try {\n      await fetch('/api/notifications/preferences', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          priceAlerts: priceAlertsValue,\n          tripReminders: tripRemindersValue\n        })\n      });\n    } catch (error) {\n      console.error('Error saving notification preferences:', error);\n    }\n  };\n\n  // Handle toggling individual notification types\n  const handleTogglePriceAlerts = async e => {\n    const checked = e.target.checked;\n    setPriceAlerts(checked);\n    await savePreferences(checked, tripReminders);\n  };\n  const handleToggleTripReminders = async e => {\n    const checked = e.target.checked;\n    setTripReminders(checked);\n    await savePreferences(priceAlerts, checked);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 bg-white rounded-lg shadow-sm\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"font-semibold text-lg mb-4\",\n      children: \"Notification Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), status === 'denied' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 p-3 bg-yellow-50 border border-yellow-200 rounded-md\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-yellow-800\",\n        children: \"Notifications are blocked for this site. Please update your browser settings to receive notifications.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this), status === 'default' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600 mb-3\",\n        children: \"Enable notifications to receive alerts about flight deals and trip reminders.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEnableNotifications,\n        disabled: isLoading,\n        className: \"px-4 py-2 bg-blue-600 text-white rounded-md disabled:bg-blue-300\",\n        children: isLoading ? 'Enabling...' : 'Enable Notifications'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }, this), status === 'granted' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 mb-2\",\n          children: \"You will receive the following notifications:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: priceAlerts,\n              onChange: handleTogglePriceAlerts,\n              className: \"mr-2 h-4 w-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Price drop alerts for your saved routes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: tripReminders,\n              onChange: handleToggleTripReminders,\n              className: \"mr-2 h-4 w-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Trip reminders and checklist notifications\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDisableNotifications,\n        className: \"px-4 py-2 bg-gray-200 text-gray-700 rounded-md hover:bg-gray-300\",\n        children: \"Disable All Notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), status === 'unsubscribed' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600 mb-3\",\n        children: \"You have unsubscribed from notifications. Enable them again to receive updates.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEnableNotifications,\n        className: \"px-4 py-2 bg-blue-600 text-white rounded-md\",\n        children: \"Re-enable Notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n}\n_s(NotificationSettings, \"B1ffyS1u6ONFP522TieyvW1ckRc=\");\n_c = NotificationSettings;\nexport default NotificationSettings;\nvar _c;\n$RefreshReg$(_c, \"NotificationSettings\");","map":{"version":3,"names":["React","useState","useEffect","notificationService","jsxDEV","_jsxDEV","Fragment","_Fragment","NotificationSettings","_s","status","setStatus","canSubscribe","setCanSubscribe","priceAlerts","setPriceAlerts","tripReminders","setTripReminders","isLoading","setIsLoading","checkStatus","permissionResult","checkPermission","granted","response","fetch","ok","preferences","json","error","console","permission","handleEnableNotifications","requestPermission","subscriptionResult","subscribeToPush","success","savePreferences","showNotification","body","icon","handleDisableNotifications","result","unsubscribeFromPush","priceAlertsValue","tripRemindersValue","method","headers","JSON","stringify","handleTogglePriceAlerts","e","checked","target","handleToggleTripReminders","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","type","onChange","_c","$RefreshReg$"],"sources":["C:/Users/juliu/Desktop/web/src/components/Settings/NotificationSettings.jsx"],"sourcesContent":["// src/components/Settings/NotificationSettings.jsx\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport notificationService from '../../services/notificationService';\r\n\r\nfunction NotificationSettings() {\r\n  const [status, setStatus] = useState('checking');\r\n  const [canSubscribe, setCanSubscribe] = useState(false);\r\n  const [priceAlerts, setPriceAlerts] = useState(false);\r\n  const [tripReminders, setTripReminders] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  \r\n  // Check initial notification status\r\n  useEffect(() => {\r\n    const checkStatus = async () => {\r\n      const permissionResult = await notificationService.checkPermission();\r\n      \r\n      if (permissionResult.granted) {\r\n        setStatus('granted');\r\n        \r\n        // Check server for user preferences\r\n        try {\r\n          const response = await fetch('/api/notifications/preferences');\r\n          if (response.ok) {\r\n            const preferences = await response.json();\r\n            setPriceAlerts(preferences.priceAlerts);\r\n            setTripReminders(preferences.tripReminders);\r\n          }\r\n        } catch (error) {\r\n          console.error('Error fetching notification preferences:', error);\r\n        }\r\n      } else if (permissionResult.permission === 'denied') {\r\n        setStatus('denied');\r\n      } else {\r\n        setStatus('default');\r\n        setCanSubscribe(true);\r\n      }\r\n    };\r\n    \r\n    checkStatus();\r\n  }, []);\r\n  \r\n  // Handle enabling notifications\r\n  const handleEnableNotifications = async () => {\r\n    setIsLoading(true);\r\n    \r\n    try {\r\n      const permissionResult = await notificationService.requestPermission();\r\n      \r\n      if (permissionResult.granted) {\r\n        const subscriptionResult = await notificationService.subscribeToPush();\r\n        \r\n        if (subscriptionResult.success) {\r\n          setStatus('granted');\r\n          // Enable default notifications\r\n          setPriceAlerts(true);\r\n          setTripReminders(true);\r\n          await savePreferences(true, true);\r\n          \r\n          // Show confirmation notification\r\n          notificationService.showNotification(\r\n            'Notifications enabled!',\r\n            {\r\n              body: 'You will now receive updates on flight deals and trip reminders.',\r\n              icon: '/logo192.png'\r\n            }\r\n          );\r\n        } else {\r\n          console.error('Failed to subscribe:', subscriptionResult);\r\n        }\r\n      } else {\r\n        setStatus(permissionResult.permission);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error enabling notifications:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Handle disabling notifications\r\n  const handleDisableNotifications = async () => {\r\n    setIsLoading(true);\r\n    \r\n    try {\r\n      const result = await notificationService.unsubscribeFromPush();\r\n      \r\n      if (result.success) {\r\n        await savePreferences(false, false);\r\n        setPriceAlerts(false);\r\n        setTripReminders(false);\r\n        setStatus('unsubscribed');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error disabling notifications:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Save notification preferences to server\r\n  const savePreferences = async (priceAlertsValue, tripRemindersValue) => {\r\n    try {\r\n      await fetch('/api/notifications/preferences', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          priceAlerts: priceAlertsValue,\r\n          tripReminders: tripRemindersValue\r\n        })\r\n      });\r\n    } catch (error) {\r\n      console.error('Error saving notification preferences:', error);\r\n    }\r\n  };\r\n  \r\n  // Handle toggling individual notification types\r\n  const handleTogglePriceAlerts = async (e) => {\r\n    const checked = e.target.checked;\r\n    setPriceAlerts(checked);\r\n    await savePreferences(checked, tripReminders);\r\n  };\r\n  \r\n  const handleToggleTripReminders = async (e) => {\r\n    const checked = e.target.checked;\r\n    setTripReminders(checked);\r\n    await savePreferences(priceAlerts, checked);\r\n  };\r\n  \r\n  return (\r\n    <div className=\"p-4 bg-white rounded-lg shadow-sm\">\r\n      <h3 className=\"font-semibold text-lg mb-4\">Notification Settings</h3>\r\n      \r\n      {status === 'denied' && (\r\n        <div className=\"mb-4 p-3 bg-yellow-50 border border-yellow-200 rounded-md\">\r\n          <p className=\"text-yellow-800\">\r\n            Notifications are blocked for this site. Please update your browser settings to receive notifications.\r\n          </p>\r\n        </div>\r\n      )}\r\n      \r\n      {status === 'default' && (\r\n        <div className=\"mb-4\">\r\n          <p className=\"text-gray-600 mb-3\">\r\n            Enable notifications to receive alerts about flight deals and trip reminders.\r\n          </p>\r\n          <button\r\n            onClick={handleEnableNotifications}\r\n            disabled={isLoading}\r\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-md disabled:bg-blue-300\"\r\n          >\r\n            {isLoading ? 'Enabling...' : 'Enable Notifications'}\r\n          </button>\r\n        </div>\r\n      )}\r\n      \r\n      {status === 'granted' && (\r\n        <>\r\n          <div className=\"mb-4\">\r\n            <p className=\"text-gray-600 mb-2\">\r\n              You will receive the following notifications:\r\n            </p>\r\n            \r\n            <div className=\"space-y-2\">\r\n              <label className=\"flex items-center\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={priceAlerts}\r\n                  onChange={handleTogglePriceAlerts}\r\n                  className=\"mr-2 h-4 w-4\"\r\n                />\r\n                <span>Price drop alerts for your saved routes</span>\r\n              </label>\r\n              \r\n              <label className=\"flex items-center\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={tripReminders}\r\n                  onChange={handleToggleTripReminders}\r\n                  className=\"mr-2 h-4 w-4\"\r\n                />\r\n                <span>Trip reminders and checklist notifications</span>\r\n              </label>\r\n            </div>\r\n          </div>\r\n          \r\n          <button\r\n            onClick={handleDisableNotifications}\r\n            className=\"px-4 py-2 bg-gray-200 text-gray-700 rounded-md hover:bg-gray-300\"\r\n          >\r\n            Disable All Notifications\r\n          </button>\r\n        </>\r\n      )}\r\n      \r\n      {status === 'unsubscribed' && (\r\n        <div className=\"mb-4\">\r\n          <p className=\"text-gray-600 mb-3\">\r\n            You have unsubscribed from notifications. Enable them again to receive updates.\r\n          </p>\r\n          <button\r\n            onClick={handleEnableNotifications}\r\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-md\"\r\n          >\r\n            Re-enable Notifications\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotificationSettings;"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,mBAAmB,MAAM,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErE,SAASC,oBAAoBA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,UAAU,CAAC;EAChD,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACe,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;;EAEjD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMkB,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMC,gBAAgB,GAAG,MAAMlB,mBAAmB,CAACmB,eAAe,CAAC,CAAC;MAEpE,IAAID,gBAAgB,CAACE,OAAO,EAAE;QAC5BZ,SAAS,CAAC,SAAS,CAAC;;QAEpB;QACA,IAAI;UACF,MAAMa,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,CAAC;UAC9D,IAAID,QAAQ,CAACE,EAAE,EAAE;YACf,MAAMC,WAAW,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;YACzCb,cAAc,CAACY,WAAW,CAACb,WAAW,CAAC;YACvCG,gBAAgB,CAACU,WAAW,CAACX,aAAa,CAAC;UAC7C;QACF,CAAC,CAAC,OAAOa,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;QAClE;MACF,CAAC,MAAM,IAAIR,gBAAgB,CAACU,UAAU,KAAK,QAAQ,EAAE;QACnDpB,SAAS,CAAC,QAAQ,CAAC;MACrB,CAAC,MAAM;QACLA,SAAS,CAAC,SAAS,CAAC;QACpBE,eAAe,CAAC,IAAI,CAAC;MACvB;IACF,CAAC;IAEDO,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMY,yBAAyB,GAAG,MAAAA,CAAA,KAAY;IAC5Cb,YAAY,CAAC,IAAI,CAAC;IAElB,IAAI;MACF,MAAME,gBAAgB,GAAG,MAAMlB,mBAAmB,CAAC8B,iBAAiB,CAAC,CAAC;MAEtE,IAAIZ,gBAAgB,CAACE,OAAO,EAAE;QAC5B,MAAMW,kBAAkB,GAAG,MAAM/B,mBAAmB,CAACgC,eAAe,CAAC,CAAC;QAEtE,IAAID,kBAAkB,CAACE,OAAO,EAAE;UAC9BzB,SAAS,CAAC,SAAS,CAAC;UACpB;UACAI,cAAc,CAAC,IAAI,CAAC;UACpBE,gBAAgB,CAAC,IAAI,CAAC;UACtB,MAAMoB,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC;;UAEjC;UACAlC,mBAAmB,CAACmC,gBAAgB,CAClC,wBAAwB,EACxB;YACEC,IAAI,EAAE,kEAAkE;YACxEC,IAAI,EAAE;UACR,CACF,CAAC;QACH,CAAC,MAAM;UACLV,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEK,kBAAkB,CAAC;QAC3D;MACF,CAAC,MAAM;QACLvB,SAAS,CAACU,gBAAgB,CAACU,UAAU,CAAC;MACxC;IACF,CAAC,CAAC,OAAOF,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD,CAAC,SAAS;MACRV,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;;EAED;EACA,MAAMsB,0BAA0B,GAAG,MAAAA,CAAA,KAAY;IAC7CtB,YAAY,CAAC,IAAI,CAAC;IAElB,IAAI;MACF,MAAMuB,MAAM,GAAG,MAAMvC,mBAAmB,CAACwC,mBAAmB,CAAC,CAAC;MAE9D,IAAID,MAAM,CAACN,OAAO,EAAE;QAClB,MAAMC,eAAe,CAAC,KAAK,EAAE,KAAK,CAAC;QACnCtB,cAAc,CAAC,KAAK,CAAC;QACrBE,gBAAgB,CAAC,KAAK,CAAC;QACvBN,SAAS,CAAC,cAAc,CAAC;MAC3B;IACF,CAAC,CAAC,OAAOkB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACxD,CAAC,SAAS;MACRV,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;;EAED;EACA,MAAMkB,eAAe,GAAG,MAAAA,CAAOO,gBAAgB,EAAEC,kBAAkB,KAAK;IACtE,IAAI;MACF,MAAMpB,KAAK,CAAC,gCAAgC,EAAE;QAC5CqB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDR,IAAI,EAAES,IAAI,CAACC,SAAS,CAAC;UACnBnC,WAAW,EAAE8B,gBAAgB;UAC7B5B,aAAa,EAAE6B;QACjB,CAAC;MACH,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOhB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;IAChE;EACF,CAAC;;EAED;EACA,MAAMqB,uBAAuB,GAAG,MAAOC,CAAC,IAAK;IAC3C,MAAMC,OAAO,GAAGD,CAAC,CAACE,MAAM,CAACD,OAAO;IAChCrC,cAAc,CAACqC,OAAO,CAAC;IACvB,MAAMf,eAAe,CAACe,OAAO,EAAEpC,aAAa,CAAC;EAC/C,CAAC;EAED,MAAMsC,yBAAyB,GAAG,MAAOH,CAAC,IAAK;IAC7C,MAAMC,OAAO,GAAGD,CAAC,CAACE,MAAM,CAACD,OAAO;IAChCnC,gBAAgB,CAACmC,OAAO,CAAC;IACzB,MAAMf,eAAe,CAACvB,WAAW,EAAEsC,OAAO,CAAC;EAC7C,CAAC;EAED,oBACE/C,OAAA;IAAKkD,SAAS,EAAC,mCAAmC;IAAAC,QAAA,gBAChDnD,OAAA;MAAIkD,SAAS,EAAC,4BAA4B;MAAAC,QAAA,EAAC;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEpElD,MAAM,KAAK,QAAQ,iBAClBL,OAAA;MAAKkD,SAAS,EAAC,2DAA2D;MAAAC,QAAA,eACxEnD,OAAA;QAAGkD,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAAC;MAE/B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CACN,EAEAlD,MAAM,KAAK,SAAS,iBACnBL,OAAA;MAAKkD,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnBnD,OAAA;QAAGkD,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAC;MAElC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACJvD,OAAA;QACEwD,OAAO,EAAE7B,yBAA0B;QACnC8B,QAAQ,EAAE5C,SAAU;QACpBqC,SAAS,EAAC,kEAAkE;QAAAC,QAAA,EAE3EtC,SAAS,GAAG,aAAa,GAAG;MAAsB;QAAAuC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN,EAEAlD,MAAM,KAAK,SAAS,iBACnBL,OAAA,CAAAE,SAAA;MAAAiD,QAAA,gBACEnD,OAAA;QAAKkD,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACnBnD,OAAA;UAAGkD,SAAS,EAAC,oBAAoB;UAAAC,QAAA,EAAC;QAElC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAEJvD,OAAA;UAAKkD,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxBnD,OAAA;YAAOkD,SAAS,EAAC,mBAAmB;YAAAC,QAAA,gBAClCnD,OAAA;cACE0D,IAAI,EAAC,UAAU;cACfX,OAAO,EAAEtC,WAAY;cACrBkD,QAAQ,EAAEd,uBAAwB;cAClCK,SAAS,EAAC;YAAc;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzB,CAAC,eACFvD,OAAA;cAAAmD,QAAA,EAAM;YAAuC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/C,CAAC,eAERvD,OAAA;YAAOkD,SAAS,EAAC,mBAAmB;YAAAC,QAAA,gBAClCnD,OAAA;cACE0D,IAAI,EAAC,UAAU;cACfX,OAAO,EAAEpC,aAAc;cACvBgD,QAAQ,EAAEV,yBAA0B;cACpCC,SAAS,EAAC;YAAc;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzB,CAAC,eACFvD,OAAA;cAAAmD,QAAA,EAAM;YAA0C;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENvD,OAAA;QACEwD,OAAO,EAAEpB,0BAA2B;QACpCc,SAAS,EAAC,kEAAkE;QAAAC,QAAA,EAC7E;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eACT,CACH,EAEAlD,MAAM,KAAK,cAAc,iBACxBL,OAAA;MAAKkD,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnBnD,OAAA;QAAGkD,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAC;MAElC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACJvD,OAAA;QACEwD,OAAO,EAAE7B,yBAA0B;QACnCuB,SAAS,EAAC,6CAA6C;QAAAC,QAAA,EACxD;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACnD,EAAA,CA/MQD,oBAAoB;AAAAyD,EAAA,GAApBzD,oBAAoB;AAiN7B,eAAeA,oBAAoB;AAAC,IAAAyD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}