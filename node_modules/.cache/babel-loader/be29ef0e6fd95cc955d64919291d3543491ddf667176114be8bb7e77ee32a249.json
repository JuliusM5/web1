{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\juliu\\\\Desktop\\\\web\\\\src\\\\components\\\\UI\\\\AppSettingsWrapper.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useSettings } from '../../context/SettingsContext';\nimport settingsManager from '../../utils/settingsManager';\n\n/**\r\n * Component that wraps the application and applies the current theme and settings\r\n * Uses the singleton pattern to prevent multiple settings applications\r\n * \r\n * @param {Object} props Component props\r\n * @param {React.ReactNode} props.children Child components\r\n * @returns {React.ReactNode} Wrapped children\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AppSettingsWrapper({\n  children\n}) {\n  _s();\n  const {\n    settings\n  } = useSettings();\n\n  // Apply settings whenever they change\n  useEffect(() => {\n    if (!settings) return;\n\n    // Apply settings using the singleton manager\n    settingsManager.applyThemeSettings(settings);\n    settingsManager.applyAccessibilitySettings(settings);\n\n    // Apply language settings if available\n    if (settings.preferences && settings.preferences.language) {\n      settingsManager.applyLanguageSettings(settings.preferences.language);\n    }\n  }, [settings]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(AppSettingsWrapper, \"fVYezonQTXA8rNz4LCGuPfefvVY=\", false, function () {\n  return [useSettings];\n});\n_c = AppSettingsWrapper;\nexport default AppSettingsWrapper;\nvar _c;\n$RefreshReg$(_c, \"AppSettingsWrapper\");","map":{"version":3,"names":["React","useEffect","useSettings","settingsManager","jsxDEV","_jsxDEV","AppSettingsWrapper","children","_s","settings","applyThemeSettings","applyAccessibilitySettings","preferences","language","applyLanguageSettings","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/juliu/Desktop/web/src/components/UI/AppSettingsWrapper.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useSettings } from '../../context/SettingsContext';\r\nimport settingsManager from '../../utils/settingsManager';\r\n\r\n/**\r\n * Component that wraps the application and applies the current theme and settings\r\n * Uses the singleton pattern to prevent multiple settings applications\r\n * \r\n * @param {Object} props Component props\r\n * @param {React.ReactNode} props.children Child components\r\n * @returns {React.ReactNode} Wrapped children\r\n */\r\nfunction AppSettingsWrapper({ children }) {\r\n  const { settings } = useSettings();\r\n  \r\n  // Apply settings whenever they change\r\n  useEffect(() => {\r\n    if (!settings) return;\r\n    \r\n    // Apply settings using the singleton manager\r\n    settingsManager.applyThemeSettings(settings);\r\n    settingsManager.applyAccessibilitySettings(settings);\r\n    \r\n    // Apply language settings if available\r\n    if (settings.preferences && settings.preferences.language) {\r\n      settingsManager.applyLanguageSettings(settings.preferences.language);\r\n    }\r\n  }, [settings]);\r\n  \r\n  return (\r\n    <div className=\"app-container\">\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AppSettingsWrapper;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,QAAQ,+BAA+B;AAC3D,OAAOC,eAAe,MAAM,6BAA6B;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA,SAAAC,MAAA,IAAAC,OAAA;AAQA,SAASC,kBAAkBA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACxC,MAAM;IAAEC;EAAS,CAAC,GAAGP,WAAW,CAAC,CAAC;;EAElC;EACAD,SAAS,CAAC,MAAM;IACd,IAAI,CAACQ,QAAQ,EAAE;;IAEf;IACAN,eAAe,CAACO,kBAAkB,CAACD,QAAQ,CAAC;IAC5CN,eAAe,CAACQ,0BAA0B,CAACF,QAAQ,CAAC;;IAEpD;IACA,IAAIA,QAAQ,CAACG,WAAW,IAAIH,QAAQ,CAACG,WAAW,CAACC,QAAQ,EAAE;MACzDV,eAAe,CAACW,qBAAqB,CAACL,QAAQ,CAACG,WAAW,CAACC,QAAQ,CAAC;IACtE;EACF,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC;EAEd,oBACEJ,OAAA;IAAKU,SAAS,EAAC,eAAe;IAAAR,QAAA,EAC3BA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACX,EAAA,CAtBQF,kBAAkB;EAAA,QACJJ,WAAW;AAAA;AAAAkB,EAAA,GADzBd,kBAAkB;AAwB3B,eAAeA,kBAAkB;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}