{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\juliu\\\\Desktop\\\\web\\\\src\\\\components\\\\Accessibility\\\\AccessibleInput.jsx\";\nimport React from 'react';\n\n/**\r\n * An accessible text input component\r\n * \r\n * @param {Object} props - Component props\r\n * @param {string} props.id - Unique ID (required for accessibility)\r\n * @param {string} props.label - Input label text\r\n * @param {string} props.type - Input type\r\n * @param {string} props.value - Input value\r\n * @param {Function} props.onChange - Change handler\r\n * @param {string} props.placeholder - Placeholder text\r\n * @param {boolean} props.required - Whether input is required\r\n * @param {string} props.error - Error message\r\n * @param {string} props.helpText - Help text\r\n * @param {boolean} props.disabled - Whether input is disabled\r\n * @param {string} props.className - Additional CSS classes\r\n * @returns {React.ReactElement} - Accessible input component\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function AccessibleInput({\n  id,\n  label,\n  type = 'text',\n  value,\n  onChange,\n  placeholder = '',\n  required = false,\n  error = '',\n  helpText = '',\n  disabled = false,\n  className = '',\n  ...rest\n}) {\n  // Generate a unique ID for the error message if one exists\n  const errorId = error ? `${id}-error` : undefined;\n  // Generate a unique ID for the help text if one exists\n  const helpTextId = helpText ? `${id}-help` : undefined;\n\n  // Combine all the IDs for aria-describedby\n  const describedBy = [errorId, helpTextId].filter(Boolean).join(' ') || undefined;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: id,\n      className: \"block text-sm font-medium text-gray-700 mb-1\",\n      children: [label, required && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-red-500 ml-1\",\n        children: \"*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: id,\n      type: type,\n      value: value,\n      onChange: onChange,\n      placeholder: placeholder,\n      disabled: disabled,\n      required: required,\n      \"aria-invalid\": !!error,\n      \"aria-describedby\": describedBy,\n      className: `\n          w-full p-2 border rounded\n          focus:outline-none focus:ring-2 focus:ring-blue-500\n          ${error ? 'border-red-500' : 'border-gray-300'}\n          ${disabled ? 'bg-gray-100 text-gray-500 cursor-not-allowed' : ''}\n          ${className}\n        `,\n      ...rest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), helpText && /*#__PURE__*/_jsxDEV(\"p\", {\n      id: helpTextId,\n      className: \"mt-1 text-sm text-gray-500\",\n      children: helpText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      id: errorId,\n      className: \"mt-1 text-sm text-red-600\",\n      role: \"alert\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n/**\r\n * An accessible textarea component\r\n * \r\n * @param {Object} props - Component props\r\n * @param {string} props.id - Unique ID (required for accessibility)\r\n * @param {string} props.label - Input label text\r\n * @param {string} props.value - Input value\r\n * @param {Function} props.onChange - Change handler\r\n * @param {string} props.placeholder - Placeholder text\r\n * @param {boolean} props.required - Whether input is required\r\n * @param {string} props.error - Error message\r\n * @param {string} props.helpText - Help text\r\n * @param {boolean} props.disabled - Whether input is disabled\r\n * @param {string} props.className - Additional CSS classes\r\n * @param {number} props.rows - Number of rows\r\n * @returns {React.ReactElement} - Accessible textarea component\r\n */\n_c = AccessibleInput;\nexport function AccessibleTextarea({\n  id,\n  label,\n  value,\n  onChange,\n  placeholder = '',\n  required = false,\n  error = '',\n  helpText = '',\n  disabled = false,\n  className = '',\n  rows = 4,\n  ...rest\n}) {\n  // Generate a unique ID for the error message if one exists\n  const errorId = error ? `${id}-error` : undefined;\n  // Generate a unique ID for the help text if one exists\n  const helpTextId = helpText ? `${id}-help` : undefined;\n\n  // Combine all the IDs for aria-describedby\n  const describedBy = [errorId, helpTextId].filter(Boolean).join(' ') || undefined;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: id,\n      className: \"block text-sm font-medium text-gray-700 mb-1\",\n      children: [label, required && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-red-500 ml-1\",\n        children: \"*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      id: id,\n      value: value,\n      onChange: onChange,\n      placeholder: placeholder,\n      disabled: disabled,\n      required: required,\n      rows: rows,\n      \"aria-invalid\": !!error,\n      \"aria-describedby\": describedBy,\n      className: `\n          w-full p-2 border rounded\n          focus:outline-none focus:ring-2 focus:ring-blue-500\n          ${error ? 'border-red-500' : 'border-gray-300'}\n          ${disabled ? 'bg-gray-100 text-gray-500 cursor-not-allowed' : ''}\n          ${className}\n        `,\n      ...rest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), helpText && /*#__PURE__*/_jsxDEV(\"p\", {\n      id: helpTextId,\n      className: \"mt-1 text-sm text-gray-500\",\n      children: helpText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      id: errorId,\n      className: \"mt-1 text-sm text-red-600\",\n      role: \"alert\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n}\n\n/**\r\n * An accessible select component\r\n * \r\n * @param {Object} props - Component props\r\n * @param {string} props.id - Unique ID (required for accessibility)\r\n * @param {string} props.label - Input label text\r\n * @param {string} props.value - Selected value\r\n * @param {Function} props.onChange - Change handler\r\n * @param {Array} props.options - Select options\r\n * @param {boolean} props.required - Whether input is required\r\n * @param {string} props.error - Error message\r\n * @param {string} props.helpText - Help text\r\n * @param {boolean} props.disabled - Whether input is disabled\r\n * @param {string} props.className - Additional CSS classes\r\n * @returns {React.ReactElement} - Accessible select component\r\n */\n_c2 = AccessibleTextarea;\nexport function AccessibleSelect({\n  id,\n  label,\n  value,\n  onChange,\n  options = [],\n  required = false,\n  error = '',\n  helpText = '',\n  disabled = false,\n  className = '',\n  ...rest\n}) {\n  // Generate a unique ID for the error message if one exists\n  const errorId = error ? `${id}-error` : undefined;\n  // Generate a unique ID for the help text if one exists\n  const helpTextId = helpText ? `${id}-help` : undefined;\n\n  // Combine all the IDs for aria-describedby\n  const describedBy = [errorId, helpTextId].filter(Boolean).join(' ') || undefined;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: id,\n      className: \"block text-sm font-medium text-gray-700 mb-1\",\n      children: [label, required && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-red-500 ml-1\",\n        children: \"*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: id,\n      value: value,\n      onChange: onChange,\n      disabled: disabled,\n      required: required,\n      \"aria-invalid\": !!error,\n      \"aria-describedby\": describedBy,\n      className: `\n          w-full p-2 border rounded\n          focus:outline-none focus:ring-2 focus:ring-blue-500\n          ${error ? 'border-red-500' : 'border-gray-300'}\n          ${disabled ? 'bg-gray-100 text-gray-500 cursor-not-allowed' : ''}\n          ${className}\n        `,\n      ...rest,\n      children: options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: option.value,\n        disabled: option.disabled,\n        children: option.label\n      }, option.value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), helpText && /*#__PURE__*/_jsxDEV(\"p\", {\n      id: helpTextId,\n      className: \"mt-1 text-sm text-gray-500\",\n      children: helpText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      id: errorId,\n      className: \"mt-1 text-sm text-red-600\",\n      role: \"alert\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 5\n  }, this);\n}\n\n/**\r\n * An accessible checkbox component\r\n * \r\n * @param {Object} props - Component props\r\n * @param {string} props.id - Unique ID (required for accessibility)\r\n * @param {string} props.label - Checkbox label text\r\n * @param {boolean} props.checked - Whether checkbox is checked\r\n * @param {Function} props.onChange - Change handler\r\n * @param {boolean} props.required - Whether input is required\r\n * @param {string} props.error - Error message\r\n * @param {string} props.helpText - Help text\r\n * @param {boolean} props.disabled - Whether input is disabled\r\n * @param {string} props.className - Additional CSS classes\r\n * @returns {React.ReactElement} - Accessible checkbox component\r\n */\n_c3 = AccessibleSelect;\nexport function AccessibleCheckbox({\n  id,\n  label,\n  checked,\n  onChange,\n  required = false,\n  error = '',\n  helpText = '',\n  disabled = false,\n  className = '',\n  ...rest\n}) {\n  // Generate a unique ID for the error message if one exists\n  const errorId = error ? `${id}-error` : undefined;\n  // Generate a unique ID for the help text if one exists\n  const helpTextId = helpText ? `${id}-help` : undefined;\n\n  // Combine all the IDs for aria-describedby\n  const describedBy = [errorId, helpTextId].filter(Boolean).join(' ') || undefined;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-start\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center h-5\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          id: id,\n          type: \"checkbox\",\n          checked: checked,\n          onChange: onChange,\n          disabled: disabled,\n          required: required,\n          \"aria-invalid\": !!error,\n          \"aria-describedby\": describedBy,\n          className: `\n              h-4 w-4 rounded border-gray-300 text-blue-600\n              focus:outline-none focus:ring-2 focus:ring-blue-500\n              ${disabled ? 'opacity-50 cursor-not-allowed' : ''}\n              ${className}\n            `,\n          ...rest\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ml-3 text-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: id,\n          className: `font-medium ${disabled ? 'text-gray-500' : 'text-gray-700'}`,\n          children: [label, required && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-red-500 ml-1\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this), helpText && /*#__PURE__*/_jsxDEV(\"p\", {\n          id: helpTextId,\n          className: \"text-gray-500\",\n          children: helpText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      id: errorId,\n      className: \"mt-1 text-sm text-red-600\",\n      role: \"alert\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 318,\n    columnNumber: 5\n  }, this);\n}\n\n/**\r\n * An accessible radio group component\r\n * \r\n * @param {Object} props - Component props\r\n * @param {string} props.name - Radio group name (required)\r\n * @param {string} props.legend - Group label text\r\n * @param {string} props.value - Selected value\r\n * @param {Function} props.onChange - Change handler\r\n * @param {Array} props.options - Radio options\r\n * @param {boolean} props.required - Whether selection is required\r\n * @param {string} props.error - Error message\r\n * @param {string} props.helpText - Help text\r\n * @param {boolean} props.disabled - Whether group is disabled\r\n * @param {string} props.className - Additional CSS classes\r\n * @returns {React.ReactElement} - Accessible radio group component\r\n */\n_c4 = AccessibleCheckbox;\nexport function AccessibleRadioGroup({\n  name,\n  legend,\n  value,\n  onChange,\n  options = [],\n  required = false,\n  error = '',\n  helpText = '',\n  disabled = false,\n  className = '',\n  ...rest\n}) {\n  // Generate a unique ID for the error message if one exists\n  const errorId = error ? `${name}-error` : undefined;\n  // Generate a unique ID for the help text if one exists\n  const helpTextId = helpText ? `${name}-help` : undefined;\n  return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n    className: `mb-4 ${className}`,\n    ...rest,\n    children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n      className: \"text-sm font-medium text-gray-700\",\n      children: [legend, required && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-red-500 ml-1\",\n        children: \"*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 7\n    }, this), helpText && /*#__PURE__*/_jsxDEV(\"p\", {\n      id: helpTextId,\n      className: \"mt-1 text-sm text-gray-500\",\n      children: helpText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-2 space-y-2\",\n      children: options.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: `${name}-${option.value}`,\n          name: name,\n          type: \"radio\",\n          value: option.value,\n          checked: value === option.value,\n          onChange: onChange,\n          disabled: disabled || option.disabled,\n          required: required,\n          \"aria-invalid\": !!error,\n          \"aria-describedby\": errorId,\n          className: `\n                h-4 w-4 border-gray-300 text-blue-600\n                focus:outline-none focus:ring-2 focus:ring-blue-500\n                ${disabled || option.disabled ? 'opacity-50 cursor-not-allowed' : ''}\n              `\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `${name}-${option.value}`,\n          className: `ml-3 text-sm font-medium ${disabled || option.disabled ? 'text-gray-500' : 'text-gray-700'}`,\n          children: option.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 13\n        }, this)]\n      }, option.value, true, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      id: errorId,\n      className: \"mt-1 text-sm text-red-600\",\n      role: \"alert\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 407,\n    columnNumber: 5\n  }, this);\n}\n_c5 = AccessibleRadioGroup;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"AccessibleInput\");\n$RefreshReg$(_c2, \"AccessibleTextarea\");\n$RefreshReg$(_c3, \"AccessibleSelect\");\n$RefreshReg$(_c4, \"AccessibleCheckbox\");\n$RefreshReg$(_c5, \"AccessibleRadioGroup\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","AccessibleInput","id","label","type","value","onChange","placeholder","required","error","helpText","disabled","className","rest","errorId","undefined","helpTextId","describedBy","filter","Boolean","join","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","role","_c","AccessibleTextarea","rows","_c2","AccessibleSelect","options","map","option","_c3","AccessibleCheckbox","checked","_c4","AccessibleRadioGroup","name","legend","_c5","$RefreshReg$"],"sources":["C:/Users/juliu/Desktop/web/src/components/Accessibility/AccessibleInput.jsx"],"sourcesContent":["import React from 'react';\r\n\r\n/**\r\n * An accessible text input component\r\n * \r\n * @param {Object} props - Component props\r\n * @param {string} props.id - Unique ID (required for accessibility)\r\n * @param {string} props.label - Input label text\r\n * @param {string} props.type - Input type\r\n * @param {string} props.value - Input value\r\n * @param {Function} props.onChange - Change handler\r\n * @param {string} props.placeholder - Placeholder text\r\n * @param {boolean} props.required - Whether input is required\r\n * @param {string} props.error - Error message\r\n * @param {string} props.helpText - Help text\r\n * @param {boolean} props.disabled - Whether input is disabled\r\n * @param {string} props.className - Additional CSS classes\r\n * @returns {React.ReactElement} - Accessible input component\r\n */\r\nexport function AccessibleInput({\r\n  id,\r\n  label,\r\n  type = 'text',\r\n  value,\r\n  onChange,\r\n  placeholder = '',\r\n  required = false,\r\n  error = '',\r\n  helpText = '',\r\n  disabled = false,\r\n  className = '',\r\n  ...rest\r\n}) {\r\n  // Generate a unique ID for the error message if one exists\r\n  const errorId = error ? `${id}-error` : undefined;\r\n  // Generate a unique ID for the help text if one exists\r\n  const helpTextId = helpText ? `${id}-help` : undefined;\r\n  \r\n  // Combine all the IDs for aria-describedby\r\n  const describedBy = [errorId, helpTextId].filter(Boolean).join(' ') || undefined;\r\n  \r\n  return (\r\n    <div className=\"mb-4\">\r\n      <label \r\n        htmlFor={id}\r\n        className=\"block text-sm font-medium text-gray-700 mb-1\"\r\n      >\r\n        {label}\r\n        {required && <span className=\"text-red-500 ml-1\">*</span>}\r\n      </label>\r\n      \r\n      <input\r\n        id={id}\r\n        type={type}\r\n        value={value}\r\n        onChange={onChange}\r\n        placeholder={placeholder}\r\n        disabled={disabled}\r\n        required={required}\r\n        aria-invalid={!!error}\r\n        aria-describedby={describedBy}\r\n        className={`\r\n          w-full p-2 border rounded\r\n          focus:outline-none focus:ring-2 focus:ring-blue-500\r\n          ${error ? 'border-red-500' : 'border-gray-300'}\r\n          ${disabled ? 'bg-gray-100 text-gray-500 cursor-not-allowed' : ''}\r\n          ${className}\r\n        `}\r\n        {...rest}\r\n      />\r\n      \r\n      {helpText && (\r\n        <p \r\n          id={helpTextId} \r\n          className=\"mt-1 text-sm text-gray-500\"\r\n        >\r\n          {helpText}\r\n        </p>\r\n      )}\r\n      \r\n      {error && (\r\n        <p \r\n          id={errorId} \r\n          className=\"mt-1 text-sm text-red-600\"\r\n          role=\"alert\"\r\n        >\r\n          {error}\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n/**\r\n * An accessible textarea component\r\n * \r\n * @param {Object} props - Component props\r\n * @param {string} props.id - Unique ID (required for accessibility)\r\n * @param {string} props.label - Input label text\r\n * @param {string} props.value - Input value\r\n * @param {Function} props.onChange - Change handler\r\n * @param {string} props.placeholder - Placeholder text\r\n * @param {boolean} props.required - Whether input is required\r\n * @param {string} props.error - Error message\r\n * @param {string} props.helpText - Help text\r\n * @param {boolean} props.disabled - Whether input is disabled\r\n * @param {string} props.className - Additional CSS classes\r\n * @param {number} props.rows - Number of rows\r\n * @returns {React.ReactElement} - Accessible textarea component\r\n */\r\nexport function AccessibleTextarea({\r\n  id,\r\n  label,\r\n  value,\r\n  onChange,\r\n  placeholder = '',\r\n  required = false,\r\n  error = '',\r\n  helpText = '',\r\n  disabled = false,\r\n  className = '',\r\n  rows = 4,\r\n  ...rest\r\n}) {\r\n  // Generate a unique ID for the error message if one exists\r\n  const errorId = error ? `${id}-error` : undefined;\r\n  // Generate a unique ID for the help text if one exists\r\n  const helpTextId = helpText ? `${id}-help` : undefined;\r\n  \r\n  // Combine all the IDs for aria-describedby\r\n  const describedBy = [errorId, helpTextId].filter(Boolean).join(' ') || undefined;\r\n  \r\n  return (\r\n    <div className=\"mb-4\">\r\n      <label \r\n        htmlFor={id}\r\n        className=\"block text-sm font-medium text-gray-700 mb-1\"\r\n      >\r\n        {label}\r\n        {required && <span className=\"text-red-500 ml-1\">*</span>}\r\n      </label>\r\n      \r\n      <textarea\r\n        id={id}\r\n        value={value}\r\n        onChange={onChange}\r\n        placeholder={placeholder}\r\n        disabled={disabled}\r\n        required={required}\r\n        rows={rows}\r\n        aria-invalid={!!error}\r\n        aria-describedby={describedBy}\r\n        className={`\r\n          w-full p-2 border rounded\r\n          focus:outline-none focus:ring-2 focus:ring-blue-500\r\n          ${error ? 'border-red-500' : 'border-gray-300'}\r\n          ${disabled ? 'bg-gray-100 text-gray-500 cursor-not-allowed' : ''}\r\n          ${className}\r\n        `}\r\n        {...rest}\r\n      />\r\n      \r\n      {helpText && (\r\n        <p \r\n          id={helpTextId} \r\n          className=\"mt-1 text-sm text-gray-500\"\r\n        >\r\n          {helpText}\r\n        </p>\r\n      )}\r\n      \r\n      {error && (\r\n        <p \r\n          id={errorId} \r\n          className=\"mt-1 text-sm text-red-600\"\r\n          role=\"alert\"\r\n        >\r\n          {error}\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n/**\r\n * An accessible select component\r\n * \r\n * @param {Object} props - Component props\r\n * @param {string} props.id - Unique ID (required for accessibility)\r\n * @param {string} props.label - Input label text\r\n * @param {string} props.value - Selected value\r\n * @param {Function} props.onChange - Change handler\r\n * @param {Array} props.options - Select options\r\n * @param {boolean} props.required - Whether input is required\r\n * @param {string} props.error - Error message\r\n * @param {string} props.helpText - Help text\r\n * @param {boolean} props.disabled - Whether input is disabled\r\n * @param {string} props.className - Additional CSS classes\r\n * @returns {React.ReactElement} - Accessible select component\r\n */\r\nexport function AccessibleSelect({\r\n  id,\r\n  label,\r\n  value,\r\n  onChange,\r\n  options = [],\r\n  required = false,\r\n  error = '',\r\n  helpText = '',\r\n  disabled = false,\r\n  className = '',\r\n  ...rest\r\n}) {\r\n  // Generate a unique ID for the error message if one exists\r\n  const errorId = error ? `${id}-error` : undefined;\r\n  // Generate a unique ID for the help text if one exists\r\n  const helpTextId = helpText ? `${id}-help` : undefined;\r\n  \r\n  // Combine all the IDs for aria-describedby\r\n  const describedBy = [errorId, helpTextId].filter(Boolean).join(' ') || undefined;\r\n  \r\n  return (\r\n    <div className=\"mb-4\">\r\n      <label \r\n        htmlFor={id}\r\n        className=\"block text-sm font-medium text-gray-700 mb-1\"\r\n      >\r\n        {label}\r\n        {required && <span className=\"text-red-500 ml-1\">*</span>}\r\n      </label>\r\n      \r\n      <select\r\n        id={id}\r\n        value={value}\r\n        onChange={onChange}\r\n        disabled={disabled}\r\n        required={required}\r\n        aria-invalid={!!error}\r\n        aria-describedby={describedBy}\r\n        className={`\r\n          w-full p-2 border rounded\r\n          focus:outline-none focus:ring-2 focus:ring-blue-500\r\n          ${error ? 'border-red-500' : 'border-gray-300'}\r\n          ${disabled ? 'bg-gray-100 text-gray-500 cursor-not-allowed' : ''}\r\n          ${className}\r\n        `}\r\n        {...rest}\r\n      >\r\n        {options.map((option) => (\r\n          <option \r\n            key={option.value} \r\n            value={option.value}\r\n            disabled={option.disabled}\r\n          >\r\n            {option.label}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      \r\n      {helpText && (\r\n        <p \r\n          id={helpTextId} \r\n          className=\"mt-1 text-sm text-gray-500\"\r\n        >\r\n          {helpText}\r\n        </p>\r\n      )}\r\n      \r\n      {error && (\r\n        <p \r\n          id={errorId} \r\n          className=\"mt-1 text-sm text-red-600\"\r\n          role=\"alert\"\r\n        >\r\n          {error}\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n/**\r\n * An accessible checkbox component\r\n * \r\n * @param {Object} props - Component props\r\n * @param {string} props.id - Unique ID (required for accessibility)\r\n * @param {string} props.label - Checkbox label text\r\n * @param {boolean} props.checked - Whether checkbox is checked\r\n * @param {Function} props.onChange - Change handler\r\n * @param {boolean} props.required - Whether input is required\r\n * @param {string} props.error - Error message\r\n * @param {string} props.helpText - Help text\r\n * @param {boolean} props.disabled - Whether input is disabled\r\n * @param {string} props.className - Additional CSS classes\r\n * @returns {React.ReactElement} - Accessible checkbox component\r\n */\r\nexport function AccessibleCheckbox({\r\n  id,\r\n  label,\r\n  checked,\r\n  onChange,\r\n  required = false,\r\n  error = '',\r\n  helpText = '',\r\n  disabled = false,\r\n  className = '',\r\n  ...rest\r\n}) {\r\n  // Generate a unique ID for the error message if one exists\r\n  const errorId = error ? `${id}-error` : undefined;\r\n  // Generate a unique ID for the help text if one exists\r\n  const helpTextId = helpText ? `${id}-help` : undefined;\r\n  \r\n  // Combine all the IDs for aria-describedby\r\n  const describedBy = [errorId, helpTextId].filter(Boolean).join(' ') || undefined;\r\n  \r\n  return (\r\n    <div className=\"mb-4\">\r\n      <div className=\"flex items-start\">\r\n        <div className=\"flex items-center h-5\">\r\n          <input\r\n            id={id}\r\n            type=\"checkbox\"\r\n            checked={checked}\r\n            onChange={onChange}\r\n            disabled={disabled}\r\n            required={required}\r\n            aria-invalid={!!error}\r\n            aria-describedby={describedBy}\r\n            className={`\r\n              h-4 w-4 rounded border-gray-300 text-blue-600\r\n              focus:outline-none focus:ring-2 focus:ring-blue-500\r\n              ${disabled ? 'opacity-50 cursor-not-allowed' : ''}\r\n              ${className}\r\n            `}\r\n            {...rest}\r\n          />\r\n        </div>\r\n        <div className=\"ml-3 text-sm\">\r\n          <label \r\n            htmlFor={id}\r\n            className={`font-medium ${disabled ? 'text-gray-500' : 'text-gray-700'}`}\r\n          >\r\n            {label}\r\n            {required && <span className=\"text-red-500 ml-1\">*</span>}\r\n          </label>\r\n          \r\n          {helpText && (\r\n            <p \r\n              id={helpTextId} \r\n              className=\"text-gray-500\"\r\n            >\r\n              {helpText}\r\n            </p>\r\n          )}\r\n        </div>\r\n      </div>\r\n      \r\n      {error && (\r\n        <p \r\n          id={errorId} \r\n          className=\"mt-1 text-sm text-red-600\"\r\n          role=\"alert\"\r\n        >\r\n          {error}\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n/**\r\n * An accessible radio group component\r\n * \r\n * @param {Object} props - Component props\r\n * @param {string} props.name - Radio group name (required)\r\n * @param {string} props.legend - Group label text\r\n * @param {string} props.value - Selected value\r\n * @param {Function} props.onChange - Change handler\r\n * @param {Array} props.options - Radio options\r\n * @param {boolean} props.required - Whether selection is required\r\n * @param {string} props.error - Error message\r\n * @param {string} props.helpText - Help text\r\n * @param {boolean} props.disabled - Whether group is disabled\r\n * @param {string} props.className - Additional CSS classes\r\n * @returns {React.ReactElement} - Accessible radio group component\r\n */\r\nexport function AccessibleRadioGroup({\r\n  name,\r\n  legend,\r\n  value,\r\n  onChange,\r\n  options = [],\r\n  required = false,\r\n  error = '',\r\n  helpText = '',\r\n  disabled = false,\r\n  className = '',\r\n  ...rest\r\n}) {\r\n  // Generate a unique ID for the error message if one exists\r\n  const errorId = error ? `${name}-error` : undefined;\r\n  // Generate a unique ID for the help text if one exists\r\n  const helpTextId = helpText ? `${name}-help` : undefined;\r\n  \r\n  return (\r\n    <fieldset className={`mb-4 ${className}`} {...rest}>\r\n      <legend className=\"text-sm font-medium text-gray-700\">\r\n        {legend}\r\n        {required && <span className=\"text-red-500 ml-1\">*</span>}\r\n      </legend>\r\n      \r\n      {helpText && (\r\n        <p \r\n          id={helpTextId} \r\n          className=\"mt-1 text-sm text-gray-500\"\r\n        >\r\n          {helpText}\r\n        </p>\r\n      )}\r\n      \r\n      <div className=\"mt-2 space-y-2\">\r\n        {options.map((option) => (\r\n          <div key={option.value} className=\"flex items-center\">\r\n            <input\r\n              id={`${name}-${option.value}`}\r\n              name={name}\r\n              type=\"radio\"\r\n              value={option.value}\r\n              checked={value === option.value}\r\n              onChange={onChange}\r\n              disabled={disabled || option.disabled}\r\n              required={required}\r\n              aria-invalid={!!error}\r\n              aria-describedby={errorId}\r\n              className={`\r\n                h-4 w-4 border-gray-300 text-blue-600\r\n                focus:outline-none focus:ring-2 focus:ring-blue-500\r\n                ${disabled || option.disabled ? 'opacity-50 cursor-not-allowed' : ''}\r\n              `}\r\n            />\r\n            <label\r\n              htmlFor={`${name}-${option.value}`}\r\n              className={`ml-3 text-sm font-medium ${\r\n                disabled || option.disabled ? 'text-gray-500' : 'text-gray-700'\r\n              }`}\r\n            >\r\n              {option.label}\r\n            </label>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      \r\n      {error && (\r\n        <p \r\n          id={errorId} \r\n          className=\"mt-1 text-sm text-red-600\"\r\n          role=\"alert\"\r\n        >\r\n          {error}\r\n        </p>\r\n      )}\r\n    </fieldset>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}