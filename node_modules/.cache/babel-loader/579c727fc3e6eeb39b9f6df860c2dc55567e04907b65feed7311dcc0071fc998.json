{"ast":null,"code":"// src/services/analyticsService.js\n// Simple analytics service without external dependencies\n\nclass AnalyticsService {\n  constructor() {\n    this.events = [];\n    this.userId = null;\n    this.userProperties = {};\n    this.MAX_EVENTS = 100; // Limit local storage\n    this.STORAGE_KEY = 'analytics_events';\n\n    // Load stored events\n    this.loadEvents();\n  }\n\n  // Load events from local storage\n  loadEvents() {\n    try {\n      const storedEvents = localStorage.getItem(this.STORAGE_KEY);\n      if (storedEvents) {\n        this.events = JSON.parse(storedEvents);\n      }\n    } catch (error) {\n      console.error('Error loading analytics events:', error);\n      this.events = [];\n    }\n  }\n\n  // Save events to local storage\n  saveEvents() {\n    try {\n      localStorage.setItem(this.STORAGE_KEY, JSON.stringify(this.events));\n    } catch (error) {\n      console.error('Error saving analytics events:', error);\n    }\n  }\n\n  // Set user identification\n  identify(userId, userProperties = {}) {\n    this.userId = userId;\n    this.userProperties = {\n      ...userProperties\n    };\n\n    // Track identification event\n    this.trackEvent('user_identified', {\n      user_id: userId,\n      ...userProperties\n    });\n    console.log(`User identified: ${userId}`, userProperties);\n  }\n\n  // Track an event\n  trackEvent(eventName, eventProperties = {}) {\n    // Create event object\n    const event = {\n      event_name: eventName,\n      event_id: Math.random().toString(36).substring(2, 15),\n      timestamp: new Date().toISOString(),\n      user_id: this.userId,\n      properties: {\n        ...eventProperties\n      },\n      user_properties: {\n        ...this.userProperties\n      }\n    };\n\n    // Add to events array\n    this.events.unshift(event);\n\n    // Keep events array at manageable size\n    if (this.events.length > this.MAX_EVENTS) {\n      this.events = this.events.slice(0, this.MAX_EVENTS);\n    }\n\n    // Save to local storage\n    this.saveEvents();\n\n    // In production, send to server\n    if (process.env.NODE_ENV === 'production') {\n      this.sendEvent(event);\n    }\n    console.log(`[Analytics] ${eventName}`, eventProperties);\n  }\n\n  // Send event to server\n  sendEvent(event) {\n    try {\n      fetch('/api/analytics/events', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(event),\n        // Don't wait for response\n        keepalive: true\n      }).catch(() => {\n        // Ignore failures in analytics\n      });\n    } catch (error) {\n      // Fail silently, analytics should never break the app\n    }\n  }\n\n  // Subscription-specific tracking methods\n  trackSubscriptionStarted(planId, price, platform, isNewUser = true) {\n    this.trackEvent('subscription_started', {\n      plan_id: planId,\n      price,\n      platform,\n      is_new_user: isNewUser\n    });\n  }\n  trackSubscriptionCancelled(planId, reason, daysSinceSubscribed) {\n    this.trackEvent('subscription_cancelled', {\n      plan_id: planId,\n      reason,\n      days_since_subscribed: daysSinceSubscribed\n    });\n  }\n  trackSubscriptionRenewed(planId, renewalCount) {\n    this.trackEvent('subscription_renewed', {\n      plan_id: planId,\n      renewal_count: renewalCount\n    });\n  }\n  trackCodeActivated(platform, daysRemaining) {\n    this.trackEvent('code_activated', {\n      platform,\n      days_remaining: daysRemaining\n    });\n  }\n  trackPremiumFeatureUsed(featureName) {\n    this.trackEvent('premium_feature_used', {\n      feature_name: featureName\n    });\n  }\n  trackSubscriptionPageView(source) {\n    this.trackEvent('subscription_page_viewed', {\n      source\n    });\n  }\n\n  // Reset user data\n  clearUserData() {\n    this.userId = null;\n    this.userProperties = {};\n    console.log('User data cleared');\n  }\n\n  // For debugging - get all tracked events\n  getEvents() {\n    return [...this.events];\n  }\n}\nexport default new AnalyticsService();","map":{"version":3,"names":["AnalyticsService","constructor","events","userId","userProperties","MAX_EVENTS","STORAGE_KEY","loadEvents","storedEvents","localStorage","getItem","JSON","parse","error","console","saveEvents","setItem","stringify","identify","trackEvent","user_id","log","eventName","eventProperties","event","event_name","event_id","Math","random","toString","substring","timestamp","Date","toISOString","properties","user_properties","unshift","length","slice","process","env","NODE_ENV","sendEvent","fetch","method","headers","body","keepalive","catch","trackSubscriptionStarted","planId","price","platform","isNewUser","plan_id","is_new_user","trackSubscriptionCancelled","reason","daysSinceSubscribed","days_since_subscribed","trackSubscriptionRenewed","renewalCount","renewal_count","trackCodeActivated","daysRemaining","days_remaining","trackPremiumFeatureUsed","featureName","feature_name","trackSubscriptionPageView","source","clearUserData","getEvents"],"sources":["C:/Users/juliu/Desktop/web/src/services/analyticsService.js"],"sourcesContent":["// src/services/analyticsService.js\r\n// Simple analytics service without external dependencies\r\n\r\nclass AnalyticsService {\r\n  constructor() {\r\n    this.events = [];\r\n    this.userId = null;\r\n    this.userProperties = {};\r\n    this.MAX_EVENTS = 100; // Limit local storage\r\n    this.STORAGE_KEY = 'analytics_events';\r\n    \r\n    // Load stored events\r\n    this.loadEvents();\r\n  }\r\n\r\n  // Load events from local storage\r\n  loadEvents() {\r\n    try {\r\n      const storedEvents = localStorage.getItem(this.STORAGE_KEY);\r\n      if (storedEvents) {\r\n        this.events = JSON.parse(storedEvents);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading analytics events:', error);\r\n      this.events = [];\r\n    }\r\n  }\r\n\r\n  // Save events to local storage\r\n  saveEvents() {\r\n    try {\r\n      localStorage.setItem(this.STORAGE_KEY, JSON.stringify(this.events));\r\n    } catch (error) {\r\n      console.error('Error saving analytics events:', error);\r\n    }\r\n  }\r\n\r\n  // Set user identification\r\n  identify(userId, userProperties = {}) {\r\n    this.userId = userId;\r\n    this.userProperties = { ...userProperties };\r\n    \r\n    // Track identification event\r\n    this.trackEvent('user_identified', {\r\n      user_id: userId,\r\n      ...userProperties\r\n    });\r\n    \r\n    console.log(`User identified: ${userId}`, userProperties);\r\n  }\r\n\r\n  // Track an event\r\n  trackEvent(eventName, eventProperties = {}) {\r\n    // Create event object\r\n    const event = {\r\n      event_name: eventName,\r\n      event_id: Math.random().toString(36).substring(2, 15),\r\n      timestamp: new Date().toISOString(),\r\n      user_id: this.userId,\r\n      properties: { ...eventProperties },\r\n      user_properties: { ...this.userProperties }\r\n    };\r\n    \r\n    // Add to events array\r\n    this.events.unshift(event);\r\n    \r\n    // Keep events array at manageable size\r\n    if (this.events.length > this.MAX_EVENTS) {\r\n      this.events = this.events.slice(0, this.MAX_EVENTS);\r\n    }\r\n    \r\n    // Save to local storage\r\n    this.saveEvents();\r\n    \r\n    // In production, send to server\r\n    if (process.env.NODE_ENV === 'production') {\r\n      this.sendEvent(event);\r\n    }\r\n    \r\n    console.log(`[Analytics] ${eventName}`, eventProperties);\r\n  }\r\n\r\n  // Send event to server\r\n  sendEvent(event) {\r\n    try {\r\n      fetch('/api/analytics/events', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(event),\r\n        // Don't wait for response\r\n        keepalive: true\r\n      }).catch(() => {\r\n        // Ignore failures in analytics\r\n      });\r\n    } catch (error) {\r\n      // Fail silently, analytics should never break the app\r\n    }\r\n  }\r\n\r\n  // Subscription-specific tracking methods\r\n  trackSubscriptionStarted(planId, price, platform, isNewUser = true) {\r\n    this.trackEvent('subscription_started', {\r\n      plan_id: planId,\r\n      price,\r\n      platform,\r\n      is_new_user: isNewUser\r\n    });\r\n  }\r\n\r\n  trackSubscriptionCancelled(planId, reason, daysSinceSubscribed) {\r\n    this.trackEvent('subscription_cancelled', {\r\n      plan_id: planId,\r\n      reason,\r\n      days_since_subscribed: daysSinceSubscribed\r\n    });\r\n  }\r\n\r\n  trackSubscriptionRenewed(planId, renewalCount) {\r\n    this.trackEvent('subscription_renewed', {\r\n      plan_id: planId,\r\n      renewal_count: renewalCount\r\n    });\r\n  }\r\n\r\n  trackCodeActivated(platform, daysRemaining) {\r\n    this.trackEvent('code_activated', {\r\n      platform,\r\n      days_remaining: daysRemaining\r\n    });\r\n  }\r\n\r\n  trackPremiumFeatureUsed(featureName) {\r\n    this.trackEvent('premium_feature_used', {\r\n      feature_name: featureName\r\n    });\r\n  }\r\n\r\n  trackSubscriptionPageView(source) {\r\n    this.trackEvent('subscription_page_viewed', {\r\n      source\r\n    });\r\n  }\r\n\r\n  // Reset user data\r\n  clearUserData() {\r\n    this.userId = null;\r\n    this.userProperties = {};\r\n    console.log('User data cleared');\r\n  }\r\n\r\n  // For debugging - get all tracked events\r\n  getEvents() {\r\n    return [...this.events];\r\n  }\r\n}\r\n\r\nexport default new AnalyticsService();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}