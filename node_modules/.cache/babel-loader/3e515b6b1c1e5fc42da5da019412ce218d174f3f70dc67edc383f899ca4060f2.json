{"ast":null,"code":"/**\r\n * Streamlined Settings Manager - A singleton to manage theme settings\r\n */\n\n// Single source of truth for current settings state\nconst currentState = {\n  appearance: null,\n  accessibility: null,\n  language: null\n};\n\n// Single active operation flag\nlet operationInProgress = false;\nlet pendingOperation = null;\n\n/**\r\n * Deep equality check for objects\r\n */\nconst isEqual = (obj1, obj2) => {\n  if (obj1 === obj2) return true;\n  if (!obj1 || !obj2) return false;\n  if (typeof obj1 !== 'object' || typeof obj2 !== 'object') return obj1 === obj2;\n  const keys1 = Object.keys(obj1);\n  const keys2 = Object.keys(obj2);\n  if (keys1.length !== keys2.length) return false;\n  return keys1.every(key => {\n    if (typeof obj1[key] === 'object' && obj1[key] !== null && typeof obj2[key] === 'object' && obj2[key] !== null) {\n      return isEqual(obj1[key], obj2[key]);\n    }\n    return obj1[key] === obj2[key];\n  });\n};\n\n/**\r\n * Apply settings using a single operation approach\r\n */\nconst applySettings = settings => {\n  var _settings$preferences;\n  if (!settings) return false;\n\n  // Check if settings have actually changed\n  const hasAppearanceChanged = settings.appearance && !isEqual(currentState.appearance, settings.appearance);\n  const hasAccessibilityChanged = settings.accessibility && !isEqual(currentState.accessibility, settings.accessibility);\n  const hasLanguageChanged = ((_settings$preferences = settings.preferences) === null || _settings$preferences === void 0 ? void 0 : _settings$preferences.language) && currentState.language !== settings.preferences.language;\n\n  // Skip if nothing has changed\n  if (!hasAppearanceChanged && !hasAccessibilityChanged && !hasLanguageChanged) {\n    return true;\n  }\n\n  // If operation in progress, queue this one and exit\n  if (operationInProgress) {\n    pendingOperation = {\n      ...settings\n    };\n    return true;\n  }\n\n  // Lock operations\n  operationInProgress = true;\n  try {\n    // Apply appearance settings if changed\n    if (hasAppearanceChanged) {\n      const {\n        fontSize,\n        colorScheme,\n        darkMode\n      } = settings.appearance;\n\n      // Apply font size\n      document.documentElement.classList.remove('text-sm', 'text-base', 'text-lg');\n      if (fontSize === 'small') {\n        document.documentElement.classList.add('text-sm');\n      } else if (fontSize === 'medium') {\n        document.documentElement.classList.add('text-base');\n      } else if (fontSize === 'large') {\n        document.documentElement.classList.add('text-lg');\n      }\n\n      // Apply color scheme\n      const colorSchemeClasses = ['theme-blue', 'theme-purple', 'theme-green', 'theme-red', 'theme-amber', 'theme-indigo'];\n      document.documentElement.classList.remove(...colorSchemeClasses);\n      document.documentElement.classList.add(`theme-${colorScheme}`);\n\n      // Apply dark mode\n      if (darkMode) {\n        document.documentElement.classList.add('dark-mode');\n        document.body.classList.add('dark-mode');\n      } else {\n        document.documentElement.classList.remove('dark-mode');\n        document.body.classList.remove('dark-mode');\n      }\n\n      // Set theme property\n      document.documentElement.style.setProperty('--current-theme', colorScheme);\n      document.documentElement.setAttribute('data-theme', darkMode ? 'dark' : 'light');\n\n      // Update current state\n      currentState.appearance = {\n        ...settings.appearance\n      };\n    }\n\n    // Apply accessibility settings if changed\n    if (hasAccessibilityChanged) {\n      const {\n        highContrast,\n        reducedMotion,\n        largerClickTargets,\n        textScaling,\n        screenReaderOptimized\n      } = settings.accessibility;\n\n      // Apply high contrast\n      if (highContrast) {\n        document.documentElement.classList.add('high-contrast');\n      } else {\n        document.documentElement.classList.remove('high-contrast');\n      }\n\n      // Apply reduced motion\n      if (reducedMotion) {\n        document.documentElement.classList.add('reduced-motion');\n      } else {\n        document.documentElement.classList.remove('reduced-motion');\n      }\n\n      // Apply larger click targets\n      if (largerClickTargets) {\n        document.documentElement.classList.add('larger-targets');\n      } else {\n        document.documentElement.classList.remove('larger-targets');\n      }\n\n      // Apply text scaling\n      if (textScaling && textScaling !== 100) {\n        document.documentElement.style.setProperty('--text-scale-ratio', `${textScaling / 100}`);\n        document.documentElement.classList.add('custom-text-scaling');\n      } else {\n        document.documentElement.classList.remove('custom-text-scaling');\n        document.documentElement.style.removeProperty('--text-scale-ratio');\n      }\n\n      // Apply screen reader optimizations\n      if (screenReaderOptimized) {\n        document.documentElement.setAttribute('data-screen-reader-optimized', 'true');\n      } else {\n        document.documentElement.removeAttribute('data-screen-reader-optimized');\n      }\n\n      // Update current state\n      currentState.accessibility = {\n        ...settings.accessibility\n      };\n    }\n\n    // Apply language settings if changed\n    if (hasLanguageChanged) {\n      document.documentElement.setAttribute('lang', settings.preferences.language.split('-')[0]);\n      currentState.language = settings.preferences.language;\n    }\n    return true;\n  } catch (error) {\n    console.error('Error applying settings:', error);\n    return false;\n  } finally {\n    // Release lock\n    operationInProgress = false;\n\n    // Process any pending operation\n    if (pendingOperation) {\n      const nextOperation = pendingOperation;\n      pendingOperation = null;\n      setTimeout(() => applySettings(nextOperation), 0);\n    }\n  }\n};\n\n/**\r\n * Initialize settings manager\r\n */\nconst initialize = () => {\n  // Load the CSS file for dark mode and accessibility if not already loaded\n  if (!document.getElementById('accessibility-darkmode-css')) {\n    const link = document.createElement('link');\n    link.id = 'accessibility-darkmode-css';\n    link.rel = 'stylesheet';\n    link.href = '/accessibility-darkmode.css';\n    document.head.appendChild(link);\n  }\n};\n\n// Initialize on import\ninitialize();\n\n// Export the manager\nconst settingsManager = {\n  applySettings,\n  initialize\n};\nexport default settingsManager;","map":{"version":3,"names":["currentState","appearance","accessibility","language","operationInProgress","pendingOperation","isEqual","obj1","obj2","keys1","Object","keys","keys2","length","every","key","applySettings","settings","_settings$preferences","hasAppearanceChanged","hasAccessibilityChanged","hasLanguageChanged","preferences","fontSize","colorScheme","darkMode","document","documentElement","classList","remove","add","colorSchemeClasses","body","style","setProperty","setAttribute","highContrast","reducedMotion","largerClickTargets","textScaling","screenReaderOptimized","removeProperty","removeAttribute","split","error","console","nextOperation","setTimeout","initialize","getElementById","link","createElement","id","rel","href","head","appendChild","settingsManager"],"sources":["C:/Users/juliu/Desktop/web/src/utils/settingsManager.js"],"sourcesContent":["/**\r\n * Streamlined Settings Manager - A singleton to manage theme settings\r\n */\r\n\r\n// Single source of truth for current settings state\r\nconst currentState = {\r\n    appearance: null,\r\n    accessibility: null,\r\n    language: null\r\n  };\r\n  \r\n  // Single active operation flag\r\n  let operationInProgress = false;\r\n  let pendingOperation = null;\r\n  \r\n  /**\r\n   * Deep equality check for objects\r\n   */\r\n  const isEqual = (obj1, obj2) => {\r\n    if (obj1 === obj2) return true;\r\n    if (!obj1 || !obj2) return false;\r\n    if (typeof obj1 !== 'object' || typeof obj2 !== 'object') return obj1 === obj2;\r\n    \r\n    const keys1 = Object.keys(obj1);\r\n    const keys2 = Object.keys(obj2);\r\n    \r\n    if (keys1.length !== keys2.length) return false;\r\n    \r\n    return keys1.every(key => {\r\n      if (typeof obj1[key] === 'object' && obj1[key] !== null &&\r\n          typeof obj2[key] === 'object' && obj2[key] !== null) {\r\n        return isEqual(obj1[key], obj2[key]);\r\n      }\r\n      return obj1[key] === obj2[key];\r\n    });\r\n  };\r\n  \r\n  /**\r\n   * Apply settings using a single operation approach\r\n   */\r\n  const applySettings = (settings) => {\r\n    if (!settings) return false;\r\n    \r\n    // Check if settings have actually changed\r\n    const hasAppearanceChanged = settings.appearance && !isEqual(currentState.appearance, settings.appearance);\r\n    const hasAccessibilityChanged = settings.accessibility && !isEqual(currentState.accessibility, settings.accessibility);\r\n    const hasLanguageChanged = settings.preferences?.language && currentState.language !== settings.preferences.language;\r\n    \r\n    // Skip if nothing has changed\r\n    if (!hasAppearanceChanged && !hasAccessibilityChanged && !hasLanguageChanged) {\r\n      return true;\r\n    }\r\n    \r\n    // If operation in progress, queue this one and exit\r\n    if (operationInProgress) {\r\n      pendingOperation = { ...settings };\r\n      return true;\r\n    }\r\n    \r\n    // Lock operations\r\n    operationInProgress = true;\r\n    \r\n    try {\r\n      // Apply appearance settings if changed\r\n      if (hasAppearanceChanged) {\r\n        const { fontSize, colorScheme, darkMode } = settings.appearance;\r\n        \r\n        // Apply font size\r\n        document.documentElement.classList.remove('text-sm', 'text-base', 'text-lg');\r\n        if (fontSize === 'small') {\r\n          document.documentElement.classList.add('text-sm');\r\n        } else if (fontSize === 'medium') {\r\n          document.documentElement.classList.add('text-base');\r\n        } else if (fontSize === 'large') {\r\n          document.documentElement.classList.add('text-lg');\r\n        }\r\n        \r\n        // Apply color scheme\r\n        const colorSchemeClasses = [\r\n          'theme-blue', 'theme-purple', 'theme-green', \r\n          'theme-red', 'theme-amber', 'theme-indigo'\r\n        ];\r\n        document.documentElement.classList.remove(...colorSchemeClasses);\r\n        document.documentElement.classList.add(`theme-${colorScheme}`);\r\n        \r\n        // Apply dark mode\r\n        if (darkMode) {\r\n          document.documentElement.classList.add('dark-mode');\r\n          document.body.classList.add('dark-mode');\r\n        } else {\r\n          document.documentElement.classList.remove('dark-mode');\r\n          document.body.classList.remove('dark-mode');\r\n        }\r\n        \r\n        // Set theme property\r\n        document.documentElement.style.setProperty('--current-theme', colorScheme);\r\n        document.documentElement.setAttribute('data-theme', darkMode ? 'dark' : 'light');\r\n        \r\n        // Update current state\r\n        currentState.appearance = { ...settings.appearance };\r\n      }\r\n      \r\n      // Apply accessibility settings if changed\r\n      if (hasAccessibilityChanged) {\r\n        const { highContrast, reducedMotion, largerClickTargets, textScaling, screenReaderOptimized } = settings.accessibility;\r\n        \r\n        // Apply high contrast\r\n        if (highContrast) {\r\n          document.documentElement.classList.add('high-contrast');\r\n        } else {\r\n          document.documentElement.classList.remove('high-contrast');\r\n        }\r\n        \r\n        // Apply reduced motion\r\n        if (reducedMotion) {\r\n          document.documentElement.classList.add('reduced-motion');\r\n        } else {\r\n          document.documentElement.classList.remove('reduced-motion');\r\n        }\r\n        \r\n        // Apply larger click targets\r\n        if (largerClickTargets) {\r\n          document.documentElement.classList.add('larger-targets');\r\n        } else {\r\n          document.documentElement.classList.remove('larger-targets');\r\n        }\r\n        \r\n        // Apply text scaling\r\n        if (textScaling && textScaling !== 100) {\r\n          document.documentElement.style.setProperty('--text-scale-ratio', `${textScaling / 100}`);\r\n          document.documentElement.classList.add('custom-text-scaling');\r\n        } else {\r\n          document.documentElement.classList.remove('custom-text-scaling');\r\n          document.documentElement.style.removeProperty('--text-scale-ratio');\r\n        }\r\n        \r\n        // Apply screen reader optimizations\r\n        if (screenReaderOptimized) {\r\n          document.documentElement.setAttribute('data-screen-reader-optimized', 'true');\r\n        } else {\r\n          document.documentElement.removeAttribute('data-screen-reader-optimized');\r\n        }\r\n        \r\n        // Update current state\r\n        currentState.accessibility = { ...settings.accessibility };\r\n      }\r\n      \r\n      // Apply language settings if changed\r\n      if (hasLanguageChanged) {\r\n        document.documentElement.setAttribute('lang', settings.preferences.language.split('-')[0]);\r\n        currentState.language = settings.preferences.language;\r\n      }\r\n      \r\n      return true;\r\n    } catch (error) {\r\n      console.error('Error applying settings:', error);\r\n      return false;\r\n    } finally {\r\n      // Release lock\r\n      operationInProgress = false;\r\n      \r\n      // Process any pending operation\r\n      if (pendingOperation) {\r\n        const nextOperation = pendingOperation;\r\n        pendingOperation = null;\r\n        setTimeout(() => applySettings(nextOperation), 0);\r\n      }\r\n    }\r\n  };\r\n  \r\n  /**\r\n   * Initialize settings manager\r\n   */\r\n  const initialize = () => {\r\n    // Load the CSS file for dark mode and accessibility if not already loaded\r\n    if (!document.getElementById('accessibility-darkmode-css')) {\r\n      const link = document.createElement('link');\r\n      link.id = 'accessibility-darkmode-css';\r\n      link.rel = 'stylesheet';\r\n      link.href = '/accessibility-darkmode.css';\r\n      document.head.appendChild(link);\r\n    }\r\n  };\r\n  \r\n  // Initialize on import\r\n  initialize();\r\n  \r\n  // Export the manager\r\n  const settingsManager = {\r\n    applySettings,\r\n    initialize\r\n  };\r\n  \r\n  export default settingsManager;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}