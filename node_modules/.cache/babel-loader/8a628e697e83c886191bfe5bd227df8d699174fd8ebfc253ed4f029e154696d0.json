{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\juliu\\\\Desktop\\\\web\\\\src\\\\components\\\\Offline\\\\EnhancedOfflineIndicator.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { triggerSync } from '../../serviceWorkerRegistration';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EnhancedOfflineIndicator() {\n  _s();\n  const [isOffline, setIsOffline] = useState(!navigator.onLine);\n  const [showIndicator, setShowIndicator] = useState(false);\n  const [lastSynced, setLastSynced] = useState(localStorage.getItem('lastSyncTime') || null);\n  const [unsyncedChanges, setUnsyncedChanges] = useState(0);\n  const [showUpdatePrompt, setShowUpdatePrompt] = useState(false);\n\n  // Update online/offline status\n  useEffect(() => {\n    const handleOnline = () => {\n      setIsOffline(false);\n      setShowIndicator(true);\n\n      // Trigger sync when coming back online\n      triggerSync();\n\n      // Hide the indicator after 5 seconds when going back online\n      const timer = setTimeout(() => {\n        setShowIndicator(false);\n      }, 5000);\n      return () => clearTimeout(timer);\n    };\n    const handleOffline = () => {\n      setIsOffline(true);\n      setShowIndicator(true);\n    };\n\n    // Handle service worker updates\n    const handleServiceWorkerUpdated = () => {\n      setShowUpdatePrompt(true);\n    };\n\n    // Handle service worker installation\n    const handleServiceWorkerInstalled = () => {\n      // Show a notification that the app is now available offline\n      if ('serviceWorker' in navigator) {\n        const notification = {\n          title: 'TravelEase',\n          options: {\n            body: 'The app is now available for offline use.',\n            icon: '/logo192.png',\n            badge: '/favicon.ico'\n          }\n        };\n\n        // Check if notification permission is granted\n        if (Notification.permission === 'granted') {\n          navigator.serviceWorker.ready.then(registration => {\n            registration.showNotification(notification.title, notification.options);\n          });\n        }\n      }\n    };\n\n    // Check for unsynced changes\n    const checkUnsyncedChanges = () => {\n      const unsynced = JSON.parse(localStorage.getItem('unsyncedChanges') || '[]');\n      setUnsyncedChanges(unsynced.length);\n    };\n\n    // Listen for messages from service worker\n    const handleServiceWorkerMessage = event => {\n      if (event.data.type === 'SYNC_COMPLETED') {\n        setLastSynced(event.data.timestamp);\n        checkUnsyncedChanges();\n      }\n    };\n\n    // Set initial state\n    setIsOffline(!navigator.onLine);\n    checkUnsyncedChanges();\n    if (!navigator.onLine && unsyncedChanges > 0) {\n      setShowIndicator(true);\n    }\n\n    // Add event listeners\n    window.addEventListener('online', handleOnline);\n    window.addEventListener('offline', handleOffline);\n    window.addEventListener('serviceWorkerUpdated', handleServiceWorkerUpdated);\n    window.addEventListener('serviceWorkerInstalled', handleServiceWorkerInstalled);\n    if ('serviceWorker' in navigator && navigator.serviceWorker.controller) {\n      navigator.serviceWorker.addEventListener('message', handleServiceWorkerMessage);\n    }\n\n    // Set up interval to check unsynced changes\n    const interval = setInterval(checkUnsyncedChanges, 10000); // Check every 10 seconds\n\n    // Clean up event listeners\n    return () => {\n      window.removeEventListener('online', handleOnline);\n      window.removeEventListener('offline', handleOffline);\n      window.removeEventListener('serviceWorkerUpdated', handleServiceWorkerUpdated);\n      window.removeEventListener('serviceWorkerInstalled', handleServiceWorkerInstalled);\n      if ('serviceWorker' in navigator && navigator.serviceWorker.controller) {\n        navigator.serviceWorker.removeEventListener('message', handleServiceWorkerMessage);\n      }\n      clearInterval(interval);\n    };\n  }, [unsyncedChanges]);\n\n  // Format last synced time\n  const formatLastSynced = () => {\n    if (!lastSynced) return 'Never';\n    try {\n      const date = new Date(lastSynced);\n      return date.toLocaleString();\n    } catch (error) {\n      return 'Unknown';\n    }\n  };\n\n  // Handle refresh for service worker update\n  const handleRefreshApp = () => {\n    // Skip waiting and reload to activate new service worker\n    if ('serviceWorker' in navigator && navigator.serviceWorker.controller) {\n      navigator.serviceWorker.controller.postMessage({\n        action: 'skipWaiting'\n      });\n    }\n\n    // Reload the page\n    window.location.reload();\n  };\n\n  // Handle manual sync\n  const handleManualSync = () => {\n    if (navigator.onLine) {\n      triggerSync();\n\n      // Show brief message\n      const syncMessage = document.getElementById('sync-message');\n      if (syncMessage) {\n        syncMessage.classList.remove('opacity-0');\n        syncMessage.classList.add('opacity-100');\n        setTimeout(() => {\n          syncMessage.classList.remove('opacity-100');\n          syncMessage.classList.add('opacity-0');\n        }, 3000);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [showIndicator && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `fixed bottom-4 left-4 rounded-lg shadow-lg z-50 p-4 transition-all duration-300 ${isOffline ? 'bg-red-500 text-white' : 'bg-green-500 text-white'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `w-3 h-3 rounded-full mr-2 ${isOffline ? 'bg-red-200 animate-pulse' : 'bg-green-200'}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-medium\",\n          children: isOffline ? 'You are offline' : 'Connected'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), !isOffline && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowIndicator(false),\n          className: \"ml-4 text-white hover:text-gray-200\",\n          \"aria-label\": \"Close\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"w-4 h-4\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            viewBox: \"0 0 24 24\",\n            xmlns: \"http://www.w3.org/2000/svg\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: \"2\",\n              d: \"M6 18L18 6M6 6l12 12\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xs mt-1\",\n        children: isOffline ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Changes will be saved locally and synchronized when you reconnect.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 19\n            }, this), \"Last synced: \", formatLastSynced()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 17\n          }, this), unsyncedChanges > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-1 font-bold\",\n            children: [unsyncedChanges, \" change\", unsyncedChanges !== 1 ? 's' : '', \" pending synchronization\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Your data has been synchronized.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 17\n          }, this), unsyncedChanges > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center mt-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"font-bold mr-2\",\n              children: [unsyncedChanges, \" change\", unsyncedChanges !== 1 ? 's' : '', \" pending synchronization\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleManualSync,\n              className: \"bg-white text-green-600 px-2 py-0.5 rounded text-xs hover:bg-green-100\",\n              children: \"Sync Now\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this), showUpdatePrompt && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed bottom-4 right-4 rounded-lg shadow-lg z-50 p-4 bg-blue-600 text-white max-w-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-start\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"w-5 h-5 mr-2\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            viewBox: \"0 0 24 24\",\n            xmlns: \"http://www.w3.org/2000/svg\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: \"2\",\n              d: \"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-medium\",\n            children: \"Update Available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowUpdatePrompt(false),\n          className: \"text-white hover:text-gray-200\",\n          \"aria-label\": \"Close\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"w-4 h-4\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            viewBox: \"0 0 24 24\",\n            xmlns: \"http://www.w3.org/2000/svg\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: \"2\",\n              d: \"M6 18L18 6M6 6l12 12\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm mt-2\",\n        children: \"A new version of TravelEase is available. Refresh to update.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRefreshApp,\n        className: \"mt-3 bg-white text-blue-600 px-3 py-1 rounded hover:bg-blue-50 w-full\",\n        children: \"Update Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"sync-message\",\n      className: \"fixed top-4 right-4 bg-blue-600 text-white px-4 py-2 rounded shadow-lg z-50 opacity-0 transition-opacity duration-300\",\n      children: \"Synchronizing data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(EnhancedOfflineIndicator, \"Czd98nCzZgJbM+KURiI0p5lG6f0=\");\n_c = EnhancedOfflineIndicator;\nexport default EnhancedOfflineIndicator;\nvar _c;\n$RefreshReg$(_c, \"EnhancedOfflineIndicator\");","map":{"version":3,"names":["React","useState","useEffect","triggerSync","jsxDEV","_jsxDEV","Fragment","_Fragment","EnhancedOfflineIndicator","_s","isOffline","setIsOffline","navigator","onLine","showIndicator","setShowIndicator","lastSynced","setLastSynced","localStorage","getItem","unsyncedChanges","setUnsyncedChanges","showUpdatePrompt","setShowUpdatePrompt","handleOnline","timer","setTimeout","clearTimeout","handleOffline","handleServiceWorkerUpdated","handleServiceWorkerInstalled","notification","title","options","body","icon","badge","Notification","permission","serviceWorker","ready","then","registration","showNotification","checkUnsyncedChanges","unsynced","JSON","parse","length","handleServiceWorkerMessage","event","data","type","timestamp","window","addEventListener","controller","interval","setInterval","removeEventListener","clearInterval","formatLastSynced","date","Date","toLocaleString","error","handleRefreshApp","postMessage","action","location","reload","handleManualSync","syncMessage","document","getElementById","classList","remove","add","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","fill","stroke","viewBox","xmlns","strokeLinecap","strokeLinejoin","strokeWidth","d","id","_c","$RefreshReg$"],"sources":["C:/Users/juliu/Desktop/web/src/components/Offline/EnhancedOfflineIndicator.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { triggerSync } from '../../serviceWorkerRegistration';\r\n\r\nfunction EnhancedOfflineIndicator() {\r\n  const [isOffline, setIsOffline] = useState(!navigator.onLine);\r\n  const [showIndicator, setShowIndicator] = useState(false);\r\n  const [lastSynced, setLastSynced] = useState(localStorage.getItem('lastSyncTime') || null);\r\n  const [unsyncedChanges, setUnsyncedChanges] = useState(0);\r\n  const [showUpdatePrompt, setShowUpdatePrompt] = useState(false);\r\n  \r\n  // Update online/offline status\r\n  useEffect(() => {\r\n    const handleOnline = () => {\r\n      setIsOffline(false);\r\n      setShowIndicator(true);\r\n      \r\n      // Trigger sync when coming back online\r\n      triggerSync();\r\n      \r\n      // Hide the indicator after 5 seconds when going back online\r\n      const timer = setTimeout(() => {\r\n        setShowIndicator(false);\r\n      }, 5000);\r\n      \r\n      return () => clearTimeout(timer);\r\n    };\r\n    \r\n    const handleOffline = () => {\r\n      setIsOffline(true);\r\n      setShowIndicator(true);\r\n    };\r\n    \r\n    // Handle service worker updates\r\n    const handleServiceWorkerUpdated = () => {\r\n      setShowUpdatePrompt(true);\r\n    };\r\n    \r\n    // Handle service worker installation\r\n    const handleServiceWorkerInstalled = () => {\r\n      // Show a notification that the app is now available offline\r\n      if ('serviceWorker' in navigator) {\r\n        const notification = {\r\n          title: 'TravelEase',\r\n          options: {\r\n            body: 'The app is now available for offline use.',\r\n            icon: '/logo192.png',\r\n            badge: '/favicon.ico'\r\n          }\r\n        };\r\n        \r\n        // Check if notification permission is granted\r\n        if (Notification.permission === 'granted') {\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.showNotification(notification.title, notification.options);\r\n          });\r\n        }\r\n      }\r\n    };\r\n    \r\n    // Check for unsynced changes\r\n    const checkUnsyncedChanges = () => {\r\n      const unsynced = JSON.parse(localStorage.getItem('unsyncedChanges') || '[]');\r\n      setUnsyncedChanges(unsynced.length);\r\n    };\r\n    \r\n    // Listen for messages from service worker\r\n    const handleServiceWorkerMessage = (event) => {\r\n      if (event.data.type === 'SYNC_COMPLETED') {\r\n        setLastSynced(event.data.timestamp);\r\n        checkUnsyncedChanges();\r\n      }\r\n    };\r\n    \r\n    // Set initial state\r\n    setIsOffline(!navigator.onLine);\r\n    checkUnsyncedChanges();\r\n    \r\n    if (!navigator.onLine && unsyncedChanges > 0) {\r\n      setShowIndicator(true);\r\n    }\r\n    \r\n    // Add event listeners\r\n    window.addEventListener('online', handleOnline);\r\n    window.addEventListener('offline', handleOffline);\r\n    window.addEventListener('serviceWorkerUpdated', handleServiceWorkerUpdated);\r\n    window.addEventListener('serviceWorkerInstalled', handleServiceWorkerInstalled);\r\n    \r\n    if ('serviceWorker' in navigator && navigator.serviceWorker.controller) {\r\n      navigator.serviceWorker.addEventListener('message', handleServiceWorkerMessage);\r\n    }\r\n    \r\n    // Set up interval to check unsynced changes\r\n    const interval = setInterval(checkUnsyncedChanges, 10000); // Check every 10 seconds\r\n    \r\n    // Clean up event listeners\r\n    return () => {\r\n      window.removeEventListener('online', handleOnline);\r\n      window.removeEventListener('offline', handleOffline);\r\n      window.removeEventListener('serviceWorkerUpdated', handleServiceWorkerUpdated);\r\n      window.removeEventListener('serviceWorkerInstalled', handleServiceWorkerInstalled);\r\n      \r\n      if ('serviceWorker' in navigator && navigator.serviceWorker.controller) {\r\n        navigator.serviceWorker.removeEventListener('message', handleServiceWorkerMessage);\r\n      }\r\n      \r\n      clearInterval(interval);\r\n    };\r\n  }, [unsyncedChanges]);\r\n  \r\n  // Format last synced time\r\n  const formatLastSynced = () => {\r\n    if (!lastSynced) return 'Never';\r\n    \r\n    try {\r\n      const date = new Date(lastSynced);\r\n      return date.toLocaleString();\r\n    } catch (error) {\r\n      return 'Unknown';\r\n    }\r\n  };\r\n  \r\n  // Handle refresh for service worker update\r\n  const handleRefreshApp = () => {\r\n    // Skip waiting and reload to activate new service worker\r\n    if ('serviceWorker' in navigator && navigator.serviceWorker.controller) {\r\n      navigator.serviceWorker.controller.postMessage({ action: 'skipWaiting' });\r\n    }\r\n    \r\n    // Reload the page\r\n    window.location.reload();\r\n  };\r\n  \r\n  // Handle manual sync\r\n  const handleManualSync = () => {\r\n    if (navigator.onLine) {\r\n      triggerSync();\r\n      \r\n      // Show brief message\r\n      const syncMessage = document.getElementById('sync-message');\r\n      if (syncMessage) {\r\n        syncMessage.classList.remove('opacity-0');\r\n        syncMessage.classList.add('opacity-100');\r\n        \r\n        setTimeout(() => {\r\n          syncMessage.classList.remove('opacity-100');\r\n          syncMessage.classList.add('opacity-0');\r\n        }, 3000);\r\n      }\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <>\r\n      {/* Offline/Online Indicator */}\r\n      {showIndicator && (\r\n        <div className={`fixed bottom-4 left-4 rounded-lg shadow-lg z-50 p-4 transition-all duration-300 ${\r\n          isOffline ? 'bg-red-500 text-white' : 'bg-green-500 text-white'\r\n        }`}>\r\n          <div className=\"flex items-center\">\r\n            <div className={`w-3 h-3 rounded-full mr-2 ${\r\n              isOffline ? 'bg-red-200 animate-pulse' : 'bg-green-200'\r\n            }`}></div>\r\n            <p className=\"font-medium\">\r\n              {isOffline ? 'You are offline' : 'Connected'}\r\n            </p>\r\n            {!isOffline && (\r\n              <button\r\n                onClick={() => setShowIndicator(false)}\r\n                className=\"ml-4 text-white hover:text-gray-200\"\r\n                aria-label=\"Close\"\r\n              >\r\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\r\n                </svg>\r\n              </button>\r\n            )}\r\n          </div>\r\n          \r\n          <div className=\"text-xs mt-1\">\r\n            {isOffline ? (\r\n              <div>\r\n                <p>\r\n                  Changes will be saved locally and synchronized when you reconnect.\r\n                  <br />\r\n                  Last synced: {formatLastSynced()}\r\n                </p>\r\n                {unsyncedChanges > 0 && (\r\n                  <p className=\"mt-1 font-bold\">\r\n                    {unsyncedChanges} change{unsyncedChanges !== 1 ? 's' : ''} pending synchronization\r\n                  </p>\r\n                )}\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <p>Your data has been synchronized.</p>\r\n                {unsyncedChanges > 0 && (\r\n                  <div className=\"flex items-center mt-1\">\r\n                    <p className=\"font-bold mr-2\">\r\n                      {unsyncedChanges} change{unsyncedChanges !== 1 ? 's' : ''} pending synchronization\r\n                    </p>\r\n                    <button\r\n                      onClick={handleManualSync}\r\n                      className=\"bg-white text-green-600 px-2 py-0.5 rounded text-xs hover:bg-green-100\"\r\n                    >\r\n                      Sync Now\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Update Prompt */}\r\n      {showUpdatePrompt && (\r\n        <div className=\"fixed bottom-4 right-4 rounded-lg shadow-lg z-50 p-4 bg-blue-600 text-white max-w-sm\">\r\n          <div className=\"flex justify-between items-start\">\r\n            <div className=\"flex items-center\">\r\n              <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\r\n              </svg>\r\n              <p className=\"font-medium\">Update Available</p>\r\n            </div>\r\n            <button\r\n              onClick={() => setShowUpdatePrompt(false)}\r\n              className=\"text-white hover:text-gray-200\"\r\n              aria-label=\"Close\"\r\n            >\r\n              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\r\n              </svg>\r\n            </button>\r\n          </div>\r\n          \r\n          <p className=\"text-sm mt-2\">\r\n            A new version of TravelEase is available. Refresh to update.\r\n          </p>\r\n          \r\n          <button\r\n            onClick={handleRefreshApp}\r\n            className=\"mt-3 bg-white text-blue-600 px-3 py-1 rounded hover:bg-blue-50 w-full\"\r\n          >\r\n            Update Now\r\n          </button>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Sync Message (hidden by default) */}\r\n      <div \r\n        id=\"sync-message\" \r\n        className=\"fixed top-4 right-4 bg-blue-600 text-white px-4 py-2 rounded shadow-lg z-50 opacity-0 transition-opacity duration-300\"\r\n      >\r\n        Synchronizing data...\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EnhancedOfflineIndicator;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE9D,SAASC,wBAAwBA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,CAACW,SAAS,CAACC,MAAM,CAAC;EAC7D,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAACiB,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,IAAI,IAAI,CAAC;EAC1F,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAM,CAACqB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;;EAE/D;EACAC,SAAS,CAAC,MAAM;IACd,MAAMsB,YAAY,GAAGA,CAAA,KAAM;MACzBb,YAAY,CAAC,KAAK,CAAC;MACnBI,gBAAgB,CAAC,IAAI,CAAC;;MAEtB;MACAZ,WAAW,CAAC,CAAC;;MAEb;MACA,MAAMsB,KAAK,GAAGC,UAAU,CAAC,MAAM;QAC7BX,gBAAgB,CAAC,KAAK,CAAC;MACzB,CAAC,EAAE,IAAI,CAAC;MAER,OAAO,MAAMY,YAAY,CAACF,KAAK,CAAC;IAClC,CAAC;IAED,MAAMG,aAAa,GAAGA,CAAA,KAAM;MAC1BjB,YAAY,CAAC,IAAI,CAAC;MAClBI,gBAAgB,CAAC,IAAI,CAAC;IACxB,CAAC;;IAED;IACA,MAAMc,0BAA0B,GAAGA,CAAA,KAAM;MACvCN,mBAAmB,CAAC,IAAI,CAAC;IAC3B,CAAC;;IAED;IACA,MAAMO,4BAA4B,GAAGA,CAAA,KAAM;MACzC;MACA,IAAI,eAAe,IAAIlB,SAAS,EAAE;QAChC,MAAMmB,YAAY,GAAG;UACnBC,KAAK,EAAE,YAAY;UACnBC,OAAO,EAAE;YACPC,IAAI,EAAE,2CAA2C;YACjDC,IAAI,EAAE,cAAc;YACpBC,KAAK,EAAE;UACT;QACF,CAAC;;QAED;QACA,IAAIC,YAAY,CAACC,UAAU,KAAK,SAAS,EAAE;UACzC1B,SAAS,CAAC2B,aAAa,CAACC,KAAK,CAACC,IAAI,CAACC,YAAY,IAAI;YACjDA,YAAY,CAACC,gBAAgB,CAACZ,YAAY,CAACC,KAAK,EAAED,YAAY,CAACE,OAAO,CAAC;UACzE,CAAC,CAAC;QACJ;MACF;IACF,CAAC;;IAED;IACA,MAAMW,oBAAoB,GAAGA,CAAA,KAAM;MACjC,MAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAAC7B,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,IAAI,IAAI,CAAC;MAC5EE,kBAAkB,CAACwB,QAAQ,CAACG,MAAM,CAAC;IACrC,CAAC;;IAED;IACA,MAAMC,0BAA0B,GAAIC,KAAK,IAAK;MAC5C,IAAIA,KAAK,CAACC,IAAI,CAACC,IAAI,KAAK,gBAAgB,EAAE;QACxCnC,aAAa,CAACiC,KAAK,CAACC,IAAI,CAACE,SAAS,CAAC;QACnCT,oBAAoB,CAAC,CAAC;MACxB;IACF,CAAC;;IAED;IACAjC,YAAY,CAAC,CAACC,SAAS,CAACC,MAAM,CAAC;IAC/B+B,oBAAoB,CAAC,CAAC;IAEtB,IAAI,CAAChC,SAAS,CAACC,MAAM,IAAIO,eAAe,GAAG,CAAC,EAAE;MAC5CL,gBAAgB,CAAC,IAAI,CAAC;IACxB;;IAEA;IACAuC,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAE/B,YAAY,CAAC;IAC/C8B,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAE3B,aAAa,CAAC;IACjD0B,MAAM,CAACC,gBAAgB,CAAC,sBAAsB,EAAE1B,0BAA0B,CAAC;IAC3EyB,MAAM,CAACC,gBAAgB,CAAC,wBAAwB,EAAEzB,4BAA4B,CAAC;IAE/E,IAAI,eAAe,IAAIlB,SAAS,IAAIA,SAAS,CAAC2B,aAAa,CAACiB,UAAU,EAAE;MACtE5C,SAAS,CAAC2B,aAAa,CAACgB,gBAAgB,CAAC,SAAS,EAAEN,0BAA0B,CAAC;IACjF;;IAEA;IACA,MAAMQ,QAAQ,GAAGC,WAAW,CAACd,oBAAoB,EAAE,KAAK,CAAC,CAAC,CAAC;;IAE3D;IACA,OAAO,MAAM;MACXU,MAAM,CAACK,mBAAmB,CAAC,QAAQ,EAAEnC,YAAY,CAAC;MAClD8B,MAAM,CAACK,mBAAmB,CAAC,SAAS,EAAE/B,aAAa,CAAC;MACpD0B,MAAM,CAACK,mBAAmB,CAAC,sBAAsB,EAAE9B,0BAA0B,CAAC;MAC9EyB,MAAM,CAACK,mBAAmB,CAAC,wBAAwB,EAAE7B,4BAA4B,CAAC;MAElF,IAAI,eAAe,IAAIlB,SAAS,IAAIA,SAAS,CAAC2B,aAAa,CAACiB,UAAU,EAAE;QACtE5C,SAAS,CAAC2B,aAAa,CAACoB,mBAAmB,CAAC,SAAS,EAAEV,0BAA0B,CAAC;MACpF;MAEAW,aAAa,CAACH,QAAQ,CAAC;IACzB,CAAC;EACH,CAAC,EAAE,CAACrC,eAAe,CAAC,CAAC;;EAErB;EACA,MAAMyC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAI,CAAC7C,UAAU,EAAE,OAAO,OAAO;IAE/B,IAAI;MACF,MAAM8C,IAAI,GAAG,IAAIC,IAAI,CAAC/C,UAAU,CAAC;MACjC,OAAO8C,IAAI,CAACE,cAAc,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,OAAO,SAAS;IAClB;EACF,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B;IACA,IAAI,eAAe,IAAItD,SAAS,IAAIA,SAAS,CAAC2B,aAAa,CAACiB,UAAU,EAAE;MACtE5C,SAAS,CAAC2B,aAAa,CAACiB,UAAU,CAACW,WAAW,CAAC;QAAEC,MAAM,EAAE;MAAc,CAAC,CAAC;IAC3E;;IAEA;IACAd,MAAM,CAACe,QAAQ,CAACC,MAAM,CAAC,CAAC;EAC1B,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAI3D,SAAS,CAACC,MAAM,EAAE;MACpBV,WAAW,CAAC,CAAC;;MAEb;MACA,MAAMqE,WAAW,GAAGC,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC;MAC3D,IAAIF,WAAW,EAAE;QACfA,WAAW,CAACG,SAAS,CAACC,MAAM,CAAC,WAAW,CAAC;QACzCJ,WAAW,CAACG,SAAS,CAACE,GAAG,CAAC,aAAa,CAAC;QAExCnD,UAAU,CAAC,MAAM;UACf8C,WAAW,CAACG,SAAS,CAACC,MAAM,CAAC,aAAa,CAAC;UAC3CJ,WAAW,CAACG,SAAS,CAACE,GAAG,CAAC,WAAW,CAAC;QACxC,CAAC,EAAE,IAAI,CAAC;MACV;IACF;EACF,CAAC;EAED,oBACExE,OAAA,CAAAE,SAAA;IAAAuE,QAAA,GAEGhE,aAAa,iBACZT,OAAA;MAAK0E,SAAS,EAAE,mFACdrE,SAAS,GAAG,uBAAuB,GAAG,yBAAyB,EAC9D;MAAAoE,QAAA,gBACDzE,OAAA;QAAK0E,SAAS,EAAC,mBAAmB;QAAAD,QAAA,gBAChCzE,OAAA;UAAK0E,SAAS,EAAE,6BACdrE,SAAS,GAAG,0BAA0B,GAAG,cAAc;QACtD;UAAAsE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACV9E,OAAA;UAAG0E,SAAS,EAAC,aAAa;UAAAD,QAAA,EACvBpE,SAAS,GAAG,iBAAiB,GAAG;QAAW;UAAAsE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3C,CAAC,EACH,CAACzE,SAAS,iBACTL,OAAA;UACE+E,OAAO,EAAEA,CAAA,KAAMrE,gBAAgB,CAAC,KAAK,CAAE;UACvCgE,SAAS,EAAC,qCAAqC;UAC/C,cAAW,OAAO;UAAAD,QAAA,eAElBzE,OAAA;YAAK0E,SAAS,EAAC,SAAS;YAACM,IAAI,EAAC,MAAM;YAACC,MAAM,EAAC,cAAc;YAACC,OAAO,EAAC,WAAW;YAACC,KAAK,EAAC,4BAA4B;YAAAV,QAAA,eAC/GzE,OAAA;cAAMoF,aAAa,EAAC,OAAO;cAACC,cAAc,EAAC,OAAO;cAACC,WAAW,EAAC,GAAG;cAACC,CAAC,EAAC;YAAsB;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChG;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CACT;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eAEN9E,OAAA;QAAK0E,SAAS,EAAC,cAAc;QAAAD,QAAA,EAC1BpE,SAAS,gBACRL,OAAA;UAAAyE,QAAA,gBACEzE,OAAA;YAAAyE,QAAA,GAAG,oEAED,eAAAzE,OAAA;cAAA2E,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,iBACO,EAACtB,gBAAgB,CAAC,CAAC;UAAA;YAAAmB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/B,CAAC,EACH/D,eAAe,GAAG,CAAC,iBAClBf,OAAA;YAAG0E,SAAS,EAAC,gBAAgB;YAAAD,QAAA,GAC1B1D,eAAe,EAAC,SAAO,EAACA,eAAe,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,EAAC,0BAC5D;UAAA;YAAA4D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CACJ;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,gBAEN9E,OAAA;UAAAyE,QAAA,gBACEzE,OAAA;YAAAyE,QAAA,EAAG;UAAgC;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,EACtC/D,eAAe,GAAG,CAAC,iBAClBf,OAAA;YAAK0E,SAAS,EAAC,wBAAwB;YAAAD,QAAA,gBACrCzE,OAAA;cAAG0E,SAAS,EAAC,gBAAgB;cAAAD,QAAA,GAC1B1D,eAAe,EAAC,SAAO,EAACA,eAAe,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,EAAC,0BAC5D;YAAA;cAAA4D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eACJ9E,OAAA;cACE+E,OAAO,EAAEb,gBAAiB;cAC1BQ,SAAS,EAAC,wEAAwE;cAAAD,QAAA,EACnF;YAED;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CACN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE;MACN;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,EAGA7D,gBAAgB,iBACfjB,OAAA;MAAK0E,SAAS,EAAC,sFAAsF;MAAAD,QAAA,gBACnGzE,OAAA;QAAK0E,SAAS,EAAC,kCAAkC;QAAAD,QAAA,gBAC/CzE,OAAA;UAAK0E,SAAS,EAAC,mBAAmB;UAAAD,QAAA,gBAChCzE,OAAA;YAAK0E,SAAS,EAAC,cAAc;YAACM,IAAI,EAAC,MAAM;YAACC,MAAM,EAAC,cAAc;YAACC,OAAO,EAAC,WAAW;YAACC,KAAK,EAAC,4BAA4B;YAAAV,QAAA,eACpHzE,OAAA;cAAMoF,aAAa,EAAC,OAAO;cAACC,cAAc,EAAC,OAAO;cAACC,WAAW,EAAC,GAAG;cAACC,CAAC,EAAC;YAA2D;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrI,CAAC,eACN9E,OAAA;YAAG0E,SAAS,EAAC,aAAa;YAAAD,QAAA,EAAC;UAAgB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC,eACN9E,OAAA;UACE+E,OAAO,EAAEA,CAAA,KAAM7D,mBAAmB,CAAC,KAAK,CAAE;UAC1CwD,SAAS,EAAC,gCAAgC;UAC1C,cAAW,OAAO;UAAAD,QAAA,eAElBzE,OAAA;YAAK0E,SAAS,EAAC,SAAS;YAACM,IAAI,EAAC,MAAM;YAACC,MAAM,EAAC,cAAc;YAACC,OAAO,EAAC,WAAW;YAACC,KAAK,EAAC,4BAA4B;YAAAV,QAAA,eAC/GzE,OAAA;cAAMoF,aAAa,EAAC,OAAO;cAACC,cAAc,EAAC,OAAO;cAACC,WAAW,EAAC,GAAG;cAACC,CAAC,EAAC;YAAsB;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChG;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAEN9E,OAAA;QAAG0E,SAAS,EAAC,cAAc;QAAAD,QAAA,EAAC;MAE5B;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAEJ9E,OAAA;QACE+E,OAAO,EAAElB,gBAAiB;QAC1Ba,SAAS,EAAC,uEAAuE;QAAAD,QAAA,EAClF;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN,eAGD9E,OAAA;MACEwF,EAAE,EAAC,cAAc;MACjBd,SAAS,EAAC,uHAAuH;MAAAD,QAAA,EAClI;IAED;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA,eACN,CAAC;AAEP;AAAC1E,EAAA,CA9PQD,wBAAwB;AAAAsF,EAAA,GAAxBtF,wBAAwB;AAgQjC,eAAeA,wBAAwB;AAAC,IAAAsF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}