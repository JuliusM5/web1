{"ast":null,"code":"// Import the DEFAULT_SETTINGS from SettingsContext\nimport{DEFAULT_SETTINGS}from'../context/SettingsContext';import translations from'./translations';// Get current user settings (or defaults if none exist)\nexport const getUserSettings=()=>{try{const savedSettings=localStorage.getItem('userSettings');if(!savedSettings)return DEFAULT_SETTINGS;const parsedSettings=JSON.parse(savedSettings);// Ensure all expected properties exist (handles partial settings from older versions)\nreturn{appearance:{...DEFAULT_SETTINGS.appearance,...parsedSettings.appearance},preferences:{...DEFAULT_SETTINGS.preferences,...parsedSettings.preferences},notifications:{...DEFAULT_SETTINGS.notifications,...parsedSettings.notifications},privacy:{...DEFAULT_SETTINGS.privacy,...parsedSettings.privacy},accessibility:{...DEFAULT_SETTINGS.accessibility,...parsedSettings.accessibility}};}catch(error){console.error(\"Error loading user settings:\",error);return DEFAULT_SETTINGS;}};// Save user settings\nexport const saveUserSettings=settings=>{try{localStorage.setItem('userSettings',JSON.stringify(settings));return true;}catch(error){console.error(\"Error saving user settings:\",error);return false;}};// Keep track of the last applied settings to prevent redundant application\nlet lastAppliedSettings=null;// Track the last settings application timestamp to limit frequency\nlet lastSettingsApplicationTime=0;const SETTINGS_DEBOUNCE_TIME=300;// milliseconds\n// Apply theme settings to the document with debouncing\nexport const applyThemeSettings=settings=>{if(!settings||!settings.appearance){console.error(\"Invalid settings object provided to applyThemeSettings\");return false;}const{fontSize,colorScheme,darkMode}=settings.appearance;// Check if these settings are already applied\nconst settingsKey=`${fontSize}-${colorScheme}-${darkMode}`;if(lastAppliedSettings===settingsKey){return true;// Settings already applied, skip\n}// Debounce settings application\nconst now=Date.now();if(now-lastSettingsApplicationTime<SETTINGS_DEBOUNCE_TIME){// Schedule a delayed application instead of applying immediately\nsetTimeout(()=>{// Check again if settings have changed\nif(lastAppliedSettings!==settingsKey){actuallyApplyThemeSettings(settings);}},SETTINGS_DEBOUNCE_TIME);return true;}return actuallyApplyThemeSettings(settings);};// The actual theme application function\nconst actuallyApplyThemeSettings=settings=>{const{fontSize,colorScheme,darkMode}=settings.appearance;const settingsKey=`${fontSize}-${colorScheme}-${darkMode}`;// Log only when actually changing settings\nconsole.log(\"Applying theme settings:\",{fontSize,colorScheme,darkMode});// Apply font size\ndocument.documentElement.classList.remove('text-sm','text-base','text-lg');if(fontSize==='small'){document.documentElement.classList.add('text-sm');}else if(fontSize==='medium'){document.documentElement.classList.add('text-base');}else if(fontSize==='large'){document.documentElement.classList.add('text-lg');}// Apply color scheme\n// Remove any existing color scheme classes\nconst colorSchemeClasses=['theme-blue','theme-purple','theme-green','theme-red','theme-amber','theme-indigo'];document.documentElement.classList.remove(...colorSchemeClasses);// Add the new color scheme class\nconst themeClass=`theme-${colorScheme}`;document.documentElement.classList.add(themeClass);// Apply dark mode\nif(darkMode){document.documentElement.classList.add('dark-mode');document.body.classList.add('dark-mode');console.log(\"Dark mode classes applied\");}else{document.documentElement.classList.remove('dark-mode');document.body.classList.remove('dark-mode');console.log(\"Dark mode classes removed\");}// Set a custom property to track current theme\ndocument.documentElement.style.setProperty('--current-theme',colorScheme);document.documentElement.setAttribute('data-theme',darkMode?'dark':'light');// Update tracking variables\nlastAppliedSettings=settingsKey;lastSettingsApplicationTime=Date.now();console.log(`Applied theme: ${colorScheme}, font size: ${fontSize}, dark mode: ${darkMode}`);return true;};// Keep track of the last applied accessibility settings to prevent redundant application\nlet lastAppliedAccessibility=null;// Apply accessibility settings\nexport const applyAccessibilitySettings=settings=>{if(!settings||!settings.accessibility)return false;const{highContrast,reducedMotion,largerClickTargets,textScaling,screenReaderOptimized}=settings.accessibility;// Check if these settings are already applied\nconst accessibilityKey=`${highContrast}-${reducedMotion}-${largerClickTargets}-${textScaling}-${screenReaderOptimized}`;if(lastAppliedAccessibility===accessibilityKey){return true;// Settings already applied, skip\n}// Apply high contrast mode\nif(highContrast){document.documentElement.classList.add('high-contrast');}else{document.documentElement.classList.remove('high-contrast');}// Apply reduced motion\nif(reducedMotion){document.documentElement.classList.add('reduced-motion');}else{document.documentElement.classList.remove('reduced-motion');}// Apply larger click targets\nif(largerClickTargets){document.documentElement.classList.add('larger-targets');}else{document.documentElement.classList.remove('larger-targets');}// Apply text scaling\nif(textScaling&&textScaling!==100){document.documentElement.style.setProperty('--text-scale-ratio',`${textScaling/100}`);document.documentElement.classList.add('custom-text-scaling');}else{document.documentElement.classList.remove('custom-text-scaling');}// Apply screen reader optimizations\nif(screenReaderOptimized){document.documentElement.setAttribute('data-screen-reader-optimized','true');}else{document.documentElement.removeAttribute('data-screen-reader-optimized');}// Update last applied accessibility settings\nlastAppliedAccessibility=accessibilityKey;return true;};/**\r\n * Create a translation function for the specified language\r\n * \r\n * @param {string} language Language code (e.g., 'en-US', 'es-ES')\r\n * @returns {Function} Translation function\r\n */export const createTranslateFunction=language=>{const defaultLanguage='en-US';// Return a translation function that gets strings for the specified language\nreturn function(key){var _translations$languag,_translations$default;let replacements=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};// Get the translation from the current language or fall back to default\nlet translation=((_translations$languag=translations[language])===null||_translations$languag===void 0?void 0:_translations$languag[key])||((_translations$default=translations[defaultLanguage])===null||_translations$default===void 0?void 0:_translations$default[key])||key;// Replace placeholders with actual values\nObject.entries(replacements).forEach(_ref=>{let[placeholder,value]=_ref;translation=translation.replace(`{${placeholder}}`,value);});return translation;};};// Format date according to user preferences with internationalization\nexport const formatDate=function(dateString,settings){var _settings$preferences;let language=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'en-US';if(!dateString)return'';const date=new Date(dateString);const format=(settings===null||settings===void 0?void 0:(_settings$preferences=settings.preferences)===null||_settings$preferences===void 0?void 0:_settings$preferences.dateFormat)||'MM/DD/YYYY';const t=createTranslateFunction(language);switch(format){case'DD/MM/YYYY':return`${padZero(date.getDate())}/${padZero(date.getMonth()+1)}/${date.getFullYear()}`;case'YYYY-MM-DD':return`${date.getFullYear()}-${padZero(date.getMonth()+1)}-${padZero(date.getDate())}`;case'MMMM D, YYYY':return`${getMonthName(date.getMonth(),language,t)} ${date.getDate()}, ${date.getFullYear()}`;case'D MMMM YYYY':return`${date.getDate()} ${getMonthName(date.getMonth(),language,t)} ${date.getFullYear()}`;case'MM/DD/YYYY':default:return`${padZero(date.getMonth()+1)}/${padZero(date.getDate())}/${date.getFullYear()}`;}};// Format currency according to user preferences\nexport const formatCurrency=function(amount,settings){var _settings$preferences2;let language=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'en-US';if(amount===undefined||amount===null)return'';const currencyCode=(settings===null||settings===void 0?void 0:(_settings$preferences2=settings.preferences)===null||_settings$preferences2===void 0?void 0:_settings$preferences2.defaultCurrency)||'USD';// Simple mapping of currency codes to symbols\nconst currencySymbols={'USD':'$','EUR':'€','GBP':'£','JPY':'¥','CAD':'CA$','AUD':'AU$','CNY':'¥','INR':'₹'};const symbol=currencySymbols[currencyCode]||currencyCode;// Format the amount with 2 decimal places (except for JPY)\nlet formattedAmount;if(currencyCode==='JPY'||currencyCode==='CNY'){formattedAmount=Math.round(amount).toLocaleString(language);}else{// Use locale-sensitive number formatting\nformattedAmount=Number(amount).toLocaleString(language,{minimumFractionDigits:2,maximumFractionDigits:2});}return`${symbol}${formattedAmount}`;};// Convert temperature according to user preferences\nexport const formatTemperature=function(celsius,settings){var _settings$preferences3;let language=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'en-US';const t=createTranslateFunction(language);const unit=(settings===null||settings===void 0?void 0:(_settings$preferences3=settings.preferences)===null||_settings$preferences3===void 0?void 0:_settings$preferences3.temperatureUnit)||'fahrenheit';if(unit==='celsius'){return t('format.temperature.celsius',{value:Math.round(celsius)});}else{// Convert to Fahrenheit\nconst fahrenheit=celsius*9/5+32;return t('format.temperature.fahrenheit',{value:Math.round(fahrenheit)});}};// Convert distance according to user preferences\nexport const formatDistance=function(kilometers,settings){var _settings$preferences4;let language=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'en-US';const t=createTranslateFunction(language);const unit=(settings===null||settings===void 0?void 0:(_settings$preferences4=settings.preferences)===null||_settings$preferences4===void 0?void 0:_settings$preferences4.distanceUnit)||'miles';if(unit==='kilometers'){return t('format.distance.kilometers',{value:kilometers.toFixed(1)});}else{// Convert to miles\nconst miles=kilometers*0.621371;return t('format.distance.miles',{value:miles.toFixed(1)});}};// Helper functions\nconst padZero=num=>{return num.toString().padStart(2,'0');};const getMonthName=function(monthIndex){let language=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'en-US';let t=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;// If translation function is provided, use it\nif(t){return t(`date.month.${monthIndex}`);}// Fallback to using localized month names\ntry{const date=new Date();date.setMonth(monthIndex);return date.toLocaleString(language,{month:'long'});}catch(error){// Fallback to English month names if locale is not supported\nconst months=['January','February','March','April','May','June','July','August','September','October','November','December'];return months[monthIndex];}};// Reset all app data (for privacy clear option)\nexport const clearAllAppData=function(){let language=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'en-US';const t=createTranslateFunction(language);if(window.confirm(t('settings.privacy.confirmClearAllData'))){try{localStorage.clear();return true;}catch(error){console.error(\"Error clearing app data:\",error);return false;}}return false;};// Export all user data as JSON\nexport const exportUserData=function(){let language=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'en-US';try{const data={trips:JSON.parse(localStorage.getItem('travelPlannerTrips')||'[]'),templates:JSON.parse(localStorage.getItem('tripTemplates')||'[]'),settings:JSON.parse(localStorage.getItem('userSettings')||'{}')};const dataStr=JSON.stringify(data,null,2);const dataUri=`data:application/json;charset=utf-8,${encodeURIComponent(dataStr)}`;const t=createTranslateFunction(language);const currentDate=new Date().toISOString().split('T')[0];const exportFileName=`${t('app.name').toLowerCase()}_backup_${currentDate}.json`;const linkElement=document.createElement('a');linkElement.setAttribute('href',dataUri);linkElement.setAttribute('download',exportFileName);linkElement.click();return true;}catch(error){console.error(\"Error exporting user data:\",error);return false;}};// Import user data from JSON file\nexport const importUserData=async function(file){let language=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'en-US';const t=createTranslateFunction(language);try{return new Promise((resolve,reject)=>{const reader=new FileReader();reader.onload=event=>{try{const data=JSON.parse(event.target.result);// Validate the imported data has expected structure\nif(!data.trips||!data.templates||!data.settings){reject(new Error(t('settings.import.invalidDataFormat')));return;}// Import the data\nlocalStorage.setItem('travelPlannerTrips',JSON.stringify(data.trips));localStorage.setItem('tripTemplates',JSON.stringify(data.templates));localStorage.setItem('userSettings',JSON.stringify(data.settings));resolve(true);}catch(error){reject(new Error(t('settings.import.parseError',{error:error.message})));}};reader.onerror=()=>{reject(new Error(t('settings.import.readError')));};reader.readAsText(file);});}catch(error){console.error(\"Error importing user data:\",error);return false;}};","map":{"version":3,"names":["DEFAULT_SETTINGS","translations","getUserSettings","savedSettings","localStorage","getItem","parsedSettings","JSON","parse","appearance","preferences","notifications","privacy","accessibility","error","console","saveUserSettings","settings","setItem","stringify","lastAppliedSettings","lastSettingsApplicationTime","SETTINGS_DEBOUNCE_TIME","applyThemeSettings","fontSize","colorScheme","darkMode","settingsKey","now","Date","setTimeout","actuallyApplyThemeSettings","log","document","documentElement","classList","remove","add","colorSchemeClasses","themeClass","body","style","setProperty","setAttribute","lastAppliedAccessibility","applyAccessibilitySettings","highContrast","reducedMotion","largerClickTargets","textScaling","screenReaderOptimized","accessibilityKey","removeAttribute","createTranslateFunction","language","defaultLanguage","key","_translations$languag","_translations$default","replacements","arguments","length","undefined","translation","Object","entries","forEach","_ref","placeholder","value","replace","formatDate","dateString","_settings$preferences","date","format","dateFormat","t","padZero","getDate","getMonth","getFullYear","getMonthName","formatCurrency","amount","_settings$preferences2","currencyCode","defaultCurrency","currencySymbols","symbol","formattedAmount","Math","round","toLocaleString","Number","minimumFractionDigits","maximumFractionDigits","formatTemperature","celsius","_settings$preferences3","unit","temperatureUnit","fahrenheit","formatDistance","kilometers","_settings$preferences4","distanceUnit","toFixed","miles","num","toString","padStart","monthIndex","setMonth","month","months","clearAllAppData","window","confirm","clear","exportUserData","data","trips","templates","dataStr","dataUri","encodeURIComponent","currentDate","toISOString","split","exportFileName","toLowerCase","linkElement","createElement","click","importUserData","file","Promise","resolve","reject","reader","FileReader","onload","event","target","result","Error","message","onerror","readAsText"],"sources":["C:/Users/juliu/Desktop/web/src/utils/settingsUtils.js"],"sourcesContent":["// Import the DEFAULT_SETTINGS from SettingsContext\r\nimport { DEFAULT_SETTINGS } from '../context/SettingsContext';\r\nimport translations from './translations';\r\n\r\n// Get current user settings (or defaults if none exist)\r\nexport const getUserSettings = () => {\r\n  try {\r\n    const savedSettings = localStorage.getItem('userSettings');\r\n    if (!savedSettings) return DEFAULT_SETTINGS;\r\n    \r\n    const parsedSettings = JSON.parse(savedSettings);\r\n    \r\n    // Ensure all expected properties exist (handles partial settings from older versions)\r\n    return {\r\n      appearance: { ...DEFAULT_SETTINGS.appearance, ...parsedSettings.appearance },\r\n      preferences: { ...DEFAULT_SETTINGS.preferences, ...parsedSettings.preferences },\r\n      notifications: { ...DEFAULT_SETTINGS.notifications, ...parsedSettings.notifications },\r\n      privacy: { ...DEFAULT_SETTINGS.privacy, ...parsedSettings.privacy },\r\n      accessibility: { ...DEFAULT_SETTINGS.accessibility, ...parsedSettings.accessibility }\r\n    };\r\n  } catch (error) {\r\n    console.error(\"Error loading user settings:\", error);\r\n    return DEFAULT_SETTINGS;\r\n  }\r\n};\r\n\r\n// Save user settings\r\nexport const saveUserSettings = (settings) => {\r\n  try {\r\n    localStorage.setItem('userSettings', JSON.stringify(settings));\r\n    return true;\r\n  } catch (error) {\r\n    console.error(\"Error saving user settings:\", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Keep track of the last applied settings to prevent redundant application\r\nlet lastAppliedSettings = null;\r\n\r\n// Track the last settings application timestamp to limit frequency\r\nlet lastSettingsApplicationTime = 0;\r\nconst SETTINGS_DEBOUNCE_TIME = 300; // milliseconds\r\n\r\n// Apply theme settings to the document with debouncing\r\nexport const applyThemeSettings = (settings) => {\r\n  if (!settings || !settings.appearance) {\r\n    console.error(\"Invalid settings object provided to applyThemeSettings\");\r\n    return false;\r\n  }\r\n  \r\n  const { fontSize, colorScheme, darkMode } = settings.appearance;\r\n  \r\n  // Check if these settings are already applied\r\n  const settingsKey = `${fontSize}-${colorScheme}-${darkMode}`;\r\n  if (lastAppliedSettings === settingsKey) {\r\n    return true; // Settings already applied, skip\r\n  }\r\n  \r\n  // Debounce settings application\r\n  const now = Date.now();\r\n  if (now - lastSettingsApplicationTime < SETTINGS_DEBOUNCE_TIME) {\r\n    // Schedule a delayed application instead of applying immediately\r\n    setTimeout(() => {\r\n      // Check again if settings have changed\r\n      if (lastAppliedSettings !== settingsKey) {\r\n        actuallyApplyThemeSettings(settings);\r\n      }\r\n    }, SETTINGS_DEBOUNCE_TIME);\r\n    return true;\r\n  }\r\n  \r\n  return actuallyApplyThemeSettings(settings);\r\n};\r\n\r\n// The actual theme application function\r\nconst actuallyApplyThemeSettings = (settings) => {\r\n  const { fontSize, colorScheme, darkMode } = settings.appearance;\r\n  const settingsKey = `${fontSize}-${colorScheme}-${darkMode}`;\r\n  \r\n  // Log only when actually changing settings\r\n  console.log(\"Applying theme settings:\", { fontSize, colorScheme, darkMode });\r\n  \r\n  // Apply font size\r\n  document.documentElement.classList.remove('text-sm', 'text-base', 'text-lg');\r\n  if (fontSize === 'small') {\r\n    document.documentElement.classList.add('text-sm');\r\n  } else if (fontSize === 'medium') {\r\n    document.documentElement.classList.add('text-base');\r\n  } else if (fontSize === 'large') {\r\n    document.documentElement.classList.add('text-lg');\r\n  }\r\n  \r\n  // Apply color scheme\r\n  // Remove any existing color scheme classes\r\n  const colorSchemeClasses = [\r\n    'theme-blue', 'theme-purple', 'theme-green', \r\n    'theme-red', 'theme-amber', 'theme-indigo'\r\n  ];\r\n  document.documentElement.classList.remove(...colorSchemeClasses);\r\n  \r\n  // Add the new color scheme class\r\n  const themeClass = `theme-${colorScheme}`;\r\n  document.documentElement.classList.add(themeClass);\r\n  \r\n  // Apply dark mode\r\n  if (darkMode) {\r\n    document.documentElement.classList.add('dark-mode');\r\n    document.body.classList.add('dark-mode');\r\n    console.log(\"Dark mode classes applied\");\r\n  } else {\r\n    document.documentElement.classList.remove('dark-mode');\r\n    document.body.classList.remove('dark-mode');\r\n    console.log(\"Dark mode classes removed\");\r\n  }\r\n  \r\n  // Set a custom property to track current theme\r\n  document.documentElement.style.setProperty('--current-theme', colorScheme);\r\n  document.documentElement.setAttribute('data-theme', darkMode ? 'dark' : 'light');\r\n  \r\n  // Update tracking variables\r\n  lastAppliedSettings = settingsKey;\r\n  lastSettingsApplicationTime = Date.now();\r\n  \r\n  console.log(`Applied theme: ${colorScheme}, font size: ${fontSize}, dark mode: ${darkMode}`);\r\n  \r\n  return true;\r\n};\r\n\r\n// Keep track of the last applied accessibility settings to prevent redundant application\r\nlet lastAppliedAccessibility = null;\r\n\r\n// Apply accessibility settings\r\nexport const applyAccessibilitySettings = (settings) => {\r\n  if (!settings || !settings.accessibility) return false;\r\n\r\n  const { highContrast, reducedMotion, largerClickTargets, textScaling, screenReaderOptimized } = settings.accessibility;\r\n\r\n  // Check if these settings are already applied\r\n  const accessibilityKey = `${highContrast}-${reducedMotion}-${largerClickTargets}-${textScaling}-${screenReaderOptimized}`;\r\n  if (lastAppliedAccessibility === accessibilityKey) {\r\n    return true; // Settings already applied, skip\r\n  }\r\n\r\n  // Apply high contrast mode\r\n  if (highContrast) {\r\n    document.documentElement.classList.add('high-contrast');\r\n  } else {\r\n    document.documentElement.classList.remove('high-contrast');\r\n  }\r\n\r\n  // Apply reduced motion\r\n  if (reducedMotion) {\r\n    document.documentElement.classList.add('reduced-motion');\r\n  } else {\r\n    document.documentElement.classList.remove('reduced-motion');\r\n  }\r\n\r\n  // Apply larger click targets\r\n  if (largerClickTargets) {\r\n    document.documentElement.classList.add('larger-targets');\r\n  } else {\r\n    document.documentElement.classList.remove('larger-targets');\r\n  }\r\n\r\n  // Apply text scaling\r\n  if (textScaling && textScaling !== 100) {\r\n    document.documentElement.style.setProperty('--text-scale-ratio', `${textScaling / 100}`);\r\n    document.documentElement.classList.add('custom-text-scaling');\r\n  } else {\r\n    document.documentElement.classList.remove('custom-text-scaling');\r\n  }\r\n\r\n  // Apply screen reader optimizations\r\n  if (screenReaderOptimized) {\r\n    document.documentElement.setAttribute('data-screen-reader-optimized', 'true');\r\n  } else {\r\n    document.documentElement.removeAttribute('data-screen-reader-optimized');\r\n  }\r\n\r\n  // Update last applied accessibility settings\r\n  lastAppliedAccessibility = accessibilityKey;\r\n\r\n  return true;\r\n};\r\n\r\n/**\r\n * Create a translation function for the specified language\r\n * \r\n * @param {string} language Language code (e.g., 'en-US', 'es-ES')\r\n * @returns {Function} Translation function\r\n */\r\nexport const createTranslateFunction = (language) => {\r\n  const defaultLanguage = 'en-US';\r\n  \r\n  // Return a translation function that gets strings for the specified language\r\n  return (key, replacements = {}) => {\r\n    // Get the translation from the current language or fall back to default\r\n    let translation = translations[language]?.[key] || translations[defaultLanguage]?.[key] || key;\r\n    \r\n    // Replace placeholders with actual values\r\n    Object.entries(replacements).forEach(([placeholder, value]) => {\r\n      translation = translation.replace(`{${placeholder}}`, value);\r\n    });\r\n    \r\n    return translation;\r\n  };\r\n};\r\n\r\n// Format date according to user preferences with internationalization\r\nexport const formatDate = (dateString, settings, language = 'en-US') => {\r\n  if (!dateString) return '';\r\n  \r\n  const date = new Date(dateString);\r\n  const format = settings?.preferences?.dateFormat || 'MM/DD/YYYY';\r\n  const t = createTranslateFunction(language);\r\n  \r\n  switch (format) {\r\n    case 'DD/MM/YYYY':\r\n      return `${padZero(date.getDate())}/${padZero(date.getMonth() + 1)}/${date.getFullYear()}`;\r\n    case 'YYYY-MM-DD':\r\n      return `${date.getFullYear()}-${padZero(date.getMonth() + 1)}-${padZero(date.getDate())}`;\r\n    case 'MMMM D, YYYY':\r\n      return `${getMonthName(date.getMonth(), language, t)} ${date.getDate()}, ${date.getFullYear()}`;\r\n    case 'D MMMM YYYY':\r\n      return `${date.getDate()} ${getMonthName(date.getMonth(), language, t)} ${date.getFullYear()}`;\r\n    case 'MM/DD/YYYY':\r\n    default:\r\n      return `${padZero(date.getMonth() + 1)}/${padZero(date.getDate())}/${date.getFullYear()}`;\r\n  }\r\n};\r\n\r\n// Format currency according to user preferences\r\nexport const formatCurrency = (amount, settings, language = 'en-US') => {\r\n  if (amount === undefined || amount === null) return '';\r\n  \r\n  const currencyCode = settings?.preferences?.defaultCurrency || 'USD';\r\n  \r\n  // Simple mapping of currency codes to symbols\r\n  const currencySymbols = {\r\n    'USD': '$',\r\n    'EUR': '€',\r\n    'GBP': '£',\r\n    'JPY': '¥',\r\n    'CAD': 'CA$',\r\n    'AUD': 'AU$',\r\n    'CNY': '¥',\r\n    'INR': '₹',\r\n  };\r\n  \r\n  const symbol = currencySymbols[currencyCode] || currencyCode;\r\n  \r\n  // Format the amount with 2 decimal places (except for JPY)\r\n  let formattedAmount;\r\n  if (currencyCode === 'JPY' || currencyCode === 'CNY') {\r\n    formattedAmount = Math.round(amount).toLocaleString(language);\r\n  } else {\r\n    // Use locale-sensitive number formatting\r\n    formattedAmount = Number(amount).toLocaleString(language, {\r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2\r\n    });\r\n  }\r\n  \r\n  return `${symbol}${formattedAmount}`;\r\n};\r\n\r\n// Convert temperature according to user preferences\r\nexport const formatTemperature = (celsius, settings, language = 'en-US') => {\r\n  const t = createTranslateFunction(language);\r\n  const unit = settings?.preferences?.temperatureUnit || 'fahrenheit';\r\n  \r\n  if (unit === 'celsius') {\r\n    return t('format.temperature.celsius', { value: Math.round(celsius) });\r\n  } else {\r\n    // Convert to Fahrenheit\r\n    const fahrenheit = (celsius * 9/5) + 32;\r\n    return t('format.temperature.fahrenheit', { value: Math.round(fahrenheit) });\r\n  }\r\n};\r\n\r\n// Convert distance according to user preferences\r\nexport const formatDistance = (kilometers, settings, language = 'en-US') => {\r\n  const t = createTranslateFunction(language);\r\n  const unit = settings?.preferences?.distanceUnit || 'miles';\r\n  \r\n  if (unit === 'kilometers') {\r\n    return t('format.distance.kilometers', { value: kilometers.toFixed(1) });\r\n  } else {\r\n    // Convert to miles\r\n    const miles = kilometers * 0.621371;\r\n    return t('format.distance.miles', { value: miles.toFixed(1) });\r\n  }\r\n};\r\n\r\n// Helper functions\r\nconst padZero = (num) => {\r\n  return num.toString().padStart(2, '0');\r\n};\r\n\r\nconst getMonthName = (monthIndex, language = 'en-US', t = null) => {\r\n  // If translation function is provided, use it\r\n  if (t) {\r\n    return t(`date.month.${monthIndex}`);\r\n  }\r\n  \r\n  // Fallback to using localized month names\r\n  try {\r\n    const date = new Date();\r\n    date.setMonth(monthIndex);\r\n    return date.toLocaleString(language, { month: 'long' });\r\n  } catch (error) {\r\n    // Fallback to English month names if locale is not supported\r\n    const months = [\r\n      'January', 'February', 'March', 'April', 'May', 'June',\r\n      'July', 'August', 'September', 'October', 'November', 'December'\r\n    ];\r\n    return months[monthIndex];\r\n  }\r\n};\r\n\r\n// Reset all app data (for privacy clear option)\r\nexport const clearAllAppData = (language = 'en-US') => {\r\n  const t = createTranslateFunction(language);\r\n  \r\n  if (window.confirm(t('settings.privacy.confirmClearAllData'))) {\r\n    try {\r\n      localStorage.clear();\r\n      return true;\r\n    } catch (error) {\r\n      console.error(\"Error clearing app data:\", error);\r\n      return false;\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\n// Export all user data as JSON\r\nexport const exportUserData = (language = 'en-US') => {\r\n  try {\r\n    const data = {\r\n      trips: JSON.parse(localStorage.getItem('travelPlannerTrips') || '[]'),\r\n      templates: JSON.parse(localStorage.getItem('tripTemplates') || '[]'),\r\n      settings: JSON.parse(localStorage.getItem('userSettings') || '{}')\r\n    };\r\n    \r\n    const dataStr = JSON.stringify(data, null, 2);\r\n    const dataUri = `data:application/json;charset=utf-8,${encodeURIComponent(dataStr)}`;\r\n    \r\n    const t = createTranslateFunction(language);\r\n    const currentDate = new Date().toISOString().split('T')[0];\r\n    const exportFileName = `${t('app.name').toLowerCase()}_backup_${currentDate}.json`;\r\n    \r\n    const linkElement = document.createElement('a');\r\n    linkElement.setAttribute('href', dataUri);\r\n    linkElement.setAttribute('download', exportFileName);\r\n    linkElement.click();\r\n    \r\n    return true;\r\n  } catch (error) {\r\n    console.error(\"Error exporting user data:\", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Import user data from JSON file\r\nexport const importUserData = async (file, language = 'en-US') => {\r\n  const t = createTranslateFunction(language);\r\n  \r\n  try {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      \r\n      reader.onload = (event) => {\r\n        try {\r\n          const data = JSON.parse(event.target.result);\r\n          \r\n          // Validate the imported data has expected structure\r\n          if (!data.trips || !data.templates || !data.settings) {\r\n            reject(new Error(t('settings.import.invalidDataFormat')));\r\n            return;\r\n          }\r\n          \r\n          // Import the data\r\n          localStorage.setItem('travelPlannerTrips', JSON.stringify(data.trips));\r\n          localStorage.setItem('tripTemplates', JSON.stringify(data.templates));\r\n          localStorage.setItem('userSettings', JSON.stringify(data.settings));\r\n          \r\n          resolve(true);\r\n        } catch (error) {\r\n          reject(new Error(t('settings.import.parseError', { error: error.message })));\r\n        }\r\n      };\r\n      \r\n      reader.onerror = () => {\r\n        reject(new Error(t('settings.import.readError')));\r\n      };\r\n      \r\n      reader.readAsText(file);\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Error importing user data:\", error);\r\n    return false;\r\n  }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}