{"ast":null,"code":"var _s = $RefreshSig$();\n// Enhance hooks/useMobileSubscription.js\n\nimport { useContext, useCallback } from 'react';\nimport { MobileSubscriptionContext } from '../context/MobileSubscriptionContext';\nimport { deviceDetection } from '../utils/deviceDetection';\nexport const useMobileSubscription = () => {\n  _s();\n  const context = useContext(MobileSubscriptionContext);\n  if (!context) {\n    throw new Error('useMobileSubscription must be used within a MobileSubscriptionProvider');\n  }\n\n  // Helper to detect platform\n  const getPlatform = () => {\n    if (deviceDetection.isIOS()) return 'ios';\n    if (deviceDetection.isAndroid()) return 'android';\n    return 'web';\n  };\n\n  // Activate subscription with code from web purchase\n  const activateWithCode = useCallback(async code => {\n    try {\n      // Get the current platform\n      const platform = getPlatform();\n\n      // Call the appropriate handler based on platform\n      if (platform === 'ios' || platform === 'android') {\n        // Make API call to validate and activate code\n        const response = await fetch('/api/mobile/activate-code', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            code,\n            platform\n          })\n        });\n        const result = await response.json();\n        if (!result.success) {\n          throw new Error(result.error || 'Failed to activate code');\n        }\n\n        // Store the receipt locally\n        localStorage.setItem('mobile_web_receipt', result.webReceipt);\n\n        // Update context\n        context.refreshSubscription();\n        return {\n          success: true\n        };\n      } else {\n        // Not on a mobile platform\n        return {\n          success: false,\n          error: 'This function is only available on mobile devices'\n        };\n      }\n    } catch (error) {\n      console.error('Code activation error:', error);\n      return {\n        success: false,\n        error: error.message || 'Failed to activate code'\n      };\n    }\n  }, [context]);\n  return {\n    ...context,\n    activateWithCode\n  };\n};\n_s(useMobileSubscription, \"J2Fb8HQEtQclfTHKzmhd5pKTLvY=\");\nexport default useMobileSubscription;","map":{"version":3,"names":["useContext","useCallback","MobileSubscriptionContext","deviceDetection","useMobileSubscription","_s","context","Error","getPlatform","isIOS","isAndroid","activateWithCode","code","platform","response","fetch","method","headers","body","JSON","stringify","result","json","success","error","localStorage","setItem","webReceipt","refreshSubscription","console","message"],"sources":["C:/Users/juliu/Desktop/web/src/hooks/useMobileSubscription.js"],"sourcesContent":["// Enhance hooks/useMobileSubscription.js\r\n\r\nimport { useContext, useCallback } from 'react';\r\nimport { MobileSubscriptionContext } from '../context/MobileSubscriptionContext';\r\nimport { deviceDetection } from '../utils/deviceDetection';\r\n\r\nexport const useMobileSubscription = () => {\r\n  const context = useContext(MobileSubscriptionContext);\r\n  \r\n  if (!context) {\r\n    throw new Error('useMobileSubscription must be used within a MobileSubscriptionProvider');\r\n  }\r\n  \r\n  // Helper to detect platform\r\n  const getPlatform = () => {\r\n    if (deviceDetection.isIOS()) return 'ios';\r\n    if (deviceDetection.isAndroid()) return 'android';\r\n    return 'web';\r\n  };\r\n  \r\n  // Activate subscription with code from web purchase\r\n  const activateWithCode = useCallback(async (code) => {\r\n    try {\r\n      // Get the current platform\r\n      const platform = getPlatform();\r\n      \r\n      // Call the appropriate handler based on platform\r\n      if (platform === 'ios' || platform === 'android') {\r\n        // Make API call to validate and activate code\r\n        const response = await fetch('/api/mobile/activate-code', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            code,\r\n            platform\r\n          })\r\n        });\r\n        \r\n        const result = await response.json();\r\n        \r\n        if (!result.success) {\r\n          throw new Error(result.error || 'Failed to activate code');\r\n        }\r\n        \r\n        // Store the receipt locally\r\n        localStorage.setItem('mobile_web_receipt', result.webReceipt);\r\n        \r\n        // Update context\r\n        context.refreshSubscription();\r\n        \r\n        return { success: true };\r\n      } else {\r\n        // Not on a mobile platform\r\n        return { success: false, error: 'This function is only available on mobile devices' };\r\n      }\r\n    } catch (error) {\r\n      console.error('Code activation error:', error);\r\n      return { success: false, error: error.message || 'Failed to activate code' };\r\n    }\r\n  }, [context]);\r\n  \r\n  return {\r\n    ...context,\r\n    activateWithCode\r\n  };\r\n};\r\n\r\nexport default useMobileSubscription;"],"mappings":";AAAA;;AAEA,SAASA,UAAU,EAAEC,WAAW,QAAQ,OAAO;AAC/C,SAASC,yBAAyB,QAAQ,sCAAsC;AAChF,SAASC,eAAe,QAAQ,0BAA0B;AAE1D,OAAO,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzC,MAAMC,OAAO,GAAGN,UAAU,CAACE,yBAAyB,CAAC;EAErD,IAAI,CAACI,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,wEAAwE,CAAC;EAC3F;;EAEA;EACA,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIL,eAAe,CAACM,KAAK,CAAC,CAAC,EAAE,OAAO,KAAK;IACzC,IAAIN,eAAe,CAACO,SAAS,CAAC,CAAC,EAAE,OAAO,SAAS;IACjD,OAAO,KAAK;EACd,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAGV,WAAW,CAAC,MAAOW,IAAI,IAAK;IACnD,IAAI;MACF;MACA,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;;MAE9B;MACA,IAAIK,QAAQ,KAAK,KAAK,IAAIA,QAAQ,KAAK,SAAS,EAAE;QAChD;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,2BAA2B,EAAE;UACxDC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnBR,IAAI;YACJC;UACF,CAAC;QACH,CAAC,CAAC;QAEF,MAAMQ,MAAM,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;QAEpC,IAAI,CAACD,MAAM,CAACE,OAAO,EAAE;UACnB,MAAM,IAAIhB,KAAK,CAACc,MAAM,CAACG,KAAK,IAAI,yBAAyB,CAAC;QAC5D;;QAEA;QACAC,YAAY,CAACC,OAAO,CAAC,oBAAoB,EAAEL,MAAM,CAACM,UAAU,CAAC;;QAE7D;QACArB,OAAO,CAACsB,mBAAmB,CAAC,CAAC;QAE7B,OAAO;UAAEL,OAAO,EAAE;QAAK,CAAC;MAC1B,CAAC,MAAM;QACL;QACA,OAAO;UAAEA,OAAO,EAAE,KAAK;UAAEC,KAAK,EAAE;QAAoD,CAAC;MACvF;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdK,OAAO,CAACL,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,OAAO;QAAED,OAAO,EAAE,KAAK;QAAEC,KAAK,EAAEA,KAAK,CAACM,OAAO,IAAI;MAA0B,CAAC;IAC9E;EACF,CAAC,EAAE,CAACxB,OAAO,CAAC,CAAC;EAEb,OAAO;IACL,GAAGA,OAAO;IACVK;EACF,CAAC;AACH,CAAC;AAACN,EAAA,CA7DWD,qBAAqB;AA+DlC,eAAeA,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}