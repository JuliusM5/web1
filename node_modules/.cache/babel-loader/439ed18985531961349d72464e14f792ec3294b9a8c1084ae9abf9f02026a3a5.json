{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\juliu\\\\Desktop\\\\web\\\\src\\\\components\\\\Tasks\\\\TaskReminders.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskReminders({\n  tasks,\n  onViewTask\n}) {\n  _s();\n  const [upcomingTasks, setUpcomingTasks] = useState([]);\n  const [showReminders, setShowReminders] = useState(false);\n\n  // Find tasks that are coming up soon (within 24 hours)\n  useEffect(() => {\n    const now = new Date();\n    const tomorrow = new Date(now);\n    tomorrow.setHours(now.getHours() + 24);\n    const upcoming = tasks.filter(task => {\n      if (!task.date || task.completed) return false;\n      const taskDate = new Date(task.date);\n      if (task.time) {\n        const [hours, minutes] = task.time.split(':');\n        taskDate.setHours(parseInt(hours, 10), parseInt(minutes, 10));\n      }\n      return taskDate > now && taskDate <= tomorrow;\n    }).sort((a, b) => {\n      const dateA = new Date(a.date);\n      const dateB = new Date(b.date);\n      if (a.time) {\n        const [hoursA, minutesA] = a.time.split(':');\n        dateA.setHours(parseInt(hoursA, 10), parseInt(minutesA, 10));\n      }\n      if (b.time) {\n        const [hoursB, minutesB] = b.time.split(':');\n        dateB.setHours(parseInt(hoursB, 10), parseInt(minutesB, 10));\n      }\n      return dateA - dateB;\n    });\n    setUpcomingTasks(upcoming);\n\n    // Show reminders if there are upcoming tasks\n    if (upcoming.length > 0) {\n      setShowReminders(true);\n    }\n  }, [tasks]);\n\n  // Format the time until a task is due\n  const formatTimeUntil = task => {\n    const now = new Date();\n    const taskDate = new Date(task.date);\n    if (task.time) {\n      const [hours, minutes] = task.time.split(':');\n      taskDate.setHours(parseInt(hours, 10), parseInt(minutes, 10));\n    } else {\n      // If no time is set, use end of day\n      taskDate.setHours(23, 59, 59);\n    }\n    const diffMs = taskDate - now;\n    const diffHrs = Math.floor(diffMs / (1000 * 60 * 60));\n    const diffMins = Math.floor(diffMs % (1000 * 60 * 60) / (1000 * 60));\n    if (diffHrs <= 0 && diffMins <= 0) {\n      return 'Now';\n    } else if (diffHrs < 1) {\n      return `${diffMins} min`;\n    } else if (diffHrs < 24) {\n      return `${diffHrs} hr${diffHrs > 1 ? 's' : ''}`;\n    }\n    return 'Soon';\n  };\n\n  // Get priority color\n  const getPriorityColor = priority => {\n    switch (priority) {\n      case 'high':\n        return 'border-red-500 bg-red-50';\n      case 'medium':\n        return 'border-yellow-500 bg-yellow-50';\n      case 'low':\n        return 'border-green-500 bg-green-50';\n      default:\n        return 'border-gray-300 bg-gray-50';\n    }\n  };\n  if (!showReminders || upcomingTasks.length === 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed bottom-4 right-4 z-50 w-80 bg-white rounded-lg shadow-lg border border-gray-200\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-blue-500 text-white px-4 py-2 rounded-t-lg flex justify-between items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"font-semibold\",\n        children: \"Upcoming Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowReminders(false),\n        className: \"text-white hover:text-gray-200\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"w-5 h-5\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          viewBox: \"0 0 24 24\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: \"2\",\n            d: \"M6 18L18 6M6 6l12 12\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-h-96 overflow-y-auto\",\n      children: upcomingTasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `p-3 border-l-4 hover:bg-gray-50 cursor-pointer ${getPriorityColor(task.priority)}`,\n        onClick: () => onViewTask && onViewTask(task),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-medium\",\n            children: task.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs bg-blue-100 text-blue-800 px-2 py-0.5 rounded-full\",\n            children: formatTimeUntil(task)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-500 mt-1\",\n          children: [task.date, \" \", task.time && `at ${task.time}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"px-4 py-2 bg-gray-50 rounded-b-lg text-center text-sm\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"text-blue-600 hover:text-blue-800\",\n        onClick: () => setShowReminders(false),\n        children: \"Dismiss All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskReminders, \"URr38Ae935qo+AE/wIySyuPR4eQ=\");\n_c = TaskReminders;\nexport default TaskReminders;\nvar _c;\n$RefreshReg$(_c, \"TaskReminders\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TaskReminders","tasks","onViewTask","_s","upcomingTasks","setUpcomingTasks","showReminders","setShowReminders","now","Date","tomorrow","setHours","getHours","upcoming","filter","task","date","completed","taskDate","time","hours","minutes","split","parseInt","sort","a","b","dateA","dateB","hoursA","minutesA","hoursB","minutesB","length","formatTimeUntil","diffMs","diffHrs","Math","floor","diffMins","getPriorityColor","priority","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","fill","stroke","viewBox","xmlns","strokeLinecap","strokeLinejoin","strokeWidth","d","map","text","id","_c","$RefreshReg$"],"sources":["C:/Users/juliu/Desktop/web/src/components/Tasks/TaskReminders.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction TaskReminders({ tasks, onViewTask }) {\r\n  const [upcomingTasks, setUpcomingTasks] = useState([]);\r\n  const [showReminders, setShowReminders] = useState(false);\r\n  \r\n  // Find tasks that are coming up soon (within 24 hours)\r\n  useEffect(() => {\r\n    const now = new Date();\r\n    const tomorrow = new Date(now);\r\n    tomorrow.setHours(now.getHours() + 24);\r\n    \r\n    const upcoming = tasks\r\n      .filter(task => {\r\n        if (!task.date || task.completed) return false;\r\n        \r\n        const taskDate = new Date(task.date);\r\n        if (task.time) {\r\n          const [hours, minutes] = task.time.split(':');\r\n          taskDate.setHours(parseInt(hours, 10), parseInt(minutes, 10));\r\n        }\r\n        \r\n        return taskDate > now && taskDate <= tomorrow;\r\n      })\r\n      .sort((a, b) => {\r\n        const dateA = new Date(a.date);\r\n        const dateB = new Date(b.date);\r\n        \r\n        if (a.time) {\r\n          const [hoursA, minutesA] = a.time.split(':');\r\n          dateA.setHours(parseInt(hoursA, 10), parseInt(minutesA, 10));\r\n        }\r\n        \r\n        if (b.time) {\r\n          const [hoursB, minutesB] = b.time.split(':');\r\n          dateB.setHours(parseInt(hoursB, 10), parseInt(minutesB, 10));\r\n        }\r\n        \r\n        return dateA - dateB;\r\n      });\r\n    \r\n    setUpcomingTasks(upcoming);\r\n    \r\n    // Show reminders if there are upcoming tasks\r\n    if (upcoming.length > 0) {\r\n      setShowReminders(true);\r\n    }\r\n  }, [tasks]);\r\n  \r\n  // Format the time until a task is due\r\n  const formatTimeUntil = (task) => {\r\n    const now = new Date();\r\n    const taskDate = new Date(task.date);\r\n    \r\n    if (task.time) {\r\n      const [hours, minutes] = task.time.split(':');\r\n      taskDate.setHours(parseInt(hours, 10), parseInt(minutes, 10));\r\n    } else {\r\n      // If no time is set, use end of day\r\n      taskDate.setHours(23, 59, 59);\r\n    }\r\n    \r\n    const diffMs = taskDate - now;\r\n    const diffHrs = Math.floor(diffMs / (1000 * 60 * 60));\r\n    const diffMins = Math.floor((diffMs % (1000 * 60 * 60)) / (1000 * 60));\r\n    \r\n    if (diffHrs <= 0 && diffMins <= 0) {\r\n      return 'Now';\r\n    } else if (diffHrs < 1) {\r\n      return `${diffMins} min`;\r\n    } else if (diffHrs < 24) {\r\n      return `${diffHrs} hr${diffHrs > 1 ? 's' : ''}`;\r\n    }\r\n    \r\n    return 'Soon';\r\n  };\r\n  \r\n  // Get priority color\r\n  const getPriorityColor = (priority) => {\r\n    switch (priority) {\r\n      case 'high':\r\n        return 'border-red-500 bg-red-50';\r\n      case 'medium':\r\n        return 'border-yellow-500 bg-yellow-50';\r\n      case 'low':\r\n        return 'border-green-500 bg-green-50';\r\n      default:\r\n        return 'border-gray-300 bg-gray-50';\r\n    }\r\n  };\r\n  \r\n  if (!showReminders || upcomingTasks.length === 0) {\r\n    return null;\r\n  }\r\n  \r\n  return (\r\n    <div className=\"fixed bottom-4 right-4 z-50 w-80 bg-white rounded-lg shadow-lg border border-gray-200\">\r\n      <div className=\"bg-blue-500 text-white px-4 py-2 rounded-t-lg flex justify-between items-center\">\r\n        <div className=\"font-semibold\">Upcoming Tasks</div>\r\n        <button \r\n          onClick={() => setShowReminders(false)}\r\n          className=\"text-white hover:text-gray-200\"\r\n        >\r\n          <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\r\n          </svg>\r\n        </button>\r\n      </div>\r\n      <div className=\"max-h-96 overflow-y-auto\">\r\n        {upcomingTasks.map(task => (\r\n          <div \r\n            key={task.id} \r\n            className={`p-3 border-l-4 hover:bg-gray-50 cursor-pointer ${getPriorityColor(task.priority)}`}\r\n            onClick={() => onViewTask && onViewTask(task)}\r\n          >\r\n            <div className=\"flex justify-between\">\r\n              <div className=\"font-medium\">{task.text}</div>\r\n              <div className=\"text-xs bg-blue-100 text-blue-800 px-2 py-0.5 rounded-full\">\r\n                {formatTimeUntil(task)}\r\n              </div>\r\n            </div>\r\n            <div className=\"text-sm text-gray-500 mt-1\">\r\n              {task.date} {task.time && `at ${task.time}`}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"px-4 py-2 bg-gray-50 rounded-b-lg text-center text-sm\">\r\n        <button className=\"text-blue-600 hover:text-blue-800\" onClick={() => setShowReminders(false)}>\r\n          Dismiss All\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskReminders;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}