{"ast":null,"code":"// src/data/mongoProvider.js\n// This is a browser-compatible version that communicates with a MongoDB backend via API\n\nimport ApiClient from '../services/ApiClient';\nconst mongoProvider = {\n  // Subscription methods\n  async createSubscription(subscriptionData) {\n    try {\n      const response = await ApiClient.post('/api/subscriptions', subscriptionData);\n      return response.data;\n    } catch (error) {\n      console.error('Error creating subscription:', error);\n      throw error;\n    }\n  },\n  async getSubscriptionByAccessCode(accessCode) {\n    try {\n      const response = await ApiClient.get(`/api/subscriptions/code/${accessCode}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error finding subscription by access code:', error);\n      throw error;\n    }\n  },\n  async getSubscriptionByTransactionId(transactionId) {\n    try {\n      const response = await ApiClient.get(`/api/subscriptions/transaction/${transactionId}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error finding subscription by transaction ID:', error);\n      throw error;\n    }\n  },\n  async updateSubscription(accessCode, updates) {\n    try {\n      const response = await ApiClient.put(`/api/subscriptions/code/${accessCode}`, updates);\n      return response.data;\n    } catch (error) {\n      console.error('Error updating subscription:', error);\n      throw error;\n    }\n  },\n  async activateSubscriptionOnDevice(accessCode, deviceId, platform) {\n    try {\n      const response = await ApiClient.post(`/api/subscriptions/code/${accessCode}/activate`, {\n        deviceId,\n        platform\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error activating subscription on device:', error);\n      throw error;\n    }\n  },\n  async deactivateSubscriptionOnDevice(accessCode, deviceId) {\n    try {\n      const response = await ApiClient.post(`/api/subscriptions/code/${accessCode}/deactivate`, {\n        deviceId\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error deactivating subscription on device:', error);\n      throw error;\n    }\n  },\n  async getAllSubscriptions() {\n    try {\n      const response = await ApiClient.get('/api/subscriptions');\n      return response.data;\n    } catch (error) {\n      console.error('Error getting all subscriptions:', error);\n      throw error;\n    }\n  },\n  async getActiveSubscriptions() {\n    try {\n      const response = await ApiClient.get('/api/subscriptions?status=active');\n      return response.data;\n    } catch (error) {\n      console.error('Error getting active subscriptions:', error);\n      throw error;\n    }\n  }\n};\nexport default mongoProvider;","map":{"version":3,"names":["ApiClient","mongoProvider","createSubscription","subscriptionData","response","post","data","error","console","getSubscriptionByAccessCode","accessCode","get","getSubscriptionByTransactionId","transactionId","updateSubscription","updates","put","activateSubscriptionOnDevice","deviceId","platform","deactivateSubscriptionOnDevice","getAllSubscriptions","getActiveSubscriptions"],"sources":["C:/Users/juliu/Desktop/web/src/data/mongoProvider.js"],"sourcesContent":["// src/data/mongoProvider.js\r\n// This is a browser-compatible version that communicates with a MongoDB backend via API\r\n\r\nimport ApiClient from '../services/ApiClient';\r\n\r\nconst mongoProvider = {\r\n  // Subscription methods\r\n  async createSubscription(subscriptionData) {\r\n    try {\r\n      const response = await ApiClient.post('/api/subscriptions', subscriptionData);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error creating subscription:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  async getSubscriptionByAccessCode(accessCode) {\r\n    try {\r\n      const response = await ApiClient.get(`/api/subscriptions/code/${accessCode}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error finding subscription by access code:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  async getSubscriptionByTransactionId(transactionId) {\r\n    try {\r\n      const response = await ApiClient.get(`/api/subscriptions/transaction/${transactionId}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error finding subscription by transaction ID:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  async updateSubscription(accessCode, updates) {\r\n    try {\r\n      const response = await ApiClient.put(`/api/subscriptions/code/${accessCode}`, updates);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error updating subscription:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  async activateSubscriptionOnDevice(accessCode, deviceId, platform) {\r\n    try {\r\n      const response = await ApiClient.post(`/api/subscriptions/code/${accessCode}/activate`, {\r\n        deviceId,\r\n        platform\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error activating subscription on device:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  async deactivateSubscriptionOnDevice(accessCode, deviceId) {\r\n    try {\r\n      const response = await ApiClient.post(`/api/subscriptions/code/${accessCode}/deactivate`, {\r\n        deviceId\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error deactivating subscription on device:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  async getAllSubscriptions() {\r\n    try {\r\n      const response = await ApiClient.get('/api/subscriptions');\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error getting all subscriptions:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  async getActiveSubscriptions() {\r\n    try {\r\n      const response = await ApiClient.get('/api/subscriptions?status=active');\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error getting active subscriptions:', error);\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\nexport default mongoProvider;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}