{"ast":null,"code":"var _s = $RefreshSig$();\n// src/hooks/useSubscription.js\nimport { useState, useEffect, useContext, useCallback } from 'react';\nimport { SubscriptionContext } from '../context/SubscriptionContext';\nimport subscriptionService from '../services/SubscriptionService';\nexport const useSubscription = () => {\n  _s();\n  // Get subscription context\n  const context = useContext(SubscriptionContext);\n  if (!context) {\n    throw new Error('useSubscription must be used within a SubscriptionProvider');\n  }\n  const {\n    subscription,\n    setSubscription\n  } = context;\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Check subscription status on mount\n  useEffect(() => {\n    const checkSubscription = async () => {\n      setIsLoading(true);\n      try {\n        const currentSubscription = await subscriptionService.checkSubscription();\n        setSubscription(currentSubscription);\n        setError(null);\n      } catch (err) {\n        console.error('Error checking subscription:', err);\n        setError(err.message || 'Failed to check subscription status');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    checkSubscription();\n  }, [setSubscription]);\n\n  // Create subscription\n  const createSubscription = useCallback(async (planId, paymentMethodId) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const newSubscription = await subscriptionService.createSubscription(planId, paymentMethodId);\n      setSubscription(newSubscription);\n      return newSubscription;\n    } catch (err) {\n      console.error('Error creating subscription:', err);\n      setError(err.message || 'Failed to create subscription');\n      throw err;\n    } finally {\n      setIsLoading(false);\n    }\n  }, [setSubscription]);\n\n  // Activate with code\n  const activateWithCode = useCallback(async accessCode => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const activatedSubscription = await subscriptionService.activateWithCode(accessCode);\n      setSubscription(activatedSubscription);\n      return activatedSubscription;\n    } catch (err) {\n      console.error('Error activating with code:', err);\n      setError(err.message || 'Failed to activate subscription with code');\n      throw err;\n    } finally {\n      setIsLoading(false);\n    }\n  }, [setSubscription]);\n\n  // Cancel subscription\n  const cancelSubscription = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const result = await subscriptionService.cancelSubscription();\n      setSubscription(null);\n      return result;\n    } catch (err) {\n      console.error('Error cancelling subscription:', err);\n      setError(err.message || 'Failed to cancel subscription');\n      throw err;\n    } finally {\n      setIsLoading(false);\n    }\n  }, [setSubscription]);\n\n  // Check feature availability\n  const isFeatureAvailable = useCallback(async featureName => {\n    try {\n      return await subscriptionService.isFeatureAvailable(featureName);\n    } catch (err) {\n      console.error(`Error checking feature availability for ${featureName}:`, err);\n      return false;\n    }\n  }, []);\n  return {\n    subscription,\n    isLoading,\n    error,\n    createSubscription,\n    activateWithCode,\n    cancelSubscription,\n    isFeatureAvailable,\n    hasActiveSubscription: Boolean(subscription && subscription.status === 'active')\n  };\n};\n_s(useSubscription, \"PzaBVTp/Lf/b73ZoX4WBQfwL67k=\");","map":{"version":3,"names":["useState","useEffect","useContext","useCallback","SubscriptionContext","subscriptionService","useSubscription","_s","context","Error","subscription","setSubscription","isLoading","setIsLoading","error","setError","checkSubscription","currentSubscription","err","console","message","createSubscription","planId","paymentMethodId","newSubscription","activateWithCode","accessCode","activatedSubscription","cancelSubscription","result","isFeatureAvailable","featureName","hasActiveSubscription","Boolean","status"],"sources":["C:/Users/juliu/Desktop/web/src/hooks/useSubscription.js"],"sourcesContent":["// src/hooks/useSubscription.js\r\nimport { useState, useEffect, useContext, useCallback } from 'react';\r\nimport { SubscriptionContext } from '../context/SubscriptionContext';\r\nimport subscriptionService from '../services/SubscriptionService';\r\n\r\nexport const useSubscription = () => {\r\n  // Get subscription context\r\n  const context = useContext(SubscriptionContext);\r\n  \r\n  if (!context) {\r\n    throw new Error('useSubscription must be used within a SubscriptionProvider');\r\n  }\r\n  \r\n  const { subscription, setSubscription } = context;\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  \r\n  // Check subscription status on mount\r\n  useEffect(() => {\r\n    const checkSubscription = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const currentSubscription = await subscriptionService.checkSubscription();\r\n        setSubscription(currentSubscription);\r\n        setError(null);\r\n      } catch (err) {\r\n        console.error('Error checking subscription:', err);\r\n        setError(err.message || 'Failed to check subscription status');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    \r\n    checkSubscription();\r\n  }, [setSubscription]);\r\n  \r\n  // Create subscription\r\n  const createSubscription = useCallback(async (planId, paymentMethodId) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const newSubscription = await subscriptionService.createSubscription(planId, paymentMethodId);\r\n      setSubscription(newSubscription);\r\n      return newSubscription;\r\n    } catch (err) {\r\n      console.error('Error creating subscription:', err);\r\n      setError(err.message || 'Failed to create subscription');\r\n      throw err;\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [setSubscription]);\r\n  \r\n  // Activate with code\r\n  const activateWithCode = useCallback(async (accessCode) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const activatedSubscription = await subscriptionService.activateWithCode(accessCode);\r\n      setSubscription(activatedSubscription);\r\n      return activatedSubscription;\r\n    } catch (err) {\r\n      console.error('Error activating with code:', err);\r\n      setError(err.message || 'Failed to activate subscription with code');\r\n      throw err;\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [setSubscription]);\r\n  \r\n  // Cancel subscription\r\n  const cancelSubscription = useCallback(async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const result = await subscriptionService.cancelSubscription();\r\n      setSubscription(null);\r\n      return result;\r\n    } catch (err) {\r\n      console.error('Error cancelling subscription:', err);\r\n      setError(err.message || 'Failed to cancel subscription');\r\n      throw err;\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [setSubscription]);\r\n  \r\n  // Check feature availability\r\n  const isFeatureAvailable = useCallback(async (featureName) => {\r\n    try {\r\n      return await subscriptionService.isFeatureAvailable(featureName);\r\n    } catch (err) {\r\n      console.error(`Error checking feature availability for ${featureName}:`, err);\r\n      return false;\r\n    }\r\n  }, []);\r\n  \r\n  return {\r\n    subscription,\r\n    isLoading,\r\n    error,\r\n    createSubscription,\r\n    activateWithCode,\r\n    cancelSubscription,\r\n    isFeatureAvailable,\r\n    hasActiveSubscription: Boolean(subscription && subscription.status === 'active')\r\n  };\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}