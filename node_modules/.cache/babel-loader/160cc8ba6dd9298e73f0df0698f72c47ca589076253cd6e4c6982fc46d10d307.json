{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\juliu\\\\Desktop\\\\web\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/context/AuthContext.js\nimport React, { createContext, useContext, useState, useEffect } from 'react';\n\n// Create the auth context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\n\n// Auth provider component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Initialize auth state on mount\n  useEffect(() => {\n    const checkAuth = async () => {\n      try {\n        // Check if there's a user in localStorage\n        const storedUser = localStorage.getItem('user');\n        if (storedUser) {\n          const userData = JSON.parse(storedUser);\n          setUser(userData);\n          setIsAuthenticated(true);\n        }\n      } catch (error) {\n        console.error('Failed to restore auth state:', error);\n        // Clear potentially corrupted data\n        localStorage.removeItem('user');\n      } finally {\n        setLoading(false);\n      }\n    };\n    checkAuth();\n  }, []);\n\n  // Login function\n  const login = async (username, password) => {\n    // This would normally call your API\n    // For now, we'll simulate a successful login\n\n    const userData = {\n      id: '123',\n      username,\n      name: 'Demo User',\n      email: `${username}@example.com`\n    };\n\n    // Store user in localStorage for persistence\n    localStorage.setItem('user', JSON.stringify(userData));\n    setUser(userData);\n    setIsAuthenticated(true);\n    return userData;\n  };\n\n  // Register function\n  const register = async userData => {\n    // This would normally call your API\n    // For now, we'll simulate a successful registration\n\n    const newUser = {\n      id: Date.now().toString(),\n      ...userData,\n      name: userData.username\n    };\n\n    // Store user in localStorage\n    localStorage.setItem('user', JSON.stringify(newUser));\n    setUser(newUser);\n    setIsAuthenticated(true);\n    return newUser;\n  };\n\n  // Logout function\n  const logout = () => {\n    localStorage.removeItem('user');\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n\n  // The value that will be given to the context\n  const value = {\n    user,\n    loading,\n    isAuthenticated,\n    login,\n    register,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 10\n  }, this);\n};\n\n// Custom hook to use the auth context\n_s(AuthProvider, \"xBgiRagNfQVCfEr2dT2PptfN+TE=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","isAuthenticated","setIsAuthenticated","checkAuth","storedUser","localStorage","getItem","userData","JSON","parse","error","console","removeItem","login","username","password","id","name","email","setItem","stringify","register","newUser","Date","now","toString","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/juliu/Desktop/web/src/context/AuthContext.js"],"sourcesContent":["// src/context/AuthContext.js\r\nimport React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\n// Create the auth context\r\nconst AuthContext = createContext(null);\r\n\r\n// Auth provider component\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  // Initialize auth state on mount\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      try {\r\n        // Check if there's a user in localStorage\r\n        const storedUser = localStorage.getItem('user');\r\n        \r\n        if (storedUser) {\r\n          const userData = JSON.parse(storedUser);\r\n          setUser(userData);\r\n          setIsAuthenticated(true);\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to restore auth state:', error);\r\n        // Clear potentially corrupted data\r\n        localStorage.removeItem('user');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    checkAuth();\r\n  }, []);\r\n\r\n  // Login function\r\n  const login = async (username, password) => {\r\n    // This would normally call your API\r\n    // For now, we'll simulate a successful login\r\n    \r\n    const userData = {\r\n      id: '123',\r\n      username,\r\n      name: 'Demo User',\r\n      email: `${username}@example.com`\r\n    };\r\n\r\n    // Store user in localStorage for persistence\r\n    localStorage.setItem('user', JSON.stringify(userData));\r\n    \r\n    setUser(userData);\r\n    setIsAuthenticated(true);\r\n    return userData;\r\n  };\r\n\r\n  // Register function\r\n  const register = async (userData) => {\r\n    // This would normally call your API\r\n    // For now, we'll simulate a successful registration\r\n    \r\n    const newUser = {\r\n      id: Date.now().toString(),\r\n      ...userData,\r\n      name: userData.username\r\n    };\r\n\r\n    // Store user in localStorage\r\n    localStorage.setItem('user', JSON.stringify(newUser));\r\n    \r\n    setUser(newUser);\r\n    setIsAuthenticated(true);\r\n    return newUser;\r\n  };\r\n\r\n  // Logout function\r\n  const logout = () => {\r\n    localStorage.removeItem('user');\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n  };\r\n\r\n  // The value that will be given to the context\r\n  const value = {\r\n    user,\r\n    loading,\r\n    isAuthenticated,\r\n    login,\r\n    register,\r\n    logout\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n\r\n// Custom hook to use the auth context\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport default AuthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}