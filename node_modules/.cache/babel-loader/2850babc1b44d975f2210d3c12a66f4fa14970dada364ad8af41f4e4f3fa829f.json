{"ast":null,"code":"import React,{useState,useEffect,useMemo}from'react';import{useI18n}from'../../utils/i18n';// Import the i18n hook\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function DynamicCalendar(_ref){let{startDate,endDate,events=[],onDateClick,selectedDate:externalSelectedDate}=_ref;const[currentMonth,setCurrentMonth]=useState('');const[calendarDays,setCalendarDays]=useState([]);const[internalSelectedDate,setInternalSelectedDate]=useState('');// Get i18n functionality\nconst{t}=useI18n();// Use externalSelectedDate if provided\nuseEffect(()=>{if(externalSelectedDate){setInternalSelectedDate(externalSelectedDate);}},[externalSelectedDate]);// Initialize calendar with trip start date\nuseEffect(()=>{if(startDate){const date=new Date(startDate);// Set current month to YYYY-MM format for the calendar\nsetCurrentMonth(`${date.getFullYear()}-${String(date.getMonth()+1).padStart(2,'0')}`);// If there's no selected date yet, use the start date\nif(!internalSelectedDate){setInternalSelectedDate(startDate);}}},[startDate,internalSelectedDate]);// Create calendar days array - using useMemo to prevent recreation on every render\nconst generateCalendarDays=useMemo(()=>{if(!currentMonth)return[];const[year,month]=currentMonth.split('-').map(Number);const firstDay=new Date(year,month-1,1);const lastDay=new Date(year,month,0);const startingDayOfWeek=firstDay.getDay();// 0 (Sunday) to 6 (Saturday)\nconst daysInMonth=lastDay.getDate();// Create an array of calendar days\nconst days=[];// Add empty slots for days before the first of the month\nfor(let i=0;i<startingDayOfWeek;i++){days.push({day:'',date:'',isCurrentMonth:false});}// Format start and end dates for comparison\nconst tripStartDate=startDate?new Date(startDate):null;const tripEndDate=endDate?new Date(endDate):null;// Add days of the current month\nfor(let day=1;day<=daysInMonth;day++){const date=new Date(year,month-1,day);const dateString=date.toISOString().split('T')[0];// Check if this date is within the trip dates\nconst inTripRange=tripStartDate&&tripEndDate?date>=tripStartDate&&date<=tripEndDate:false;// Find events for this day\nconst dayEvents=events.filter(event=>event.date===dateString);days.push({day,date:dateString,isCurrentMonth:true,inTripRange,hasEvents:dayEvents.length>0,events:dayEvents});}return days;},[currentMonth,startDate,endDate,events]);// Update calendar days when the memoized value changes\nuseEffect(()=>{setCalendarDays(generateCalendarDays);},[generateCalendarDays]);// Navigate to previous month\nconst prevMonth=()=>{const[year,month]=currentMonth.split('-').map(Number);let newMonth=month-1;let newYear=year;if(newMonth<1){newMonth=12;newYear-=1;}setCurrentMonth(`${newYear}-${String(newMonth).padStart(2,'0')}`);};// Navigate to next month\nconst nextMonth=()=>{const[year,month]=currentMonth.split('-').map(Number);let newMonth=month+1;let newYear=year;if(newMonth>12){newMonth=1;newYear+=1;}setCurrentMonth(`${newYear}-${String(newMonth).padStart(2,'0')}`);};// Format month for display\nconst formatMonth=monthString=>{if(!monthString)return'';const[year,month]=monthString.split('-');const date=new Date(year,month-1,1);// Get browser locale or use 'en-US' as fallback\nconst userLocale=navigator.language||'en-US';return date.toLocaleDateString(userLocale,{month:'long',year:'numeric'});};// Handle date click\nconst handleDateClick=date=>{if(date&&onDateClick){setInternalSelectedDate(date);onDateClick(date);}};// Weekday names\nconst weekdays=useMemo(()=>{// Get localized weekday names based on user's locale\nconst userLocale=navigator.language||'en-US';return Array.from({length:7},(_,i)=>{const date=new Date(2023,0,i+1);// Jan 1-7, 2023\nreturn date.toLocaleDateString(userLocale,{weekday:'short'});});},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white border border-gray-200 rounded-lg overflow-hidden\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center bg-blue-50 px-4 py-3 border-b border-gray-200\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:prevMonth,className:\"p-1 text-gray-600 hover:text-gray-900\",children:\"\\u25C0\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"font-medium text-blue-800\",children:formatMonth(currentMonth)}),/*#__PURE__*/_jsx(\"button\",{onClick:nextMonth,className:\"p-1 text-gray-600 hover:text-gray-900\",children:\"\\u25B6\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"p-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-7 mb-1\",children:weekdays.map((day,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"text-center text-gray-500 text-xs font-medium py-1\",children:day},index))}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-7 gap-1\",children:calendarDays.map((day,index)=>/*#__PURE__*/_jsxs(\"div\",{onClick:()=>day.isCurrentMonth?handleDateClick(day.date):null,className:`\n                text-center py-1 ${day.isCurrentMonth?'cursor-pointer hover:bg-blue-50':''} rounded-md relative\n                ${day.inTripRange?'bg-blue-50':''}\n                ${day.date===internalSelectedDate?'ring-2 ring-blue-500':''}\n              `,children:[/*#__PURE__*/_jsx(\"span\",{className:`\n                ${!day.isCurrentMonth?'text-gray-300':'text-gray-700'}\n                ${day.date===internalSelectedDate?'font-bold text-blue-700':''}\n              `,children:day.day}),day.hasEvents&&/*#__PURE__*/_jsx(\"div\",{className:\"absolute bottom-0 left-0 right-0 flex justify-center\",children:/*#__PURE__*/_jsx(\"div\",{className:\"h-1 w-1 bg-blue-500 rounded-full\"})})]},index))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-center items-center space-x-4 border-t border-gray-200 p-2 text-xs text-gray-500\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"h-3 w-3 bg-blue-50 border border-gray-200 rounded-sm mr-1\"}),/*#__PURE__*/_jsx(\"span\",{children:t('calendar.tripDays','Trip Days')})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"h-3 w-3 bg-white border border-gray-200 rounded-sm relative mr-1\",children:/*#__PURE__*/_jsx(\"div\",{className:\"absolute bottom-0 left-0 right-0 flex justify-center\",children:/*#__PURE__*/_jsx(\"div\",{className:\"h-1 w-1 bg-blue-500 rounded-full\"})})}),/*#__PURE__*/_jsx(\"span\",{children:t('calendar.events','Events')})]})]})]});}export default DynamicCalendar;","map":{"version":3,"names":["React","useState","useEffect","useMemo","useI18n","jsx","_jsx","jsxs","_jsxs","DynamicCalendar","_ref","startDate","endDate","events","onDateClick","selectedDate","externalSelectedDate","currentMonth","setCurrentMonth","calendarDays","setCalendarDays","internalSelectedDate","setInternalSelectedDate","t","date","Date","getFullYear","String","getMonth","padStart","generateCalendarDays","year","month","split","map","Number","firstDay","lastDay","startingDayOfWeek","getDay","daysInMonth","getDate","days","i","push","day","isCurrentMonth","tripStartDate","tripEndDate","dateString","toISOString","inTripRange","dayEvents","filter","event","hasEvents","length","prevMonth","newMonth","newYear","nextMonth","formatMonth","monthString","userLocale","navigator","language","toLocaleDateString","handleDateClick","weekdays","Array","from","_","weekday","className","children","onClick","index"],"sources":["C:/Users/juliu/Desktop/web/src/components/Calendar/DynamicCalendar.jsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\r\nimport { useI18n } from '../../utils/i18n'; // Import the i18n hook\r\n\r\nfunction DynamicCalendar({ startDate, endDate, events = [], onDateClick, selectedDate: externalSelectedDate }) {\r\n  const [currentMonth, setCurrentMonth] = useState('');\r\n  const [calendarDays, setCalendarDays] = useState([]);\r\n  const [internalSelectedDate, setInternalSelectedDate] = useState('');\r\n  \r\n  // Get i18n functionality\r\n  const { t } = useI18n();\r\n  \r\n  // Use externalSelectedDate if provided\r\n  useEffect(() => {\r\n    if (externalSelectedDate) {\r\n      setInternalSelectedDate(externalSelectedDate);\r\n    }\r\n  }, [externalSelectedDate]);\r\n  \r\n  // Initialize calendar with trip start date\r\n  useEffect(() => {\r\n    if (startDate) {\r\n      const date = new Date(startDate);\r\n      // Set current month to YYYY-MM format for the calendar\r\n      setCurrentMonth(`${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`);\r\n      \r\n      // If there's no selected date yet, use the start date\r\n      if (!internalSelectedDate) {\r\n        setInternalSelectedDate(startDate);\r\n      }\r\n    }\r\n  }, [startDate, internalSelectedDate]);\r\n\r\n  // Create calendar days array - using useMemo to prevent recreation on every render\r\n  const generateCalendarDays = useMemo(() => {\r\n    if (!currentMonth) return [];\r\n    \r\n    const [year, month] = currentMonth.split('-').map(Number);\r\n    const firstDay = new Date(year, month - 1, 1);\r\n    const lastDay = new Date(year, month, 0);\r\n    \r\n    const startingDayOfWeek = firstDay.getDay(); // 0 (Sunday) to 6 (Saturday)\r\n    const daysInMonth = lastDay.getDate();\r\n    \r\n    // Create an array of calendar days\r\n    const days = [];\r\n    \r\n    // Add empty slots for days before the first of the month\r\n    for (let i = 0; i < startingDayOfWeek; i++) {\r\n      days.push({ day: '', date: '', isCurrentMonth: false });\r\n    }\r\n    \r\n    // Format start and end dates for comparison\r\n    const tripStartDate = startDate ? new Date(startDate) : null;\r\n    const tripEndDate = endDate ? new Date(endDate) : null;\r\n    \r\n    // Add days of the current month\r\n    for (let day = 1; day <= daysInMonth; day++) {\r\n      const date = new Date(year, month - 1, day);\r\n      const dateString = date.toISOString().split('T')[0];\r\n      \r\n      // Check if this date is within the trip dates\r\n      const inTripRange = tripStartDate && tripEndDate ? \r\n        (date >= tripStartDate && date <= tripEndDate) : false;\r\n      \r\n      // Find events for this day\r\n      const dayEvents = events.filter(event => event.date === dateString);\r\n      \r\n      days.push({\r\n        day,\r\n        date: dateString,\r\n        isCurrentMonth: true,\r\n        inTripRange,\r\n        hasEvents: dayEvents.length > 0,\r\n        events: dayEvents\r\n      });\r\n    }\r\n    \r\n    return days;\r\n  }, [currentMonth, startDate, endDate, events]);\r\n  \r\n  // Update calendar days when the memoized value changes\r\n  useEffect(() => {\r\n    setCalendarDays(generateCalendarDays);\r\n  }, [generateCalendarDays]);\r\n  \r\n  // Navigate to previous month\r\n  const prevMonth = () => {\r\n    const [year, month] = currentMonth.split('-').map(Number);\r\n    let newMonth = month - 1;\r\n    let newYear = year;\r\n    \r\n    if (newMonth < 1) {\r\n      newMonth = 12;\r\n      newYear -= 1;\r\n    }\r\n    \r\n    setCurrentMonth(`${newYear}-${String(newMonth).padStart(2, '0')}`);\r\n  };\r\n  \r\n  // Navigate to next month\r\n  const nextMonth = () => {\r\n    const [year, month] = currentMonth.split('-').map(Number);\r\n    let newMonth = month + 1;\r\n    let newYear = year;\r\n    \r\n    if (newMonth > 12) {\r\n      newMonth = 1;\r\n      newYear += 1;\r\n    }\r\n    \r\n    setCurrentMonth(`${newYear}-${String(newMonth).padStart(2, '0')}`);\r\n  };\r\n  \r\n  // Format month for display\r\n  const formatMonth = (monthString) => {\r\n    if (!monthString) return '';\r\n    \r\n    const [year, month] = monthString.split('-');\r\n    const date = new Date(year, month - 1, 1);\r\n    \r\n    // Get browser locale or use 'en-US' as fallback\r\n    const userLocale = navigator.language || 'en-US';\r\n    \r\n    return date.toLocaleDateString(userLocale, { \r\n      month: 'long', \r\n      year: 'numeric'\r\n    });\r\n  };\r\n  \r\n  // Handle date click\r\n  const handleDateClick = (date) => {\r\n    if (date && onDateClick) {\r\n      setInternalSelectedDate(date);\r\n      onDateClick(date);\r\n    }\r\n  };\r\n  \r\n  // Weekday names\r\n  const weekdays = useMemo(() => {\r\n    // Get localized weekday names based on user's locale\r\n    const userLocale = navigator.language || 'en-US';\r\n    \r\n    return Array.from({ length: 7 }, (_, i) => {\r\n      const date = new Date(2023, 0, i + 1); // Jan 1-7, 2023\r\n      return date.toLocaleDateString(userLocale, { weekday: 'short' });\r\n    });\r\n  }, []);\r\n  \r\n  return (\r\n    <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\r\n      {/* Calendar Header */}\r\n      <div className=\"flex justify-between items-center bg-blue-50 px-4 py-3 border-b border-gray-200\">\r\n        <button\r\n          onClick={prevMonth}\r\n          className=\"p-1 text-gray-600 hover:text-gray-900\"\r\n        >\r\n          ◀\r\n        </button>\r\n        <h3 className=\"font-medium text-blue-800\">\r\n          {formatMonth(currentMonth)}\r\n        </h3>\r\n        <button\r\n          onClick={nextMonth}\r\n          className=\"p-1 text-gray-600 hover:text-gray-900\"\r\n        >\r\n          ▶\r\n        </button>\r\n      </div>\r\n      \r\n      {/* Calendar Grid */}\r\n      <div className=\"p-2\">\r\n        {/* Weekday Headers */}\r\n        <div className=\"grid grid-cols-7 mb-1\">\r\n          {weekdays.map((day, index) => (\r\n            <div key={index} className=\"text-center text-gray-500 text-xs font-medium py-1\">\r\n              {day}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        \r\n        {/* Calendar Days */}\r\n        <div className=\"grid grid-cols-7 gap-1\">\r\n          {calendarDays.map((day, index) => (\r\n            <div \r\n              key={index}\r\n              onClick={() => day.isCurrentMonth ? handleDateClick(day.date) : null}\r\n              className={`\r\n                text-center py-1 ${day.isCurrentMonth ? 'cursor-pointer hover:bg-blue-50' : ''} rounded-md relative\r\n                ${day.inTripRange ? 'bg-blue-50' : ''}\r\n                ${day.date === internalSelectedDate ? 'ring-2 ring-blue-500' : ''}\r\n              `}\r\n            >\r\n              <span className={`\r\n                ${!day.isCurrentMonth ? 'text-gray-300' : 'text-gray-700'}\r\n                ${day.date === internalSelectedDate ? 'font-bold text-blue-700' : ''}\r\n              `}>\r\n                {day.day}\r\n              </span>\r\n              \r\n              {/* Event indicator */}\r\n              {day.hasEvents && (\r\n                <div className=\"absolute bottom-0 left-0 right-0 flex justify-center\">\r\n                  <div className=\"h-1 w-1 bg-blue-500 rounded-full\"></div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Legend */}\r\n      <div className=\"flex justify-center items-center space-x-4 border-t border-gray-200 p-2 text-xs text-gray-500\">\r\n        <div className=\"flex items-center\">\r\n          <div className=\"h-3 w-3 bg-blue-50 border border-gray-200 rounded-sm mr-1\"></div>\r\n          <span>{t('calendar.tripDays', 'Trip Days')}</span>\r\n        </div>\r\n        <div className=\"flex items-center\">\r\n          <div className=\"h-3 w-3 bg-white border border-gray-200 rounded-sm relative mr-1\">\r\n            <div className=\"absolute bottom-0 left-0 right-0 flex justify-center\">\r\n              <div className=\"h-1 w-1 bg-blue-500 rounded-full\"></div>\r\n            </div>\r\n          </div>\r\n          <span>{t('calendar.events', 'Events')}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DynamicCalendar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}