{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\juliu\\\\Desktop\\\\web\\\\src\\\\components\\\\Budget\\\\BudgetChart.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BudgetChart({\n  budgetData\n}) {\n  // Format the data for the chart\n  const chartData = Object.entries(budgetData).filter(([_, value]) => value > 0).map(([category, value]) => ({\n    category: category.charAt(0).toUpperCase() + category.slice(1),\n    value,\n    percentage: 0,\n    // We'll calculate this\n    color: getCategoryColor(category)\n  }));\n\n  // Calculate total and percentages\n  const total = chartData.reduce((sum, item) => sum + item.value, 0);\n  chartData.forEach(item => {\n    item.percentage = Math.round(item.value / total * 100);\n  });\n\n  // Sort by value (largest first)\n  chartData.sort((a, b) => b.value - a.value);\n\n  // Get color for category\n  function getCategoryColor(category) {\n    switch (category) {\n      case 'accommodation':\n        return '#3b82f6';\n      // blue-500\n      case 'food':\n        return '#f59e0b';\n      // amber-500\n      case 'transportation':\n        return '#10b981';\n      // emerald-500\n      case 'activities':\n        return '#8b5cf6';\n      // violet-500\n      case 'other':\n        return '#6b7280';\n      // gray-500\n      default:\n        return '#d1d5db';\n      // gray-300\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: chartData.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center h-48 bg-gray-50 rounded-lg border border-gray-200\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500 text-center\",\n        children: [\"No budget data to display.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 39\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm\",\n          children: \"Add budget items to see the chart.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative h-48 w-48 mx-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          viewBox: \"0 0 100 100\",\n          className: \"w-full h-full\",\n          children: [renderPieSlices(chartData), /*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: \"50\",\n            cy: \"50\",\n            r: \"25\",\n            fill: \"white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n            x: \"50\",\n            y: \"46\",\n            textAnchor: \"middle\",\n            fontSize: \"10\",\n            fontWeight: \"bold\",\n            children: [\"$\", total]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n            x: \"50\",\n            y: \"58\",\n            textAnchor: \"middle\",\n            fontSize: \"6\",\n            children: \"Total Budget\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 space-y-2\",\n        children: chartData.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-4 h-4 rounded-sm mr-2\",\n              style: {\n                backgroundColor: item.color\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm\",\n              children: item.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm font-medium mr-2\",\n              children: [\"$\", item.value]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xs text-gray-500\",\n              children: [\"(\", item.percentage, \"%)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n// Helper function to render pie slices\n_c = BudgetChart;\nfunction renderPieSlices(data) {\n  const total = data.reduce((sum, item) => sum + item.value, 0);\n  let startAngle = 0;\n  return data.map((item, index) => {\n    // Calculate angles for the slice\n    const percentage = item.value / total;\n    const angle = percentage * 360;\n    const endAngle = startAngle + angle;\n\n    // Convert angles to radians and calculate coordinates\n    const startRad = (startAngle - 90) * Math.PI / 180;\n    const endRad = (endAngle - 90) * Math.PI / 180;\n    const x1 = 50 + 40 * Math.cos(startRad);\n    const y1 = 50 + 40 * Math.sin(startRad);\n    const x2 = 50 + 40 * Math.cos(endRad);\n    const y2 = 50 + 40 * Math.sin(endRad);\n\n    // Create SVG arc path\n    const largeArcFlag = angle > 180 ? 1 : 0;\n    const pathData = [`M 50 50`, `L ${x1} ${y1}`, `A 40 40 0 ${largeArcFlag} 1 ${x2} ${y2}`, `Z`].join(' ');\n\n    // Update the start angle for the next slice\n    startAngle = endAngle;\n    return /*#__PURE__*/_jsxDEV(\"path\", {\n      d: pathData,\n      fill: item.color,\n      stroke: \"white\",\n      strokeWidth: \"1\"\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this);\n  });\n}\nexport default BudgetChart;\nvar _c;\n$RefreshReg$(_c, \"BudgetChart\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","BudgetChart","budgetData","chartData","Object","entries","filter","_","value","map","category","charAt","toUpperCase","slice","percentage","color","getCategoryColor","total","reduce","sum","item","forEach","Math","round","sort","a","b","children","length","className","fileName","_jsxFileName","lineNumber","columnNumber","viewBox","renderPieSlices","cx","cy","r","fill","x","y","textAnchor","fontSize","fontWeight","index","style","backgroundColor","_c","data","startAngle","angle","endAngle","startRad","PI","endRad","x1","cos","y1","sin","x2","y2","largeArcFlag","pathData","join","d","stroke","strokeWidth","$RefreshReg$"],"sources":["C:/Users/juliu/Desktop/web/src/components/Budget/BudgetChart.jsx"],"sourcesContent":["import React from 'react';\n\nfunction BudgetChart({ budgetData }) {\n  // Format the data for the chart\n  const chartData = Object.entries(budgetData)\n    .filter(([_, value]) => value > 0)\n    .map(([category, value]) => ({\n      category: category.charAt(0).toUpperCase() + category.slice(1),\n      value,\n      percentage: 0, // We'll calculate this\n      color: getCategoryColor(category)\n    }));\n  \n  // Calculate total and percentages\n  const total = chartData.reduce((sum, item) => sum + item.value, 0);\n  chartData.forEach(item => {\n    item.percentage = Math.round((item.value / total) * 100);\n  });\n  \n  // Sort by value (largest first)\n  chartData.sort((a, b) => b.value - a.value);\n\n  // Get color for category\n  function getCategoryColor(category) {\n    switch (category) {\n      case 'accommodation':\n        return '#3b82f6'; // blue-500\n      case 'food':\n        return '#f59e0b'; // amber-500\n      case 'transportation':\n        return '#10b981'; // emerald-500\n      case 'activities':\n        return '#8b5cf6'; // violet-500\n      case 'other':\n        return '#6b7280'; // gray-500\n      default:\n        return '#d1d5db'; // gray-300\n    }\n  }\n\n  return (\n    <div>\n      {chartData.length === 0 ? (\n        <div className=\"flex items-center justify-center h-48 bg-gray-50 rounded-lg border border-gray-200\">\n          <p className=\"text-gray-500 text-center\">\n            No budget data to display.<br />\n            <span className=\"text-sm\">Add budget items to see the chart.</span>\n          </p>\n        </div>\n      ) : (\n        <div>\n          {/* Pie Chart Visualization */}\n          <div className=\"relative h-48 w-48 mx-auto\">\n            <svg viewBox=\"0 0 100 100\" className=\"w-full h-full\">\n              {/* Create pie slices */}\n              {renderPieSlices(chartData)}\n              \n              {/* Center circle (empty space) */}\n              <circle cx=\"50\" cy=\"50\" r=\"25\" fill=\"white\" />\n              \n              {/* Total amount in center */}\n              <text x=\"50\" y=\"46\" textAnchor=\"middle\" fontSize=\"10\" fontWeight=\"bold\">\n                ${total}\n              </text>\n              <text x=\"50\" y=\"58\" textAnchor=\"middle\" fontSize=\"6\">\n                Total Budget\n              </text>\n            </svg>\n          </div>\n          \n          {/* Legend */}\n          <div className=\"mt-4 space-y-2\">\n            {chartData.map((item, index) => (\n              <div key={index} className=\"flex items-center justify-between\">\n                <div className=\"flex items-center\">\n                  <div \n                    className=\"w-4 h-4 rounded-sm mr-2\"\n                    style={{ backgroundColor: item.color }}\n                  ></div>\n                  <span className=\"text-sm\">{item.category}</span>\n                </div>\n                <div className=\"flex items-center\">\n                  <span className=\"text-sm font-medium mr-2\">${item.value}</span>\n                  <span className=\"text-xs text-gray-500\">({item.percentage}%)</span>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\n// Helper function to render pie slices\nfunction renderPieSlices(data) {\n  const total = data.reduce((sum, item) => sum + item.value, 0);\n  let startAngle = 0;\n  \n  return data.map((item, index) => {\n    // Calculate angles for the slice\n    const percentage = item.value / total;\n    const angle = percentage * 360;\n    const endAngle = startAngle + angle;\n    \n    // Convert angles to radians and calculate coordinates\n    const startRad = (startAngle - 90) * Math.PI / 180;\n    const endRad = (endAngle - 90) * Math.PI / 180;\n    \n    const x1 = 50 + 40 * Math.cos(startRad);\n    const y1 = 50 + 40 * Math.sin(startRad);\n    const x2 = 50 + 40 * Math.cos(endRad);\n    const y2 = 50 + 40 * Math.sin(endRad);\n    \n    // Create SVG arc path\n    const largeArcFlag = angle > 180 ? 1 : 0;\n    const pathData = [\n      `M 50 50`,\n      `L ${x1} ${y1}`,\n      `A 40 40 0 ${largeArcFlag} 1 ${x2} ${y2}`,\n      `Z`\n    ].join(' ');\n    \n    // Update the start angle for the next slice\n    startAngle = endAngle;\n    \n    return (\n      <path \n        key={index}\n        d={pathData} \n        fill={item.color}\n        stroke=\"white\"\n        strokeWidth=\"1\"\n      />\n    );\n  });\n}\n\nexport default BudgetChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}