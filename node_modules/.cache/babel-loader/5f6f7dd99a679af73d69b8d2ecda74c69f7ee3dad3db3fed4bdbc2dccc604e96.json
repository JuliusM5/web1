{"ast":null,"code":"// src/utils/packingUtils.js\n/**\r\n * Utility functions for packing list recommendations and management\r\n *//**\r\n * Generate packing recommendations based on destination, trip duration, and weather\r\n * \r\n * @param {string} destination - The trip destination\r\n * @param {number} duration - Trip duration in days\r\n * @param {Object} weatherData - Weather forecast data\r\n * @param {string} tripType - Type of trip (leisure, business, adventure, etc.)\r\n * @param {Function} t - Translation function from i18n\r\n * @returns {Array} Array of packing categories with recommended items\r\n */export function getPackingRecommendations(destination,duration,weatherData){let tripType=arguments.length>3&&arguments[3]!==undefined?arguments[3]:'leisure';let t=arguments.length>4&&arguments[4]!==undefined?arguments[4]:key=>key;// Base items everyone needs regardless of destination\nconst baseRecommendations=[{id:'essentials',name:t('packing.categories.essentials','Essentials'),icon:'⭐',items:[{name:t('packing.items.passport','Passport/ID'),essential:true},{name:t('packing.items.wallet','Wallet'),essential:true},{name:t('packing.items.phone','Phone'),essential:true},{name:t('packing.items.phoneCharger','Phone charger'),essential:true},{name:t('packing.items.travelInsurance','Travel insurance documents'),essential:true},{name:t('packing.items.cashCards','Cash/credit cards'),essential:true},{name:t('packing.items.houseKeys','House keys'),essential:true}]},{id:'clothing',name:t('packing.categories.clothing','Clothing'),icon:'👕',items:[{name:t('packing.items.underwear','Underwear'),essential:true,quantity:duration},{name:t('packing.items.socks','Socks'),essential:true,quantity:duration},{name:t('packing.items.tshirts','T-shirts'),essential:true,quantity:Math.ceil(duration/2)},{name:t('packing.items.pants','Pants/shorts'),essential:true,quantity:Math.ceil(duration/3)},{name:t('packing.items.sleepwear','Sleepwear'),essential:false},{name:t('packing.items.belt','Belt'),essential:false}]},{id:'toiletries',name:t('packing.categories.toiletries','Toiletries'),icon:'🧴',items:[{name:t('packing.items.toothbrush','Toothbrush'),essential:true},{name:t('packing.items.toothpaste','Toothpaste'),essential:true},{name:t('packing.items.deodorant','Deodorant'),essential:true},{name:t('packing.items.shampoo','Shampoo'),essential:false},{name:t('packing.items.soap','Soap/shower gel'),essential:false},{name:t('packing.items.razor','Razor'),essential:false},{name:t('packing.items.hairbrush','Hairbrush/comb'),essential:false}]},{id:'electronics',name:t('packing.categories.electronics','Electronics'),icon:'📱',items:[{name:t('packing.items.camera','Camera'),essential:false},{name:t('packing.items.headphones','Headphones'),essential:false},{name:t('packing.items.travelAdapter','Travel adapter'),essential:false},{name:t('packing.items.powerBank','Power bank'),essential:false}]},{id:'medications',name:t('packing.categories.medications','Medications'),icon:'💊',items:[{name:t('packing.items.personalMeds','Personal medications'),essential:true},{name:t('packing.items.painRelievers','Pain relievers'),essential:false},{name:t('packing.items.bandaids','Band-aids'),essential:false},{name:t('packing.items.antidiarrheals','Antidiarrheals'),essential:false},{name:t('packing.items.motionSickness','Motion sickness pills'),essential:false}]}];// Climate-specific items\nlet climateItems=[];if(weatherData){// Hot weather items\nif(weatherData.avgTemp>25){climateItems.push({category:'clothing',name:t('packing.items.sunglasses','Sunglasses'),essential:true},{category:'clothing',name:t('packing.items.hatCap','Hat or cap'),essential:true},{category:'clothing',name:t('packing.items.sandals','Sandals'),essential:false},{category:'clothing',name:t('packing.items.swimwear','Swimwear'),essential:false},{category:'toiletries',name:t('packing.items.sunscreen','Sunscreen'),essential:true},{category:'toiletries',name:t('packing.items.afterSun','After-sun lotion'),essential:false},{category:'accessories',name:t('packing.items.portableFan','Portable fan'),essential:false});}// Cold weather items\nif(weatherData.avgTemp<15){climateItems.push({category:'clothing',name:t('packing.items.winterCoat','Winter coat'),essential:true},{category:'clothing',name:t('packing.items.sweaters','Sweaters/jumpers'),essential:true},{category:'clothing',name:t('packing.items.thermalUnderwear','Thermal underwear'),essential:false},{category:'clothing',name:t('packing.items.gloves','Gloves'),essential:true},{category:'clothing',name:t('packing.items.scarf','Scarf'),essential:false},{category:'clothing',name:t('packing.items.winterHat','Winter hat'),essential:true},{category:'clothing',name:t('packing.items.warmSocks','Warm socks'),essential:true});}// Rainy weather items\nif(weatherData.rainfall==='high'||weatherData.conditions.includes('rain')){climateItems.push({category:'clothing',name:t('packing.items.rainJacket','Rain jacket'),essential:true},{category:'clothing',name:t('packing.items.waterproofShoes','Waterproof shoes'),essential:true},{category:'accessories',name:t('packing.items.umbrella','Umbrella'),essential:true},{category:'accessories',name:t('packing.items.waterproofBagCover','Waterproof bag cover'),essential:false});}// Humid weather\nif(weatherData.conditions==='humid'){climateItems.push({category:'clothing',name:t('packing.items.lightweightClothes','Lightweight clothes'),essential:true},{category:'toiletries',name:t('packing.items.antiHumidityHair','Anti-humidity hair product'),essential:false},{category:'toiletries',name:t('packing.items.mosquitoRepellent','Mosquito repellent'),essential:true});}}// Trip type specific items\nlet tripTypeItems=[];switch(tripType.toLowerCase()){case'business':tripTypeItems.push({category:'clothing',name:t('packing.items.businessSuits','Business suits'),essential:true},{category:'clothing',name:t('packing.items.formalShoes','Formal shoes'),essential:true},{category:'clothing',name:t('packing.items.tiesScarves','Ties/Scarves'),essential:false},{category:'electronics',name:t('packing.items.laptop','Laptop'),essential:true},{category:'electronics',name:t('packing.items.laptopCharger','Laptop charger'),essential:true},{category:'documents',name:t('packing.items.businessCards','Business cards'),essential:false},{category:'documents',name:t('packing.items.notebook','Notebook'),essential:false},{category:'documents',name:t('packing.items.presentationMaterials','Presentation materials'),essential:false});break;case'beach':tripTypeItems.push({category:'clothing',name:t('packing.items.swimwear','Swimwear'),essential:true},{category:'clothing',name:t('packing.items.beachCoverUp','Beach cover-up'),essential:false},{category:'clothing',name:t('packing.items.flipFlops','Flip-flops'),essential:true},{category:'accessories',name:t('packing.items.beachTowel','Beach towel'),essential:false},{category:'accessories',name:t('packing.items.beachBag','Beach bag'),essential:false},{category:'toiletries',name:t('packing.items.sunscreen','Sunscreen'),essential:true},{category:'toiletries',name:t('packing.items.afterSun','After-sun lotion'),essential:false});break;case'adventure':case'hiking':tripTypeItems.push({category:'clothing',name:t('packing.items.hikingBoots','Hiking boots'),essential:true},{category:'clothing',name:t('packing.items.moistureWickingShirts','Moisture-wicking shirts'),essential:true},{category:'clothing',name:t('packing.items.hikingPants','Hiking pants/shorts'),essential:true},{category:'accessories',name:t('packing.items.backpack','Backpack'),essential:true},{category:'accessories',name:t('packing.items.waterBottle','Water bottle'),essential:true},{category:'accessories',name:t('packing.items.flashlight','Flashlight/headlamp'),essential:true},{category:'accessories',name:t('packing.items.multiTool','Multi-tool'),essential:false},{category:'toiletries',name:t('packing.items.insectRepellent','Insect repellent'),essential:true},{category:'toiletries',name:t('packing.items.sunscreen','Sunscreen'),essential:true});break;case'winter':case'ski':tripTypeItems.push({category:'clothing',name:t('packing.items.skiJacket','Ski jacket'),essential:true},{category:'clothing',name:t('packing.items.skiPants','Ski pants'),essential:true},{category:'clothing',name:t('packing.items.thermalBaseLayers','Thermal base layers'),essential:true},{category:'clothing',name:t('packing.items.thickSocks','Thick socks'),essential:true},{category:'clothing',name:t('packing.items.gloves','Gloves'),essential:true},{category:'clothing',name:t('packing.items.winterHat','Winter hat'),essential:true},{category:'accessories',name:t('packing.items.skiGoggles','Ski goggles'),essential:true},{category:'toiletries',name:t('packing.items.lipBalm','Lip balm'),essential:true},{category:'toiletries',name:t('packing.items.moisturizer','Moisturizer'),essential:true});break;}// Destination-specific items\nlet destinationItems=[];// Parse destination to extract potential country/region\nconst destinationLower=destination.toLowerCase();// Beach or tropical destination\nif(destinationLower.includes('beach')||destinationLower.includes('hawaii')||destinationLower.includes('bali')||destinationLower.includes('caribbean')){destinationItems.push({category:'clothing',name:t('packing.items.swimwear','Swimwear'),essential:true},{category:'clothing',name:t('packing.items.sandals','Sandals'),essential:true},{category:'toiletries',name:t('packing.items.sunscreen','Sunscreen'),essential:true},{category:'accessories',name:t('packing.items.beachTowel','Beach towel'),essential:false});}// Urban/city trip\nif(destinationLower.includes('city')||destinationLower.includes('new york')||destinationLower.includes('paris')||destinationLower.includes('london')||destinationLower.includes('tokyo')){destinationItems.push({category:'clothing',name:t('packing.items.walkingShoes','Comfortable walking shoes'),essential:true},{category:'accessories',name:t('packing.items.dayBag','Day bag/backpack'),essential:true},{category:'electronics',name:t('packing.items.camera','Camera'),essential:false},{category:'documents',name:t('packing.items.cityMap','City map/guide'),essential:false});}// Merge all item recommendations and group by category\nconst allItems=[...climateItems,...tripTypeItems,...destinationItems];// Create a deep copy of baseRecommendations\nconst recommendations=JSON.parse(JSON.stringify(baseRecommendations));// Additional categories that might not be in base recommendations\nconst additionalCategories=[{id:'accessories',name:t('packing.categories.accessories','Accessories'),icon:'👓'},{id:'documents',name:t('packing.categories.documents','Documents'),icon:'📄'},{id:'misc',name:t('packing.categories.miscellaneous','Miscellaneous'),icon:'🔮'}];// Add any missing categories to recommendations\nadditionalCategories.forEach(category=>{if(!recommendations.some(rec=>rec.id===category.id)){recommendations.push({id:category.id,name:category.name,icon:category.icon,items:[]});}});// Add all specific items to appropriate categories\nallItems.forEach(item=>{const category=recommendations.find(cat=>cat.id===item.category);if(category){// Check if item already exists in the category\nif(!category.items.some(existingItem=>existingItem.name===item.name)){category.items.push({name:item.name,essential:item.essential});}}});// Sort by essential first within each category\nrecommendations.forEach(category=>{category.items.sort((a,b)=>{if(a.essential&&!b.essential)return-1;if(!a.essential&&b.essential)return 1;return a.name.localeCompare(b.name);});});return recommendations;}/**\r\n * Calculate the optimal number of clothing items based on trip duration\r\n * \r\n * @param {number} duration - Trip duration in days\r\n * @returns {Object} Recommended quantities for different clothing items\r\n */export function calculateClothingQuantities(duration){return{underwear:duration,socks:duration,shirts:Math.ceil(duration/2),pants:Math.ceil(duration/3),dressShirts:Math.ceil(duration/2),// For business trips\nformalOutfits:Math.ceil(duration/3)// For business trips\n};}/**\r\n * Check if a destination is likely to be international\r\n * (simplified implementation - would be more comprehensive in a real app)\r\n *\r\n * @param {string} destination - The trip destination\r\n * @returns {boolean} Whether the destination is likely international\r\n */export function isInternationalDestination(destination){// List of countries (partial)\nconst countries=['france','italy','spain','germany','japan','china','australia','canada','mexico','brazil','argentina','thailand','vietnam','indonesia','india','russia','south africa','egypt','morocco','united kingdom','ireland','greece','portugal','netherlands'];// Check if any country name appears in the destination\nconst destinationLower=destination.toLowerCase();return countries.some(country=>destinationLower.includes(country));}/**\r\n * Generate document recommendations based on destination\r\n * \r\n * @param {string} destination - The trip destination\r\n * @param {Function} t - Translation function from i18n\r\n * @returns {Array} Recommended documents\r\n */export function getDocumentRecommendations(destination){let t=arguments.length>1&&arguments[1]!==undefined?arguments[1]:key=>key;const isInternational=isInternationalDestination(destination);const baseDocuments=[{name:t('packing.documents.id','ID/Driver\\'s License'),essential:true},{name:t('packing.documents.cards','Credit/Debit Cards'),essential:true},{name:t('packing.documents.insurance','Travel Insurance Info'),essential:true},{name:t('packing.documents.emergency','Emergency Contact List'),essential:true},{name:t('packing.documents.hotel','Hotel Reservation'),essential:true},{name:t('packing.documents.transportation','Transportation Tickets'),essential:true}];if(isInternational){return[...baseDocuments,{name:t('packing.documents.passport','Passport'),essential:true},{name:t('packing.documents.visa','Visa Documentation'),essential:true},{name:t('packing.documents.driverPermit','International Driver\\'s Permit'),essential:false},{name:t('packing.documents.vaccination','Vaccination Records'),essential:false},{name:t('packing.documents.currency','Currency Exchange Info'),essential:false},{name:t('packing.documents.embassy','Embassy Contact Info'),essential:false},{name:t('packing.documents.adapter','Travel Adapter Info'),essential:false}];}return baseDocuments;}","map":{"version":3,"names":["getPackingRecommendations","destination","duration","weatherData","tripType","arguments","length","undefined","t","key","baseRecommendations","id","name","icon","items","essential","quantity","Math","ceil","climateItems","avgTemp","push","category","rainfall","conditions","includes","tripTypeItems","toLowerCase","destinationItems","destinationLower","allItems","recommendations","JSON","parse","stringify","additionalCategories","forEach","some","rec","item","find","cat","existingItem","sort","a","b","localeCompare","calculateClothingQuantities","underwear","socks","shirts","pants","dressShirts","formalOutfits","isInternationalDestination","countries","country","getDocumentRecommendations","isInternational","baseDocuments"],"sources":["C:/Users/juliu/Desktop/web/src/utils/packingUtils.js"],"sourcesContent":["// src/utils/packingUtils.js\r\n\r\n/**\r\n * Utility functions for packing list recommendations and management\r\n */\r\n\r\n/**\r\n * Generate packing recommendations based on destination, trip duration, and weather\r\n * \r\n * @param {string} destination - The trip destination\r\n * @param {number} duration - Trip duration in days\r\n * @param {Object} weatherData - Weather forecast data\r\n * @param {string} tripType - Type of trip (leisure, business, adventure, etc.)\r\n * @param {Function} t - Translation function from i18n\r\n * @returns {Array} Array of packing categories with recommended items\r\n */\r\nexport function getPackingRecommendations(destination, duration, weatherData, tripType = 'leisure', t = key => key) {\r\n  // Base items everyone needs regardless of destination\r\n  const baseRecommendations = [\r\n    {\r\n      id: 'essentials',\r\n      name: t('packing.categories.essentials', 'Essentials'),\r\n      icon: '⭐',\r\n      items: [\r\n        { name: t('packing.items.passport', 'Passport/ID'), essential: true },\r\n        { name: t('packing.items.wallet', 'Wallet'), essential: true },\r\n        { name: t('packing.items.phone', 'Phone'), essential: true },\r\n        { name: t('packing.items.phoneCharger', 'Phone charger'), essential: true },\r\n        { name: t('packing.items.travelInsurance', 'Travel insurance documents'), essential: true },\r\n        { name: t('packing.items.cashCards', 'Cash/credit cards'), essential: true },\r\n        { name: t('packing.items.houseKeys', 'House keys'), essential: true },\r\n      ]\r\n    },\r\n    {\r\n      id: 'clothing',\r\n      name: t('packing.categories.clothing', 'Clothing'),\r\n      icon: '👕',\r\n      items: [\r\n        { name: t('packing.items.underwear', 'Underwear'), essential: true, quantity: duration },\r\n        { name: t('packing.items.socks', 'Socks'), essential: true, quantity: duration },\r\n        { name: t('packing.items.tshirts', 'T-shirts'), essential: true, quantity: Math.ceil(duration / 2) },\r\n        { name: t('packing.items.pants', 'Pants/shorts'), essential: true, quantity: Math.ceil(duration / 3) },\r\n        { name: t('packing.items.sleepwear', 'Sleepwear'), essential: false },\r\n        { name: t('packing.items.belt', 'Belt'), essential: false },\r\n      ]\r\n    },\r\n    {\r\n      id: 'toiletries',\r\n      name: t('packing.categories.toiletries', 'Toiletries'),\r\n      icon: '🧴',\r\n      items: [\r\n        { name: t('packing.items.toothbrush', 'Toothbrush'), essential: true },\r\n        { name: t('packing.items.toothpaste', 'Toothpaste'), essential: true },\r\n        { name: t('packing.items.deodorant', 'Deodorant'), essential: true },\r\n        { name: t('packing.items.shampoo', 'Shampoo'), essential: false },\r\n        { name: t('packing.items.soap', 'Soap/shower gel'), essential: false },\r\n        { name: t('packing.items.razor', 'Razor'), essential: false },\r\n        { name: t('packing.items.hairbrush', 'Hairbrush/comb'), essential: false },\r\n      ]\r\n    },\r\n    {\r\n      id: 'electronics',\r\n      name: t('packing.categories.electronics', 'Electronics'),\r\n      icon: '📱',\r\n      items: [\r\n        { name: t('packing.items.camera', 'Camera'), essential: false },\r\n        { name: t('packing.items.headphones', 'Headphones'), essential: false },\r\n        { name: t('packing.items.travelAdapter', 'Travel adapter'), essential: false },\r\n        { name: t('packing.items.powerBank', 'Power bank'), essential: false },\r\n      ]\r\n    },\r\n    {\r\n      id: 'medications',\r\n      name: t('packing.categories.medications', 'Medications'),\r\n      icon: '💊',\r\n      items: [\r\n        { name: t('packing.items.personalMeds', 'Personal medications'), essential: true },\r\n        { name: t('packing.items.painRelievers', 'Pain relievers'), essential: false },\r\n        { name: t('packing.items.bandaids', 'Band-aids'), essential: false },\r\n        { name: t('packing.items.antidiarrheals', 'Antidiarrheals'), essential: false },\r\n        { name: t('packing.items.motionSickness', 'Motion sickness pills'), essential: false },\r\n      ]\r\n    }\r\n  ];\r\n  \r\n  // Climate-specific items\r\n  let climateItems = [];\r\n  \r\n  if (weatherData) {\r\n    // Hot weather items\r\n    if (weatherData.avgTemp > 25) {\r\n      climateItems.push(\r\n        { category: 'clothing', name: t('packing.items.sunglasses', 'Sunglasses'), essential: true },\r\n        { category: 'clothing', name: t('packing.items.hatCap', 'Hat or cap'), essential: true },\r\n        { category: 'clothing', name: t('packing.items.sandals', 'Sandals'), essential: false },\r\n        { category: 'clothing', name: t('packing.items.swimwear', 'Swimwear'), essential: false },\r\n        { category: 'toiletries', name: t('packing.items.sunscreen', 'Sunscreen'), essential: true },\r\n        { category: 'toiletries', name: t('packing.items.afterSun', 'After-sun lotion'), essential: false },\r\n        { category: 'accessories', name: t('packing.items.portableFan', 'Portable fan'), essential: false }\r\n      );\r\n    }\r\n    \r\n    // Cold weather items\r\n    if (weatherData.avgTemp < 15) {\r\n      climateItems.push(\r\n        { category: 'clothing', name: t('packing.items.winterCoat', 'Winter coat'), essential: true },\r\n        { category: 'clothing', name: t('packing.items.sweaters', 'Sweaters/jumpers'), essential: true },\r\n        { category: 'clothing', name: t('packing.items.thermalUnderwear', 'Thermal underwear'), essential: false },\r\n        { category: 'clothing', name: t('packing.items.gloves', 'Gloves'), essential: true },\r\n        { category: 'clothing', name: t('packing.items.scarf', 'Scarf'), essential: false },\r\n        { category: 'clothing', name: t('packing.items.winterHat', 'Winter hat'), essential: true },\r\n        { category: 'clothing', name: t('packing.items.warmSocks', 'Warm socks'), essential: true }\r\n      );\r\n    }\r\n    \r\n    // Rainy weather items\r\n    if (weatherData.rainfall === 'high' || weatherData.conditions.includes('rain')) {\r\n      climateItems.push(\r\n        { category: 'clothing', name: t('packing.items.rainJacket', 'Rain jacket'), essential: true },\r\n        { category: 'clothing', name: t('packing.items.waterproofShoes', 'Waterproof shoes'), essential: true },\r\n        { category: 'accessories', name: t('packing.items.umbrella', 'Umbrella'), essential: true },\r\n        { category: 'accessories', name: t('packing.items.waterproofBagCover', 'Waterproof bag cover'), essential: false }\r\n      );\r\n    }\r\n    \r\n    // Humid weather\r\n    if (weatherData.conditions === 'humid') {\r\n      climateItems.push(\r\n        { category: 'clothing', name: t('packing.items.lightweightClothes', 'Lightweight clothes'), essential: true },\r\n        { category: 'toiletries', name: t('packing.items.antiHumidityHair', 'Anti-humidity hair product'), essential: false },\r\n        { category: 'toiletries', name: t('packing.items.mosquitoRepellent', 'Mosquito repellent'), essential: true }\r\n      );\r\n    }\r\n  }\r\n  \r\n  // Trip type specific items\r\n  let tripTypeItems = [];\r\n  \r\n  switch (tripType.toLowerCase()) {\r\n    case 'business':\r\n      tripTypeItems.push(\r\n        { category: 'clothing', name: t('packing.items.businessSuits', 'Business suits'), essential: true },\r\n        { category: 'clothing', name: t('packing.items.formalShoes', 'Formal shoes'), essential: true },\r\n        { category: 'clothing', name: t('packing.items.tiesScarves', 'Ties/Scarves'), essential: false },\r\n        { category: 'electronics', name: t('packing.items.laptop', 'Laptop'), essential: true },\r\n        { category: 'electronics', name: t('packing.items.laptopCharger', 'Laptop charger'), essential: true },\r\n        { category: 'documents', name: t('packing.items.businessCards', 'Business cards'), essential: false },\r\n        { category: 'documents', name: t('packing.items.notebook', 'Notebook'), essential: false },\r\n        { category: 'documents', name: t('packing.items.presentationMaterials', 'Presentation materials'), essential: false }\r\n      );\r\n      break;\r\n      \r\n    case 'beach':\r\n      tripTypeItems.push(\r\n        { category: 'clothing', name: t('packing.items.swimwear', 'Swimwear'), essential: true },\r\n        { category: 'clothing', name: t('packing.items.beachCoverUp', 'Beach cover-up'), essential: false },\r\n        { category: 'clothing', name: t('packing.items.flipFlops', 'Flip-flops'), essential: true },\r\n        { category: 'accessories', name: t('packing.items.beachTowel', 'Beach towel'), essential: false },\r\n        { category: 'accessories', name: t('packing.items.beachBag', 'Beach bag'), essential: false },\r\n        { category: 'toiletries', name: t('packing.items.sunscreen', 'Sunscreen'), essential: true },\r\n        { category: 'toiletries', name: t('packing.items.afterSun', 'After-sun lotion'), essential: false }\r\n      );\r\n      break;\r\n      \r\n    case 'adventure':\r\n    case 'hiking':\r\n      tripTypeItems.push(\r\n        { category: 'clothing', name: t('packing.items.hikingBoots', 'Hiking boots'), essential: true },\r\n        { category: 'clothing', name: t('packing.items.moistureWickingShirts', 'Moisture-wicking shirts'), essential: true },\r\n        { category: 'clothing', name: t('packing.items.hikingPants', 'Hiking pants/shorts'), essential: true },\r\n        { category: 'accessories', name: t('packing.items.backpack', 'Backpack'), essential: true },\r\n        { category: 'accessories', name: t('packing.items.waterBottle', 'Water bottle'), essential: true },\r\n        { category: 'accessories', name: t('packing.items.flashlight', 'Flashlight/headlamp'), essential: true },\r\n        { category: 'accessories', name: t('packing.items.multiTool', 'Multi-tool'), essential: false },\r\n        { category: 'toiletries', name: t('packing.items.insectRepellent', 'Insect repellent'), essential: true },\r\n        { category: 'toiletries', name: t('packing.items.sunscreen', 'Sunscreen'), essential: true }\r\n      );\r\n      break;\r\n      \r\n    case 'winter':\r\n    case 'ski':\r\n      tripTypeItems.push(\r\n        { category: 'clothing', name: t('packing.items.skiJacket', 'Ski jacket'), essential: true },\r\n        { category: 'clothing', name: t('packing.items.skiPants', 'Ski pants'), essential: true },\r\n        { category: 'clothing', name: t('packing.items.thermalBaseLayers', 'Thermal base layers'), essential: true },\r\n        { category: 'clothing', name: t('packing.items.thickSocks', 'Thick socks'), essential: true },\r\n        { category: 'clothing', name: t('packing.items.gloves', 'Gloves'), essential: true },\r\n        { category: 'clothing', name: t('packing.items.winterHat', 'Winter hat'), essential: true },\r\n        { category: 'accessories', name: t('packing.items.skiGoggles', 'Ski goggles'), essential: true },\r\n        { category: 'toiletries', name: t('packing.items.lipBalm', 'Lip balm'), essential: true },\r\n        { category: 'toiletries', name: t('packing.items.moisturizer', 'Moisturizer'), essential: true }\r\n      );\r\n      break;\r\n  }\r\n  \r\n  // Destination-specific items\r\n  let destinationItems = [];\r\n  \r\n  // Parse destination to extract potential country/region\r\n  const destinationLower = destination.toLowerCase();\r\n  \r\n  // Beach or tropical destination\r\n  if (destinationLower.includes('beach') || \r\n      destinationLower.includes('hawaii') ||\r\n      destinationLower.includes('bali') ||\r\n      destinationLower.includes('caribbean')) {\r\n    destinationItems.push(\r\n      { category: 'clothing', name: t('packing.items.swimwear', 'Swimwear'), essential: true },\r\n      { category: 'clothing', name: t('packing.items.sandals', 'Sandals'), essential: true },\r\n      { category: 'toiletries', name: t('packing.items.sunscreen', 'Sunscreen'), essential: true },\r\n      { category: 'accessories', name: t('packing.items.beachTowel', 'Beach towel'), essential: false }\r\n    );\r\n  }\r\n  \r\n  // Urban/city trip\r\n  if (destinationLower.includes('city') ||\r\n      destinationLower.includes('new york') ||\r\n      destinationLower.includes('paris') ||\r\n      destinationLower.includes('london') ||\r\n      destinationLower.includes('tokyo')) {\r\n    destinationItems.push(\r\n      { category: 'clothing', name: t('packing.items.walkingShoes', 'Comfortable walking shoes'), essential: true },\r\n      { category: 'accessories', name: t('packing.items.dayBag', 'Day bag/backpack'), essential: true },\r\n      { category: 'electronics', name: t('packing.items.camera', 'Camera'), essential: false },\r\n      { category: 'documents', name: t('packing.items.cityMap', 'City map/guide'), essential: false }\r\n    );\r\n  }\r\n  \r\n  // Merge all item recommendations and group by category\r\n  const allItems = [\r\n    ...climateItems,\r\n    ...tripTypeItems,\r\n    ...destinationItems\r\n  ];\r\n  \r\n  // Create a deep copy of baseRecommendations\r\n  const recommendations = JSON.parse(JSON.stringify(baseRecommendations));\r\n  \r\n  // Additional categories that might not be in base recommendations\r\n  const additionalCategories = [\r\n    { id: 'accessories', name: t('packing.categories.accessories', 'Accessories'), icon: '👓' },\r\n    { id: 'documents', name: t('packing.categories.documents', 'Documents'), icon: '📄' },\r\n    { id: 'misc', name: t('packing.categories.miscellaneous', 'Miscellaneous'), icon: '🔮' }\r\n  ];\r\n  \r\n  // Add any missing categories to recommendations\r\n  additionalCategories.forEach(category => {\r\n    if (!recommendations.some(rec => rec.id === category.id)) {\r\n      recommendations.push({\r\n        id: category.id,\r\n        name: category.name,\r\n        icon: category.icon,\r\n        items: []\r\n      });\r\n    }\r\n  });\r\n  \r\n  // Add all specific items to appropriate categories\r\n  allItems.forEach(item => {\r\n    const category = recommendations.find(cat => cat.id === item.category);\r\n    if (category) {\r\n      // Check if item already exists in the category\r\n      if (!category.items.some(existingItem => existingItem.name === item.name)) {\r\n        category.items.push({\r\n          name: item.name,\r\n          essential: item.essential\r\n        });\r\n      }\r\n    }\r\n  });\r\n  \r\n  // Sort by essential first within each category\r\n  recommendations.forEach(category => {\r\n    category.items.sort((a, b) => {\r\n      if (a.essential && !b.essential) return -1;\r\n      if (!a.essential && b.essential) return 1;\r\n      return a.name.localeCompare(b.name);\r\n    });\r\n  });\r\n  \r\n  return recommendations;\r\n}\r\n\r\n/**\r\n * Calculate the optimal number of clothing items based on trip duration\r\n * \r\n * @param {number} duration - Trip duration in days\r\n * @returns {Object} Recommended quantities for different clothing items\r\n */\r\nexport function calculateClothingQuantities(duration) {\r\n  return {\r\n    underwear: duration,\r\n    socks: duration,\r\n    shirts: Math.ceil(duration / 2),\r\n    pants: Math.ceil(duration / 3),\r\n    dressShirts: Math.ceil(duration / 2), // For business trips\r\n    formalOutfits: Math.ceil(duration / 3)  // For business trips\r\n  };\r\n}\r\n\r\n/**\r\n * Check if a destination is likely to be international\r\n * (simplified implementation - would be more comprehensive in a real app)\r\n *\r\n * @param {string} destination - The trip destination\r\n * @returns {boolean} Whether the destination is likely international\r\n */\r\nexport function isInternationalDestination(destination) {\r\n  // List of countries (partial)\r\n  const countries = [\r\n    'france', 'italy', 'spain', 'germany', 'japan', 'china', 'australia',\r\n    'canada', 'mexico', 'brazil', 'argentina', 'thailand', 'vietnam',\r\n    'indonesia', 'india', 'russia', 'south africa', 'egypt', 'morocco',\r\n    'united kingdom', 'ireland', 'greece', 'portugal', 'netherlands'\r\n  ];\r\n  \r\n  // Check if any country name appears in the destination\r\n  const destinationLower = destination.toLowerCase();\r\n  return countries.some(country => destinationLower.includes(country));\r\n}\r\n\r\n/**\r\n * Generate document recommendations based on destination\r\n * \r\n * @param {string} destination - The trip destination\r\n * @param {Function} t - Translation function from i18n\r\n * @returns {Array} Recommended documents\r\n */\r\nexport function getDocumentRecommendations(destination, t = key => key) {\r\n  const isInternational = isInternationalDestination(destination);\r\n  \r\n  const baseDocuments = [\r\n    { name: t('packing.documents.id', 'ID/Driver\\'s License'), essential: true },\r\n    { name: t('packing.documents.cards', 'Credit/Debit Cards'), essential: true },\r\n    { name: t('packing.documents.insurance', 'Travel Insurance Info'), essential: true },\r\n    { name: t('packing.documents.emergency', 'Emergency Contact List'), essential: true },\r\n    { name: t('packing.documents.hotel', 'Hotel Reservation'), essential: true },\r\n    { name: t('packing.documents.transportation', 'Transportation Tickets'), essential: true },\r\n  ];\r\n  \r\n  if (isInternational) {\r\n    return [\r\n      ...baseDocuments,\r\n      { name: t('packing.documents.passport', 'Passport'), essential: true },\r\n      { name: t('packing.documents.visa', 'Visa Documentation'), essential: true },\r\n      { name: t('packing.documents.driverPermit', 'International Driver\\'s Permit'), essential: false },\r\n      { name: t('packing.documents.vaccination', 'Vaccination Records'), essential: false },\r\n      { name: t('packing.documents.currency', 'Currency Exchange Info'), essential: false },\r\n      { name: t('packing.documents.embassy', 'Embassy Contact Info'), essential: false },\r\n      { name: t('packing.documents.adapter', 'Travel Adapter Info'), essential: false },\r\n    ];\r\n  }\r\n  \r\n  return baseDocuments;\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}