{"ast":null,"code":"// src/services/ApiClient.js\n// Simple API client using axios\n// npm install axios\n\nimport axios from 'axios';\nimport { captureError } from '../utils/errorMonitoring';\n\n// Base configuration\nconst ApiClient = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8080',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor\nApiClient.interceptors.request.use(config => {\n  // Add device ID to all requests\n  const deviceId = localStorage.getItem('deviceId');\n  if (deviceId) {\n    config.headers['X-Device-ID'] = deviceId;\n  }\n  return config;\n}, error => {\n  captureError(error, {\n    context: 'API request interceptor'\n  });\n  return Promise.reject(error);\n});\n\n// Response interceptor\nApiClient.interceptors.response.use(response => {\n  return response;\n}, error => {\n  // Handle common errors\n  if (error.response) {\n    // Server responded with an error status\n    switch (error.response.status) {\n      case 401:\n        // Unauthorized\n        console.error('Unauthorized API request:', error.config.url);\n        break;\n      case 403:\n        // Forbidden\n        console.error('Forbidden API request:', error.config.url);\n        break;\n      case 404:\n        // Not found\n        console.error('Resource not found:', error.config.url);\n        break;\n      case 429:\n        // Too many requests\n        console.error('Rate limit exceeded for:', error.config.url);\n        break;\n      case 500:\n        // Server error\n        console.error('Server error:', error.config.url);\n        break;\n      default:\n        console.error(`API error (${error.response.status}):`, error.config.url);\n    }\n\n    // Capture detailed error for monitoring\n    captureError(error, {\n      context: 'API response interceptor',\n      url: error.config.url,\n      status: error.response.status\n    });\n  } else if (error.request) {\n    // Request was made but no response received\n    console.error('No response received for request:', error.config.url);\n    captureError(error, {\n      context: 'API no response',\n      url: error.config.url\n    });\n  } else {\n    // Error setting up the request\n    console.error('Error setting up request:', error.message);\n    captureError(error, {\n      context: 'API request setup',\n      message: error.message\n    });\n  }\n  return Promise.reject(error);\n});\nexport default ApiClient;","map":{"version":3,"names":["axios","captureError","ApiClient","create","baseURL","process","env","REACT_APP_API_URL","timeout","headers","interceptors","request","use","config","deviceId","localStorage","getItem","error","context","Promise","reject","response","status","console","url","message"],"sources":["C:/Users/juliu/Desktop/web/src/services/ApiClient.js"],"sourcesContent":["// src/services/ApiClient.js\r\n// Simple API client using axios\r\n// npm install axios\r\n\r\nimport axios from 'axios';\r\nimport { captureError } from '../utils/errorMonitoring';\r\n\r\n// Base configuration\r\nconst ApiClient = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8080',\r\n  timeout: 10000,\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\n// Request interceptor\r\nApiClient.interceptors.request.use(\r\n  (config) => {\r\n    // Add device ID to all requests\r\n    const deviceId = localStorage.getItem('deviceId');\r\n    if (deviceId) {\r\n      config.headers['X-Device-ID'] = deviceId;\r\n    }\r\n    \r\n    return config;\r\n  },\r\n  (error) => {\r\n    captureError(error, { context: 'API request interceptor' });\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor\r\nApiClient.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    // Handle common errors\r\n    if (error.response) {\r\n      // Server responded with an error status\r\n      switch (error.response.status) {\r\n        case 401:\r\n          // Unauthorized\r\n          console.error('Unauthorized API request:', error.config.url);\r\n          break;\r\n          \r\n        case 403:\r\n          // Forbidden\r\n          console.error('Forbidden API request:', error.config.url);\r\n          break;\r\n          \r\n        case 404:\r\n          // Not found\r\n          console.error('Resource not found:', error.config.url);\r\n          break;\r\n          \r\n        case 429:\r\n          // Too many requests\r\n          console.error('Rate limit exceeded for:', error.config.url);\r\n          break;\r\n          \r\n        case 500:\r\n          // Server error\r\n          console.error('Server error:', error.config.url);\r\n          break;\r\n          \r\n        default:\r\n          console.error(`API error (${error.response.status}):`, error.config.url);\r\n      }\r\n      \r\n      // Capture detailed error for monitoring\r\n      captureError(error, { \r\n        context: 'API response interceptor',\r\n        url: error.config.url,\r\n        status: error.response.status\r\n      });\r\n    } else if (error.request) {\r\n      // Request was made but no response received\r\n      console.error('No response received for request:', error.config.url);\r\n      captureError(error, { \r\n        context: 'API no response',\r\n        url: error.config.url\r\n      });\r\n    } else {\r\n      // Error setting up the request\r\n      console.error('Error setting up request:', error.message);\r\n      captureError(error, { \r\n        context: 'API request setup',\r\n        message: error.message\r\n      });\r\n    }\r\n    \r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default ApiClient;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}