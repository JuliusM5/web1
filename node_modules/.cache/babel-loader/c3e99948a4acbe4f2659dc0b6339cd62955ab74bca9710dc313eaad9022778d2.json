{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/utils/packingUtils.js\nimport { useI18n } from './i18n';\n\n/**\r\n * Utility functions for packing list recommendations and management\r\n */\n\n/**\r\n * Generate packing recommendations based on destination, trip duration, and weather\r\n * \r\n * @param {string} destination - The trip destination\r\n * @param {number} duration - Trip duration in days\r\n * @param {Object} weatherData - Weather forecast data\r\n * @param {string} tripType - Type of trip (leisure, business, adventure, etc.)\r\n * @param {Function} t - Translation function from i18n\r\n * @returns {Array} Array of packing categories with recommended items\r\n */\nexport function getPackingRecommendations(destination, duration, weatherData, tripType = 'leisure', t) {\n  _s();\n  // If t is not provided, handle gracefully\n  if (!t) {\n    // Try to use the i18n hook if called from a component context\n    try {\n      const {\n        t: translate\n      } = useI18n();\n      t = translate;\n    } catch (e) {\n      // Fallback to a function that returns the key itself\n      t = key => key;\n    }\n  }\n\n  // Base items everyone needs regardless of destination\n  const baseRecommendations = [{\n    id: 'essentials',\n    name: t('packing.categories.essentials', 'Essentials'),\n    icon: '⭐',\n    items: [{\n      name: t('packing.items.passport', 'Passport/ID'),\n      essential: true\n    }, {\n      name: t('packing.items.wallet', 'Wallet'),\n      essential: true\n    }, {\n      name: t('packing.items.phone', 'Phone'),\n      essential: true\n    }, {\n      name: t('packing.items.phoneCharger', 'Phone charger'),\n      essential: true\n    }, {\n      name: t('packing.items.travelInsurance', 'Travel insurance documents'),\n      essential: true\n    }, {\n      name: t('packing.items.cashCards', 'Cash/credit cards'),\n      essential: true\n    }, {\n      name: t('packing.items.houseKeys', 'House keys'),\n      essential: true\n    }]\n  }, {\n    id: 'clothing',\n    name: t('packing.categories.clothing', 'Clothing'),\n    icon: '👕',\n    items: [{\n      name: t('packing.items.underwear', 'Underwear'),\n      essential: true,\n      quantity: duration\n    }, {\n      name: t('packing.items.socks', 'Socks'),\n      essential: true,\n      quantity: duration\n    }, {\n      name: t('packing.items.tshirts', 'T-shirts'),\n      essential: true,\n      quantity: Math.ceil(duration / 2)\n    }, {\n      name: t('packing.items.pants', 'Pants/shorts'),\n      essential: true,\n      quantity: Math.ceil(duration / 3)\n    }, {\n      name: t('packing.items.sleepwear', 'Sleepwear'),\n      essential: false\n    }, {\n      name: t('packing.items.belt', 'Belt'),\n      essential: false\n    }]\n  }, {\n    id: 'toiletries',\n    name: t('packing.categories.toiletries', 'Toiletries'),\n    icon: '🧴',\n    items: [{\n      name: t('packing.items.toothbrush', 'Toothbrush'),\n      essential: true\n    }, {\n      name: t('packing.items.toothpaste', 'Toothpaste'),\n      essential: true\n    }, {\n      name: t('packing.items.deodorant', 'Deodorant'),\n      essential: true\n    }, {\n      name: t('packing.items.shampoo', 'Shampoo'),\n      essential: false\n    }, {\n      name: t('packing.items.soap', 'Soap/shower gel'),\n      essential: false\n    }, {\n      name: t('packing.items.razor', 'Razor'),\n      essential: false\n    }, {\n      name: t('packing.items.hairbrush', 'Hairbrush/comb'),\n      essential: false\n    }]\n  }, {\n    id: 'electronics',\n    name: t('packing.categories.electronics', 'Electronics'),\n    icon: '📱',\n    items: [{\n      name: t('packing.items.camera', 'Camera'),\n      essential: false\n    }, {\n      name: t('packing.items.headphones', 'Headphones'),\n      essential: false\n    }, {\n      name: t('packing.items.travelAdapter', 'Travel adapter'),\n      essential: false\n    }, {\n      name: t('packing.items.powerBank', 'Power bank'),\n      essential: false\n    }]\n  }, {\n    id: 'medications',\n    name: t('packing.categories.medications', 'Medications'),\n    icon: '💊',\n    items: [{\n      name: t('packing.items.personalMeds', 'Personal medications'),\n      essential: true\n    }, {\n      name: t('packing.items.painRelievers', 'Pain relievers'),\n      essential: false\n    }, {\n      name: t('packing.items.bandaids', 'Band-aids'),\n      essential: false\n    }, {\n      name: t('packing.items.antidiarrheals', 'Antidiarrheals'),\n      essential: false\n    }, {\n      name: t('packing.items.motionSickness', 'Motion sickness pills'),\n      essential: false\n    }]\n  }];\n\n  // Climate-specific items\n  let climateItems = [];\n  if (weatherData) {\n    // Hot weather items\n    if (weatherData.avgTemp > 25) {\n      climateItems.push({\n        category: 'clothing',\n        name: t('packing.items.sunglasses', 'Sunglasses'),\n        essential: true\n      }, {\n        category: 'clothing',\n        name: t('packing.items.hatCap', 'Hat or cap'),\n        essential: true\n      }, {\n        category: 'clothing',\n        name: t('packing.items.sandals', 'Sandals'),\n        essential: false\n      }, {\n        category: 'clothing',\n        name: t('packing.items.swimwear', 'Swimwear'),\n        essential: false\n      }, {\n        category: 'toiletries',\n        name: t('packing.items.sunscreen', 'Sunscreen'),\n        essential: true\n      }, {\n        category: 'toiletries',\n        name: t('packing.items.afterSun', 'After-sun lotion'),\n        essential: false\n      }, {\n        category: 'accessories',\n        name: t('packing.items.portableFan', 'Portable fan'),\n        essential: false\n      });\n    }\n\n    // Cold weather items\n    if (weatherData.avgTemp < 15) {\n      climateItems.push({\n        category: 'clothing',\n        name: t('packing.items.winterCoat', 'Winter coat'),\n        essential: true\n      }, {\n        category: 'clothing',\n        name: t('packing.items.sweaters', 'Sweaters/jumpers'),\n        essential: true\n      }, {\n        category: 'clothing',\n        name: t('packing.items.thermalUnderwear', 'Thermal underwear'),\n        essential: false\n      }, {\n        category: 'clothing',\n        name: t('packing.items.gloves', 'Gloves'),\n        essential: true\n      }, {\n        category: 'clothing',\n        name: t('packing.items.scarf', 'Scarf'),\n        essential: false\n      }, {\n        category: 'clothing',\n        name: t('packing.items.winterHat', 'Winter hat'),\n        essential: true\n      }, {\n        category: 'clothing',\n        name: t('packing.items.warmSocks', 'Warm socks'),\n        essential: true\n      });\n    }\n\n    // Rainy weather items\n    if (weatherData.rainfall === 'high' || weatherData.conditions.includes('rain')) {\n      climateItems.push({\n        category: 'clothing',\n        name: t('packing.items.rainJacket', 'Rain jacket'),\n        essential: true\n      }, {\n        category: 'clothing',\n        name: t('packing.items.waterproofShoes', 'Waterproof shoes'),\n        essential: true\n      }, {\n        category: 'accessories',\n        name: t('packing.items.umbrella', 'Umbrella'),\n        essential: true\n      }, {\n        category: 'accessories',\n        name: t('packing.items.waterproofBagCover', 'Waterproof bag cover'),\n        essential: false\n      });\n    }\n\n    // Humid weather\n    if (weatherData.conditions === 'humid') {\n      climateItems.push({\n        category: 'clothing',\n        name: t('packing.items.lightweightClothes', 'Lightweight clothes'),\n        essential: true\n      }, {\n        category: 'toiletries',\n        name: t('packing.items.antiHumidityHair', 'Anti-humidity hair product'),\n        essential: false\n      }, {\n        category: 'toiletries',\n        name: t('packing.items.mosquitoRepellent', 'Mosquito repellent'),\n        essential: true\n      });\n    }\n  }\n\n  // Trip type specific items\n  let tripTypeItems = [];\n  switch (tripType.toLowerCase()) {\n    case 'business':\n      tripTypeItems.push({\n        category: 'clothing',\n        name: t('packing.items.businessSuits', 'Business suits'),\n        essential: true\n      }, {\n        category: 'clothing',\n        name: t('packing.items.formalShoes', 'Formal shoes'),\n        essential: true\n      }, {\n        category: 'clothing',\n        name: t('packing.items.tiesScarves', 'Ties/Scarves'),\n        essential: false\n      }, {\n        category: 'electronics',\n        name: t('packing.items.laptop', 'Laptop'),\n        essential: true\n      }, {\n        category: 'electronics',\n        name: t('packing.items.laptopCharger', 'Laptop charger'),\n        essential: true\n      }, {\n        category: 'documents',\n        name: t('packing.items.businessCards', 'Business cards'),\n        essential: false\n      }, {\n        category: 'documents',\n        name: t('packing.items.notebook', 'Notebook'),\n        essential: false\n      }, {\n        category: 'documents',\n        name: t('packing.items.presentationMaterials', 'Presentation materials'),\n        essential: false\n      });\n      break;\n    case 'beach':\n      tripTypeItems.push({\n        category: 'clothing',\n        name: t('packing.items.swimwear', 'Swimwear'),\n        essential: true\n      }, {\n        category: 'clothing',\n        name: t('packing.items.beachCoverUp', 'Beach cover-up'),\n        essential: false\n      }, {\n        category: 'clothing',\n        name: t('packing.items.flipFlops', 'Flip-flops'),\n        essential: true\n      }, {\n        category: 'accessories',\n        name: t('packing.items.beachTowel', 'Beach towel'),\n        essential: false\n      }, {\n        category: 'accessories',\n        name: t('packing.items.beachBag', 'Beach bag'),\n        essential: false\n      }, {\n        category: 'toiletries',\n        name: t('packing.items.sunscreen', 'Sunscreen'),\n        essential: true\n      }, {\n        category: 'toiletries',\n        name: t('packing.items.afterSun', 'After-sun lotion'),\n        essential: false\n      });\n      break;\n    case 'adventure':\n    case 'hiking':\n      tripTypeItems.push({\n        category: 'clothing',\n        name: t('packing.items.hikingBoots', 'Hiking boots'),\n        essential: true\n      }, {\n        category: 'clothing',\n        name: t('packing.items.moistureWickingShirts', 'Moisture-wicking shirts'),\n        essential: true\n      }, {\n        category: 'clothing',\n        name: t('packing.items.hikingPants', 'Hiking pants/shorts'),\n        essential: true\n      }, {\n        category: 'accessories',\n        name: t('packing.items.backpack', 'Backpack'),\n        essential: true\n      }, {\n        category: 'accessories',\n        name: t('packing.items.waterBottle', 'Water bottle'),\n        essential: true\n      }, {\n        category: 'accessories',\n        name: t('packing.items.flashlight', 'Flashlight/headlamp'),\n        essential: true\n      }, {\n        category: 'accessories',\n        name: t('packing.items.multiTool', 'Multi-tool'),\n        essential: false\n      }, {\n        category: 'toiletries',\n        name: t('packing.items.insectRepellent', 'Insect repellent'),\n        essential: true\n      }, {\n        category: 'toiletries',\n        name: t('packing.items.sunscreen', 'Sunscreen'),\n        essential: true\n      });\n      break;\n    case 'winter':\n    case 'ski':\n      tripTypeItems.push({\n        category: 'clothing',\n        name: t('packing.items.skiJacket', 'Ski jacket'),\n        essential: true\n      }, {\n        category: 'clothing',\n        name: t('packing.items.skiPants', 'Ski pants'),\n        essential: true\n      }, {\n        category: 'clothing',\n        name: t('packing.items.thermalBaseLayers', 'Thermal base layers'),\n        essential: true\n      }, {\n        category: 'clothing',\n        name: t('packing.items.thickSocks', 'Thick socks'),\n        essential: true\n      }, {\n        category: 'clothing',\n        name: t('packing.items.gloves', 'Gloves'),\n        essential: true\n      }, {\n        category: 'clothing',\n        name: t('packing.items.winterHat', 'Winter hat'),\n        essential: true\n      }, {\n        category: 'accessories',\n        name: t('packing.items.skiGoggles', 'Ski goggles'),\n        essential: true\n      }, {\n        category: 'toiletries',\n        name: t('packing.items.lipBalm', 'Lip balm'),\n        essential: true\n      }, {\n        category: 'toiletries',\n        name: t('packing.items.moisturizer', 'Moisturizer'),\n        essential: true\n      });\n      break;\n  }\n\n  // Destination-specific items\n  let destinationItems = [];\n\n  // Parse destination to extract potential country/region\n  const destinationLower = destination.toLowerCase();\n\n  // Beach or tropical destination\n  if (destinationLower.includes('beach') || destinationLower.includes('hawaii') || destinationLower.includes('bali') || destinationLower.includes('caribbean')) {\n    destinationItems.push({\n      category: 'clothing',\n      name: t('packing.items.swimwear', 'Swimwear'),\n      essential: true\n    }, {\n      category: 'clothing',\n      name: t('packing.items.sandals', 'Sandals'),\n      essential: true\n    }, {\n      category: 'toiletries',\n      name: t('packing.items.sunscreen', 'Sunscreen'),\n      essential: true\n    }, {\n      category: 'accessories',\n      name: t('packing.items.beachTowel', 'Beach towel'),\n      essential: false\n    });\n  }\n\n  // Urban/city trip\n  if (destinationLower.includes('city') || destinationLower.includes('new york') || destinationLower.includes('paris') || destinationLower.includes('london') || destinationLower.includes('tokyo')) {\n    destinationItems.push({\n      category: 'clothing',\n      name: t('packing.items.walkingShoes', 'Comfortable walking shoes'),\n      essential: true\n    }, {\n      category: 'accessories',\n      name: t('packing.items.dayBag', 'Day bag/backpack'),\n      essential: true\n    }, {\n      category: 'electronics',\n      name: t('packing.items.camera', 'Camera'),\n      essential: false\n    }, {\n      category: 'documents',\n      name: t('packing.items.cityMap', 'City map/guide'),\n      essential: false\n    });\n  }\n\n  // Merge all item recommendations and group by category\n  const allItems = [...climateItems, ...tripTypeItems, ...destinationItems];\n\n  // Create a deep copy of baseRecommendations\n  const recommendations = JSON.parse(JSON.stringify(baseRecommendations));\n\n  // Additional categories that might not be in base recommendations\n  const additionalCategories = [{\n    id: 'accessories',\n    name: t('packing.categories.accessories', 'Accessories'),\n    icon: '👓'\n  }, {\n    id: 'documents',\n    name: t('packing.categories.documents', 'Documents'),\n    icon: '📄'\n  }, {\n    id: 'misc',\n    name: t('packing.categories.miscellaneous', 'Miscellaneous'),\n    icon: '🔮'\n  }];\n\n  // Add any missing categories to recommendations\n  additionalCategories.forEach(category => {\n    if (!recommendations.some(rec => rec.id === category.id)) {\n      recommendations.push({\n        id: category.id,\n        name: category.name,\n        icon: category.icon,\n        items: []\n      });\n    }\n  });\n\n  // Add all specific items to appropriate categories\n  allItems.forEach(item => {\n    const category = recommendations.find(cat => cat.id === item.category);\n    if (category) {\n      // Check if item already exists in the category\n      if (!category.items.some(existingItem => existingItem.name === item.name)) {\n        category.items.push({\n          name: item.name,\n          essential: item.essential\n        });\n      }\n    }\n  });\n\n  // Sort by essential first within each category\n  recommendations.forEach(category => {\n    category.items.sort((a, b) => {\n      if (a.essential && !b.essential) return -1;\n      if (!a.essential && b.essential) return 1;\n      return a.name.localeCompare(b.name);\n    });\n  });\n  return recommendations;\n}\n\n/**\r\n * Calculate the optimal number of clothing items based on trip duration\r\n * \r\n * @param {number} duration - Trip duration in days\r\n * @returns {Object} Recommended quantities for different clothing items\r\n */\n_s(getPackingRecommendations, \"15gF4aQ74WHMevGVK4YmXeGEhg8=\", false, function () {\n  return [useI18n];\n});\nexport function calculateClothingQuantities(duration) {\n  return {\n    underwear: duration,\n    socks: duration,\n    shirts: Math.ceil(duration / 2),\n    pants: Math.ceil(duration / 3),\n    dressShirts: Math.ceil(duration / 2),\n    // For business trips\n    formalOutfits: Math.ceil(duration / 3) // For business trips\n  };\n}\n\n/**\r\n * Check if a destination is likely to be international\r\n * (simplified implementation - would be more comprehensive in a real app)\r\n *\r\n * @param {string} destination - The trip destination\r\n * @returns {boolean} Whether the destination is likely international\r\n */\nexport function isInternationalDestination(destination) {\n  // List of countries (partial)\n  const countries = ['france', 'italy', 'spain', 'germany', 'japan', 'china', 'australia', 'canada', 'mexico', 'brazil', 'argentina', 'thailand', 'vietnam', 'indonesia', 'india', 'russia', 'south africa', 'egypt', 'morocco', 'united kingdom', 'ireland', 'greece', 'portugal', 'netherlands'];\n\n  // Check if any country name appears in the destination\n  const destinationLower = destination.toLowerCase();\n  return countries.some(country => destinationLower.includes(country));\n}\n\n/**\r\n * Generate document recommendations based on destination\r\n * \r\n * @param {string} destination - The trip destination\r\n * @param {Function} t - Translation function from i18n\r\n * @returns {Array} Recommended documents\r\n */\nexport function getDocumentRecommendations(destination, t) {\n  _s2();\n  // If t is not provided, handle gracefully\n  if (!t) {\n    // Try to use the i18n hook if called from a component context\n    try {\n      const {\n        t: translate\n      } = useI18n();\n      t = translate;\n    } catch (e) {\n      // Fallback to a function that returns the key itself\n      t = key => key;\n    }\n  }\n  const isInternational = isInternationalDestination(destination);\n  const baseDocuments = [{\n    name: t('packing.documents.id', 'ID/Driver\\'s License'),\n    essential: true\n  }, {\n    name: t('packing.documents.cards', 'Credit/Debit Cards'),\n    essential: true\n  }, {\n    name: t('packing.documents.insurance', 'Travel Insurance Info'),\n    essential: true\n  }, {\n    name: t('packing.documents.emergency', 'Emergency Contact List'),\n    essential: true\n  }, {\n    name: t('packing.documents.hotel', 'Hotel Reservation'),\n    essential: true\n  }, {\n    name: t('packing.documents.transportation', 'Transportation Tickets'),\n    essential: true\n  }];\n  if (isInternational) {\n    return [...baseDocuments, {\n      name: t('packing.documents.passport', 'Passport'),\n      essential: true\n    }, {\n      name: t('packing.documents.visa', 'Visa Documentation'),\n      essential: true\n    }, {\n      name: t('packing.documents.driverPermit', 'International Driver\\'s Permit'),\n      essential: false\n    }, {\n      name: t('packing.documents.vaccination', 'Vaccination Records'),\n      essential: false\n    }, {\n      name: t('packing.documents.currency', 'Currency Exchange Info'),\n      essential: false\n    }, {\n      name: t('packing.documents.embassy', 'Embassy Contact Info'),\n      essential: false\n    }, {\n      name: t('packing.documents.adapter', 'Travel Adapter Info'),\n      essential: false\n    }];\n  }\n  return baseDocuments;\n}\n_s2(getDocumentRecommendations, \"15gF4aQ74WHMevGVK4YmXeGEhg8=\", false, function () {\n  return [useI18n];\n});","map":{"version":3,"names":["useI18n","getPackingRecommendations","destination","duration","weatherData","tripType","t","_s","translate","e","key","baseRecommendations","id","name","icon","items","essential","quantity","Math","ceil","climateItems","avgTemp","push","category","rainfall","conditions","includes","tripTypeItems","toLowerCase","destinationItems","destinationLower","allItems","recommendations","JSON","parse","stringify","additionalCategories","forEach","some","rec","item","find","cat","existingItem","sort","a","b","localeCompare","calculateClothingQuantities","underwear","socks","shirts","pants","dressShirts","formalOutfits","isInternationalDestination","countries","country","getDocumentRecommendations","_s2","isInternational","baseDocuments"],"sources":["C:/Users/juliu/Desktop/web/src/utils/packingUtils.js"],"sourcesContent":["// src/utils/packingUtils.js\r\nimport { useI18n } from './i18n';\r\n\r\n/**\r\n * Utility functions for packing list recommendations and management\r\n */\r\n\r\n/**\r\n * Generate packing recommendations based on destination, trip duration, and weather\r\n * \r\n * @param {string} destination - The trip destination\r\n * @param {number} duration - Trip duration in days\r\n * @param {Object} weatherData - Weather forecast data\r\n * @param {string} tripType - Type of trip (leisure, business, adventure, etc.)\r\n * @param {Function} t - Translation function from i18n\r\n * @returns {Array} Array of packing categories with recommended items\r\n */\r\nexport function getPackingRecommendations(destination, duration, weatherData, tripType = 'leisure', t) {\r\n    // If t is not provided, handle gracefully\r\n    if (!t) {\r\n        // Try to use the i18n hook if called from a component context\r\n        try {\r\n            const { t: translate } = useI18n();\r\n            t = translate;\r\n        } catch (e) {\r\n            // Fallback to a function that returns the key itself\r\n            t = (key) => key;\r\n        }\r\n    }\r\n    \r\n    // Base items everyone needs regardless of destination\r\n    const baseRecommendations = [\r\n      {\r\n        id: 'essentials',\r\n        name: t('packing.categories.essentials', 'Essentials'),\r\n        icon: '⭐',\r\n        items: [\r\n          { name: t('packing.items.passport', 'Passport/ID'), essential: true },\r\n          { name: t('packing.items.wallet', 'Wallet'), essential: true },\r\n          { name: t('packing.items.phone', 'Phone'), essential: true },\r\n          { name: t('packing.items.phoneCharger', 'Phone charger'), essential: true },\r\n          { name: t('packing.items.travelInsurance', 'Travel insurance documents'), essential: true },\r\n          { name: t('packing.items.cashCards', 'Cash/credit cards'), essential: true },\r\n          { name: t('packing.items.houseKeys', 'House keys'), essential: true },\r\n        ]\r\n      },\r\n      {\r\n        id: 'clothing',\r\n        name: t('packing.categories.clothing', 'Clothing'),\r\n        icon: '👕',\r\n        items: [\r\n          { name: t('packing.items.underwear', 'Underwear'), essential: true, quantity: duration },\r\n          { name: t('packing.items.socks', 'Socks'), essential: true, quantity: duration },\r\n          { name: t('packing.items.tshirts', 'T-shirts'), essential: true, quantity: Math.ceil(duration / 2) },\r\n          { name: t('packing.items.pants', 'Pants/shorts'), essential: true, quantity: Math.ceil(duration / 3) },\r\n          { name: t('packing.items.sleepwear', 'Sleepwear'), essential: false },\r\n          { name: t('packing.items.belt', 'Belt'), essential: false },\r\n        ]\r\n      },\r\n      {\r\n        id: 'toiletries',\r\n        name: t('packing.categories.toiletries', 'Toiletries'),\r\n        icon: '🧴',\r\n        items: [\r\n          { name: t('packing.items.toothbrush', 'Toothbrush'), essential: true },\r\n          { name: t('packing.items.toothpaste', 'Toothpaste'), essential: true },\r\n          { name: t('packing.items.deodorant', 'Deodorant'), essential: true },\r\n          { name: t('packing.items.shampoo', 'Shampoo'), essential: false },\r\n          { name: t('packing.items.soap', 'Soap/shower gel'), essential: false },\r\n          { name: t('packing.items.razor', 'Razor'), essential: false },\r\n          { name: t('packing.items.hairbrush', 'Hairbrush/comb'), essential: false },\r\n        ]\r\n      },\r\n      {\r\n        id: 'electronics',\r\n        name: t('packing.categories.electronics', 'Electronics'),\r\n        icon: '📱',\r\n        items: [\r\n          { name: t('packing.items.camera', 'Camera'), essential: false },\r\n          { name: t('packing.items.headphones', 'Headphones'), essential: false },\r\n          { name: t('packing.items.travelAdapter', 'Travel adapter'), essential: false },\r\n          { name: t('packing.items.powerBank', 'Power bank'), essential: false },\r\n        ]\r\n      },\r\n      {\r\n        id: 'medications',\r\n        name: t('packing.categories.medications', 'Medications'),\r\n        icon: '💊',\r\n        items: [\r\n          { name: t('packing.items.personalMeds', 'Personal medications'), essential: true },\r\n          { name: t('packing.items.painRelievers', 'Pain relievers'), essential: false },\r\n          { name: t('packing.items.bandaids', 'Band-aids'), essential: false },\r\n          { name: t('packing.items.antidiarrheals', 'Antidiarrheals'), essential: false },\r\n          { name: t('packing.items.motionSickness', 'Motion sickness pills'), essential: false },\r\n        ]\r\n      }\r\n    ];\r\n    \r\n    // Climate-specific items\r\n    let climateItems = [];\r\n    \r\n    if (weatherData) {\r\n      // Hot weather items\r\n      if (weatherData.avgTemp > 25) {\r\n        climateItems.push(\r\n          { category: 'clothing', name: t('packing.items.sunglasses', 'Sunglasses'), essential: true },\r\n          { category: 'clothing', name: t('packing.items.hatCap', 'Hat or cap'), essential: true },\r\n          { category: 'clothing', name: t('packing.items.sandals', 'Sandals'), essential: false },\r\n          { category: 'clothing', name: t('packing.items.swimwear', 'Swimwear'), essential: false },\r\n          { category: 'toiletries', name: t('packing.items.sunscreen', 'Sunscreen'), essential: true },\r\n          { category: 'toiletries', name: t('packing.items.afterSun', 'After-sun lotion'), essential: false },\r\n          { category: 'accessories', name: t('packing.items.portableFan', 'Portable fan'), essential: false }\r\n        );\r\n      }\r\n      \r\n      // Cold weather items\r\n      if (weatherData.avgTemp < 15) {\r\n        climateItems.push(\r\n          { category: 'clothing', name: t('packing.items.winterCoat', 'Winter coat'), essential: true },\r\n          { category: 'clothing', name: t('packing.items.sweaters', 'Sweaters/jumpers'), essential: true },\r\n          { category: 'clothing', name: t('packing.items.thermalUnderwear', 'Thermal underwear'), essential: false },\r\n          { category: 'clothing', name: t('packing.items.gloves', 'Gloves'), essential: true },\r\n          { category: 'clothing', name: t('packing.items.scarf', 'Scarf'), essential: false },\r\n          { category: 'clothing', name: t('packing.items.winterHat', 'Winter hat'), essential: true },\r\n          { category: 'clothing', name: t('packing.items.warmSocks', 'Warm socks'), essential: true }\r\n        );\r\n      }\r\n      \r\n      // Rainy weather items\r\n      if (weatherData.rainfall === 'high' || weatherData.conditions.includes('rain')) {\r\n        climateItems.push(\r\n          { category: 'clothing', name: t('packing.items.rainJacket', 'Rain jacket'), essential: true },\r\n          { category: 'clothing', name: t('packing.items.waterproofShoes', 'Waterproof shoes'), essential: true },\r\n          { category: 'accessories', name: t('packing.items.umbrella', 'Umbrella'), essential: true },\r\n          { category: 'accessories', name: t('packing.items.waterproofBagCover', 'Waterproof bag cover'), essential: false }\r\n        );\r\n      }\r\n      \r\n      // Humid weather\r\n      if (weatherData.conditions === 'humid') {\r\n        climateItems.push(\r\n          { category: 'clothing', name: t('packing.items.lightweightClothes', 'Lightweight clothes'), essential: true },\r\n          { category: 'toiletries', name: t('packing.items.antiHumidityHair', 'Anti-humidity hair product'), essential: false },\r\n          { category: 'toiletries', name: t('packing.items.mosquitoRepellent', 'Mosquito repellent'), essential: true }\r\n        );\r\n      }\r\n    }\r\n    \r\n    // Trip type specific items\r\n    let tripTypeItems = [];\r\n    \r\n    switch (tripType.toLowerCase()) {\r\n      case 'business':\r\n        tripTypeItems.push(\r\n          { category: 'clothing', name: t('packing.items.businessSuits', 'Business suits'), essential: true },\r\n          { category: 'clothing', name: t('packing.items.formalShoes', 'Formal shoes'), essential: true },\r\n          { category: 'clothing', name: t('packing.items.tiesScarves', 'Ties/Scarves'), essential: false },\r\n          { category: 'electronics', name: t('packing.items.laptop', 'Laptop'), essential: true },\r\n          { category: 'electronics', name: t('packing.items.laptopCharger', 'Laptop charger'), essential: true },\r\n          { category: 'documents', name: t('packing.items.businessCards', 'Business cards'), essential: false },\r\n          { category: 'documents', name: t('packing.items.notebook', 'Notebook'), essential: false },\r\n          { category: 'documents', name: t('packing.items.presentationMaterials', 'Presentation materials'), essential: false }\r\n        );\r\n        break;\r\n        \r\n      case 'beach':\r\n        tripTypeItems.push(\r\n          { category: 'clothing', name: t('packing.items.swimwear', 'Swimwear'), essential: true },\r\n          { category: 'clothing', name: t('packing.items.beachCoverUp', 'Beach cover-up'), essential: false },\r\n          { category: 'clothing', name: t('packing.items.flipFlops', 'Flip-flops'), essential: true },\r\n          { category: 'accessories', name: t('packing.items.beachTowel', 'Beach towel'), essential: false },\r\n          { category: 'accessories', name: t('packing.items.beachBag', 'Beach bag'), essential: false },\r\n          { category: 'toiletries', name: t('packing.items.sunscreen', 'Sunscreen'), essential: true },\r\n          { category: 'toiletries', name: t('packing.items.afterSun', 'After-sun lotion'), essential: false }\r\n        );\r\n        break;\r\n        \r\n      case 'adventure':\r\n      case 'hiking':\r\n        tripTypeItems.push(\r\n          { category: 'clothing', name: t('packing.items.hikingBoots', 'Hiking boots'), essential: true },\r\n          { category: 'clothing', name: t('packing.items.moistureWickingShirts', 'Moisture-wicking shirts'), essential: true },\r\n          { category: 'clothing', name: t('packing.items.hikingPants', 'Hiking pants/shorts'), essential: true },\r\n          { category: 'accessories', name: t('packing.items.backpack', 'Backpack'), essential: true },\r\n          { category: 'accessories', name: t('packing.items.waterBottle', 'Water bottle'), essential: true },\r\n          { category: 'accessories', name: t('packing.items.flashlight', 'Flashlight/headlamp'), essential: true },\r\n          { category: 'accessories', name: t('packing.items.multiTool', 'Multi-tool'), essential: false },\r\n          { category: 'toiletries', name: t('packing.items.insectRepellent', 'Insect repellent'), essential: true },\r\n          { category: 'toiletries', name: t('packing.items.sunscreen', 'Sunscreen'), essential: true }\r\n        );\r\n        break;\r\n        \r\n      case 'winter':\r\n      case 'ski':\r\n        tripTypeItems.push(\r\n          { category: 'clothing', name: t('packing.items.skiJacket', 'Ski jacket'), essential: true },\r\n          { category: 'clothing', name: t('packing.items.skiPants', 'Ski pants'), essential: true },\r\n          { category: 'clothing', name: t('packing.items.thermalBaseLayers', 'Thermal base layers'), essential: true },\r\n          { category: 'clothing', name: t('packing.items.thickSocks', 'Thick socks'), essential: true },\r\n          { category: 'clothing', name: t('packing.items.gloves', 'Gloves'), essential: true },\r\n          { category: 'clothing', name: t('packing.items.winterHat', 'Winter hat'), essential: true },\r\n          { category: 'accessories', name: t('packing.items.skiGoggles', 'Ski goggles'), essential: true },\r\n          { category: 'toiletries', name: t('packing.items.lipBalm', 'Lip balm'), essential: true },\r\n          { category: 'toiletries', name: t('packing.items.moisturizer', 'Moisturizer'), essential: true }\r\n        );\r\n        break;\r\n    }\r\n    \r\n    // Destination-specific items\r\n    let destinationItems = [];\r\n    \r\n    // Parse destination to extract potential country/region\r\n    const destinationLower = destination.toLowerCase();\r\n    \r\n    // Beach or tropical destination\r\n    if (destinationLower.includes('beach') || \r\n        destinationLower.includes('hawaii') ||\r\n        destinationLower.includes('bali') ||\r\n        destinationLower.includes('caribbean')) {\r\n      destinationItems.push(\r\n        { category: 'clothing', name: t('packing.items.swimwear', 'Swimwear'), essential: true },\r\n        { category: 'clothing', name: t('packing.items.sandals', 'Sandals'), essential: true },\r\n        { category: 'toiletries', name: t('packing.items.sunscreen', 'Sunscreen'), essential: true },\r\n        { category: 'accessories', name: t('packing.items.beachTowel', 'Beach towel'), essential: false }\r\n      );\r\n    }\r\n    \r\n    // Urban/city trip\r\n    if (destinationLower.includes('city') ||\r\n        destinationLower.includes('new york') ||\r\n        destinationLower.includes('paris') ||\r\n        destinationLower.includes('london') ||\r\n        destinationLower.includes('tokyo')) {\r\n      destinationItems.push(\r\n        { category: 'clothing', name: t('packing.items.walkingShoes', 'Comfortable walking shoes'), essential: true },\r\n        { category: 'accessories', name: t('packing.items.dayBag', 'Day bag/backpack'), essential: true },\r\n        { category: 'electronics', name: t('packing.items.camera', 'Camera'), essential: false },\r\n        { category: 'documents', name: t('packing.items.cityMap', 'City map/guide'), essential: false }\r\n      );\r\n    }\r\n    \r\n    // Merge all item recommendations and group by category\r\n    const allItems = [\r\n      ...climateItems,\r\n      ...tripTypeItems,\r\n      ...destinationItems\r\n    ];\r\n    \r\n    // Create a deep copy of baseRecommendations\r\n    const recommendations = JSON.parse(JSON.stringify(baseRecommendations));\r\n    \r\n    // Additional categories that might not be in base recommendations\r\n    const additionalCategories = [\r\n      { id: 'accessories', name: t('packing.categories.accessories', 'Accessories'), icon: '👓' },\r\n      { id: 'documents', name: t('packing.categories.documents', 'Documents'), icon: '📄' },\r\n      { id: 'misc', name: t('packing.categories.miscellaneous', 'Miscellaneous'), icon: '🔮' }\r\n    ];\r\n    \r\n    // Add any missing categories to recommendations\r\n    additionalCategories.forEach(category => {\r\n      if (!recommendations.some(rec => rec.id === category.id)) {\r\n        recommendations.push({\r\n          id: category.id,\r\n          name: category.name,\r\n          icon: category.icon,\r\n          items: []\r\n        });\r\n      }\r\n    });\r\n    \r\n    // Add all specific items to appropriate categories\r\n    allItems.forEach(item => {\r\n      const category = recommendations.find(cat => cat.id === item.category);\r\n      if (category) {\r\n        // Check if item already exists in the category\r\n        if (!category.items.some(existingItem => existingItem.name === item.name)) {\r\n          category.items.push({\r\n            name: item.name,\r\n            essential: item.essential\r\n          });\r\n        }\r\n      }\r\n    });\r\n    \r\n    // Sort by essential first within each category\r\n    recommendations.forEach(category => {\r\n      category.items.sort((a, b) => {\r\n        if (a.essential && !b.essential) return -1;\r\n        if (!a.essential && b.essential) return 1;\r\n        return a.name.localeCompare(b.name);\r\n      });\r\n    });\r\n    \r\n    return recommendations;\r\n  }\r\n  \r\n  /**\r\n   * Calculate the optimal number of clothing items based on trip duration\r\n   * \r\n   * @param {number} duration - Trip duration in days\r\n   * @returns {Object} Recommended quantities for different clothing items\r\n   */\r\n  export function calculateClothingQuantities(duration) {\r\n    return {\r\n      underwear: duration,\r\n      socks: duration,\r\n      shirts: Math.ceil(duration / 2),\r\n      pants: Math.ceil(duration / 3),\r\n      dressShirts: Math.ceil(duration / 2), // For business trips\r\n      formalOutfits: Math.ceil(duration / 3)  // For business trips\r\n    };\r\n  }\r\n  \r\n  /**\r\n   * Check if a destination is likely to be international\r\n   * (simplified implementation - would be more comprehensive in a real app)\r\n   *\r\n   * @param {string} destination - The trip destination\r\n   * @returns {boolean} Whether the destination is likely international\r\n   */\r\n  export function isInternationalDestination(destination) {\r\n    // List of countries (partial)\r\n    const countries = [\r\n      'france', 'italy', 'spain', 'germany', 'japan', 'china', 'australia',\r\n      'canada', 'mexico', 'brazil', 'argentina', 'thailand', 'vietnam',\r\n      'indonesia', 'india', 'russia', 'south africa', 'egypt', 'morocco',\r\n      'united kingdom', 'ireland', 'greece', 'portugal', 'netherlands'\r\n    ];\r\n    \r\n    // Check if any country name appears in the destination\r\n    const destinationLower = destination.toLowerCase();\r\n    return countries.some(country => destinationLower.includes(country));\r\n  }\r\n  \r\n  /**\r\n   * Generate document recommendations based on destination\r\n   * \r\n   * @param {string} destination - The trip destination\r\n   * @param {Function} t - Translation function from i18n\r\n   * @returns {Array} Recommended documents\r\n   */\r\n  export function getDocumentRecommendations(destination, t) {\r\n    // If t is not provided, handle gracefully\r\n    if (!t) {\r\n        // Try to use the i18n hook if called from a component context\r\n        try {\r\n            const { t: translate } = useI18n();\r\n            t = translate;\r\n        } catch (e) {\r\n            // Fallback to a function that returns the key itself\r\n            t = (key) => key;\r\n        }\r\n    }\r\n    \r\n    const isInternational = isInternationalDestination(destination);\r\n    \r\n    const baseDocuments = [\r\n      { name: t('packing.documents.id', 'ID/Driver\\'s License'), essential: true },\r\n      { name: t('packing.documents.cards', 'Credit/Debit Cards'), essential: true },\r\n      { name: t('packing.documents.insurance', 'Travel Insurance Info'), essential: true },\r\n      { name: t('packing.documents.emergency', 'Emergency Contact List'), essential: true },\r\n      { name: t('packing.documents.hotel', 'Hotel Reservation'), essential: true },\r\n      { name: t('packing.documents.transportation', 'Transportation Tickets'), essential: true },\r\n    ];\r\n    \r\n    if (isInternational) {\r\n      return [\r\n        ...baseDocuments,\r\n        { name: t('packing.documents.passport', 'Passport'), essential: true },\r\n        { name: t('packing.documents.visa', 'Visa Documentation'), essential: true },\r\n        { name: t('packing.documents.driverPermit', 'International Driver\\'s Permit'), essential: false },\r\n        { name: t('packing.documents.vaccination', 'Vaccination Records'), essential: false },\r\n        { name: t('packing.documents.currency', 'Currency Exchange Info'), essential: false },\r\n        { name: t('packing.documents.embassy', 'Embassy Contact Info'), essential: false },\r\n        { name: t('packing.documents.adapter', 'Travel Adapter Info'), essential: false },\r\n      ];\r\n    }\r\n    \r\n    return baseDocuments;\r\n  }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}