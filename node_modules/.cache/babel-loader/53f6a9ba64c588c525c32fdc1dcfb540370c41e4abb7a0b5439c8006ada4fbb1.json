{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\juliu\\\\Desktop\\\\web\\\\src\\\\components\\\\Budget\\\\BudgetChart.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useAppSettings } from '../../utils/useAppSettings';\nimport { useI18n } from '../../utils/i18n'; // Import the i18n hook\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BudgetChart({\n  budgetData\n}) {\n  _s();\n  // Get currency formatter from app settings\n  const {\n    currency\n  } = useAppSettings();\n  // Get i18n functionality\n  const {\n    t\n  } = useI18n();\n\n  // Format the data for the chart\n  const chartData = Object.entries(budgetData).filter(([_, value]) => value > 0).map(([category, value]) => ({\n    category: t(`budget.${category}`),\n    // Translate category names\n    categoryKey: category,\n    // Keep original key for color\n    value,\n    percentage: 0,\n    // We'll calculate this\n    color: getCategoryColor(category)\n  }));\n\n  // Calculate total and percentages\n  const total = chartData.reduce((sum, item) => sum + item.value, 0);\n  chartData.forEach(item => {\n    item.percentage = Math.round(item.value / total * 100);\n  });\n\n  // Sort by value (largest first)\n  chartData.sort((a, b) => b.value - a.value);\n\n  // Get color for category\n  function getCategoryColor(category) {\n    switch (category) {\n      case 'accommodation':\n        return '#3b82f6';\n      // blue-500\n      case 'food':\n        return '#f59e0b';\n      // amber-500\n      case 'transportation':\n        return '#10b981';\n      // emerald-500\n      case 'activities':\n        return '#8b5cf6';\n      // violet-500\n      case 'other':\n        return '#6b7280';\n      // gray-500\n      default:\n        return '#d1d5db';\n      // gray-300\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: chartData.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center h-48 bg-gray-50 rounded-lg border border-gray-200\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500 text-center\",\n        children: [t('budget.noData.line1', 'No budget data to display.'), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 69\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm\",\n          children: t('budget.noData.line2', 'Add budget items to see the chart.')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative h-48 w-48 mx-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          viewBox: \"0 0 100 100\",\n          className: \"w-full h-full\",\n          children: [renderPieSlices(chartData), /*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: \"50\",\n            cy: \"50\",\n            r: \"25\",\n            fill: \"white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n            x: \"50\",\n            y: \"46\",\n            textAnchor: \"middle\",\n            fontSize: \"10\",\n            fontWeight: \"bold\",\n            children: currency(total)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n            x: \"50\",\n            y: \"58\",\n            textAnchor: \"middle\",\n            fontSize: \"6\",\n            children: t('budget.totalBudget', 'Total Budget')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 space-y-2\",\n        children: chartData.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-4 h-4 rounded-sm mr-2\",\n              style: {\n                backgroundColor: item.color\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm\",\n              children: item.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm font-medium mr-2\",\n              children: currency(item.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xs text-gray-500\",\n              children: [\"(\", item.percentage, \"%)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n// Helper function to render pie slices\n_s(BudgetChart, \"ElXRNyam4YH3kRTCDDOX2bZjVME=\", false, function () {\n  return [useAppSettings, useI18n];\n});\n_c = BudgetChart;\nfunction renderPieSlices(data) {\n  const total = data.reduce((sum, item) => sum + item.value, 0);\n  let startAngle = 0;\n  return data.map((item, index) => {\n    // Calculate angles for the slice\n    const percentage = item.value / total;\n    const angle = percentage * 360;\n    const endAngle = startAngle + angle;\n\n    // Convert angles to radians and calculate coordinates\n    const startRad = (startAngle - 90) * Math.PI / 180;\n    const endRad = (endAngle - 90) * Math.PI / 180;\n    const x1 = 50 + 40 * Math.cos(startRad);\n    const y1 = 50 + 40 * Math.sin(startRad);\n    const x2 = 50 + 40 * Math.cos(endRad);\n    const y2 = 50 + 40 * Math.sin(endRad);\n\n    // Create SVG arc path\n    const largeArcFlag = angle > 180 ? 1 : 0;\n    const pathData = [`M 50 50`, `L ${x1} ${y1}`, `A 40 40 0 ${largeArcFlag} 1 ${x2} ${y2}`, `Z`].join(' ');\n\n    // Update the start angle for the next slice\n    startAngle = endAngle;\n    return /*#__PURE__*/_jsxDEV(\"path\", {\n      d: pathData,\n      fill: item.color,\n      stroke: \"white\",\n      strokeWidth: \"1\"\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this);\n  });\n}\nexport default BudgetChart;\nvar _c;\n$RefreshReg$(_c, \"BudgetChart\");","map":{"version":3,"names":["React","useAppSettings","useI18n","jsxDEV","_jsxDEV","BudgetChart","budgetData","_s","currency","t","chartData","Object","entries","filter","_","value","map","category","categoryKey","percentage","color","getCategoryColor","total","reduce","sum","item","forEach","Math","round","sort","a","b","children","length","className","fileName","_jsxFileName","lineNumber","columnNumber","viewBox","renderPieSlices","cx","cy","r","fill","x","y","textAnchor","fontSize","fontWeight","index","style","backgroundColor","_c","data","startAngle","angle","endAngle","startRad","PI","endRad","x1","cos","y1","sin","x2","y2","largeArcFlag","pathData","join","d","stroke","strokeWidth","$RefreshReg$"],"sources":["C:/Users/juliu/Desktop/web/src/components/Budget/BudgetChart.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useAppSettings } from '../../utils/useAppSettings';\r\nimport { useI18n } from '../../utils/i18n'; // Import the i18n hook\r\n\r\nfunction BudgetChart({ budgetData }) {\r\n  // Get currency formatter from app settings\r\n  const { currency } = useAppSettings();\r\n  // Get i18n functionality\r\n  const { t } = useI18n();\r\n\r\n  // Format the data for the chart\r\n  const chartData = Object.entries(budgetData)\r\n    .filter(([_, value]) => value > 0)\r\n    .map(([category, value]) => ({\r\n      category: t(`budget.${category}`), // Translate category names\r\n      categoryKey: category, // Keep original key for color\r\n      value,\r\n      percentage: 0, // We'll calculate this\r\n      color: getCategoryColor(category)\r\n    }));\r\n  \r\n  // Calculate total and percentages\r\n  const total = chartData.reduce((sum, item) => sum + item.value, 0);\r\n  chartData.forEach(item => {\r\n    item.percentage = Math.round((item.value / total) * 100);\r\n  });\r\n  \r\n  // Sort by value (largest first)\r\n  chartData.sort((a, b) => b.value - a.value);\r\n\r\n  // Get color for category\r\n  function getCategoryColor(category) {\r\n    switch (category) {\r\n      case 'accommodation':\r\n        return '#3b82f6'; // blue-500\r\n      case 'food':\r\n        return '#f59e0b'; // amber-500\r\n      case 'transportation':\r\n        return '#10b981'; // emerald-500\r\n      case 'activities':\r\n        return '#8b5cf6'; // violet-500\r\n      case 'other':\r\n        return '#6b7280'; // gray-500\r\n      default:\r\n        return '#d1d5db'; // gray-300\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {chartData.length === 0 ? (\r\n        <div className=\"flex items-center justify-center h-48 bg-gray-50 rounded-lg border border-gray-200\">\r\n          <p className=\"text-gray-500 text-center\">\r\n            {t('budget.noData.line1', 'No budget data to display.')}<br />\r\n            <span className=\"text-sm\">{t('budget.noData.line2', 'Add budget items to see the chart.')}</span>\r\n          </p>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          {/* Pie Chart Visualization */}\r\n          <div className=\"relative h-48 w-48 mx-auto\">\r\n            <svg viewBox=\"0 0 100 100\" className=\"w-full h-full\">\r\n              {/* Create pie slices */}\r\n              {renderPieSlices(chartData)}\r\n              \r\n              {/* Center circle (empty space) */}\r\n              <circle cx=\"50\" cy=\"50\" r=\"25\" fill=\"white\" />\r\n              \r\n              {/* Total amount in center */}\r\n              <text x=\"50\" y=\"46\" textAnchor=\"middle\" fontSize=\"10\" fontWeight=\"bold\">\r\n                {currency(total)}\r\n              </text>\r\n              <text x=\"50\" y=\"58\" textAnchor=\"middle\" fontSize=\"6\">\r\n                {t('budget.totalBudget', 'Total Budget')}\r\n              </text>\r\n            </svg>\r\n          </div>\r\n          \r\n          {/* Legend */}\r\n          <div className=\"mt-4 space-y-2\">\r\n            {chartData.map((item, index) => (\r\n              <div key={index} className=\"flex items-center justify-between\">\r\n                <div className=\"flex items-center\">\r\n                  <div \r\n                    className=\"w-4 h-4 rounded-sm mr-2\"\r\n                    style={{ backgroundColor: item.color }}\r\n                  ></div>\r\n                  <span className=\"text-sm\">{item.category}</span>\r\n                </div>\r\n                <div className=\"flex items-center\">\r\n                  <span className=\"text-sm font-medium mr-2\">{currency(item.value)}</span>\r\n                  <span className=\"text-xs text-gray-500\">({item.percentage}%)</span>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Helper function to render pie slices\r\nfunction renderPieSlices(data) {\r\n  const total = data.reduce((sum, item) => sum + item.value, 0);\r\n  let startAngle = 0;\r\n  \r\n  return data.map((item, index) => {\r\n    // Calculate angles for the slice\r\n    const percentage = item.value / total;\r\n    const angle = percentage * 360;\r\n    const endAngle = startAngle + angle;\r\n    \r\n    // Convert angles to radians and calculate coordinates\r\n    const startRad = (startAngle - 90) * Math.PI / 180;\r\n    const endRad = (endAngle - 90) * Math.PI / 180;\r\n    \r\n    const x1 = 50 + 40 * Math.cos(startRad);\r\n    const y1 = 50 + 40 * Math.sin(startRad);\r\n    const x2 = 50 + 40 * Math.cos(endRad);\r\n    const y2 = 50 + 40 * Math.sin(endRad);\r\n    \r\n    // Create SVG arc path\r\n    const largeArcFlag = angle > 180 ? 1 : 0;\r\n    const pathData = [\r\n      `M 50 50`,\r\n      `L ${x1} ${y1}`,\r\n      `A 40 40 0 ${largeArcFlag} 1 ${x2} ${y2}`,\r\n      `Z`\r\n    ].join(' ');\r\n    \r\n    // Update the start angle for the next slice\r\n    startAngle = endAngle;\r\n    \r\n    return (\r\n      <path \r\n        key={index}\r\n        d={pathData} \r\n        fill={item.color}\r\n        stroke=\"white\"\r\n        strokeWidth=\"1\"\r\n      />\r\n    );\r\n  });\r\n}\r\n\r\nexport default BudgetChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}