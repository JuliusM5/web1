{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\juliu\\\\Desktop\\\\web\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\n// src/context/AuthContext.js\n\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Load user from localStorage on mount\n  useEffect(() => {\n    const savedUser = localStorage.getItem('user');\n    if (savedUser) {\n      try {\n        setUser(JSON.parse(savedUser));\n      } catch (error) {\n        console.error('Error parsing saved user:', error);\n      }\n    }\n    setLoading(false);\n  }, []);\n\n  // Mock login function for testing\n  const login = userData => {\n    setUser(userData);\n    localStorage.setItem('user', JSON.stringify(userData));\n    return true;\n  };\n\n  // Mock logout function\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n  };\n\n  // For testing purposes, generate a mock user if none exists\n  const getOrCreateUser = () => {\n    if (user) return user;\n\n    // Create mock user for testing\n    const mockUser = {\n      id: 'user_' + Math.random().toString(36).substring(2, 9),\n      email: 'test@example.com',\n      name: 'Test User',\n      created: new Date().toISOString()\n    };\n    login(mockUser);\n    return mockUser;\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      login,\n      logout,\n      getOrCreateUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","savedUser","localStorage","getItem","JSON","parse","error","console","login","userData","setItem","stringify","logout","removeItem","getOrCreateUser","mockUser","id","Math","random","toString","substring","email","name","created","Date","toISOString","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/juliu/Desktop/web/src/context/AuthContext.js"],"sourcesContent":["// src/context/AuthContext.js\r\n\r\nimport React, { createContext, useState, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  \r\n  // Load user from localStorage on mount\r\n  useEffect(() => {\r\n    const savedUser = localStorage.getItem('user');\r\n    if (savedUser) {\r\n      try {\r\n        setUser(JSON.parse(savedUser));\r\n      } catch (error) {\r\n        console.error('Error parsing saved user:', error);\r\n      }\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n  \r\n  // Mock login function for testing\r\n  const login = (userData) => {\r\n    setUser(userData);\r\n    localStorage.setItem('user', JSON.stringify(userData));\r\n    return true;\r\n  };\r\n  \r\n  // Mock logout function\r\n  const logout = () => {\r\n    setUser(null);\r\n    localStorage.removeItem('user');\r\n  };\r\n  \r\n  // For testing purposes, generate a mock user if none exists\r\n  const getOrCreateUser = () => {\r\n    if (user) return user;\r\n    \r\n    // Create mock user for testing\r\n    const mockUser = {\r\n      id: 'user_' + Math.random().toString(36).substring(2, 9),\r\n      email: 'test@example.com',\r\n      name: 'Test User',\r\n      created: new Date().toISOString()\r\n    };\r\n    \r\n    login(mockUser);\r\n    return mockUser;\r\n  };\r\n  \r\n  return (\r\n    <AuthContext.Provider value={{\r\n      user,\r\n      loading,\r\n      login,\r\n      logout,\r\n      getOrCreateUser\r\n    }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACAC,SAAS,CAAC,MAAM;IACd,MAAMW,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC9C,IAAIF,SAAS,EAAE;MACb,IAAI;QACFH,OAAO,CAACM,IAAI,CAACC,KAAK,CAACJ,SAAS,CAAC,CAAC;MAChC,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF;IACAN,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMQ,KAAK,GAAIC,QAAQ,IAAK;IAC1BX,OAAO,CAACW,QAAQ,CAAC;IACjBP,YAAY,CAACQ,OAAO,CAAC,MAAM,EAAEN,IAAI,CAACO,SAAS,CAACF,QAAQ,CAAC,CAAC;IACtD,OAAO,IAAI;EACb,CAAC;;EAED;EACA,MAAMG,MAAM,GAAGA,CAAA,KAAM;IACnBd,OAAO,CAAC,IAAI,CAAC;IACbI,YAAY,CAACW,UAAU,CAAC,MAAM,CAAC;EACjC,CAAC;;EAED;EACA,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAIjB,IAAI,EAAE,OAAOA,IAAI;;IAErB;IACA,MAAMkB,QAAQ,GAAG;MACfC,EAAE,EAAE,OAAO,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;MACxDC,KAAK,EAAE,kBAAkB;MACzBC,IAAI,EAAE,WAAW;MACjBC,OAAO,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;IAClC,CAAC;IAEDjB,KAAK,CAACO,QAAQ,CAAC;IACf,OAAOA,QAAQ;EACjB,CAAC;EAED,oBACEvB,OAAA,CAACC,WAAW,CAACiC,QAAQ;IAACC,KAAK,EAAE;MAC3B9B,IAAI;MACJE,OAAO;MACPS,KAAK;MACLI,MAAM;MACNE;IACF,CAAE;IAAAnB,QAAA,EACCA;EAAQ;IAAAiC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACnC,EAAA,CAzDWF,YAAY;AAAAsC,EAAA,GAAZtC,YAAY;AA2DzB,eAAeD,WAAW;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}