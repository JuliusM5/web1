{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\juliu\\\\Desktop\\\\web\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\n// src/context/AuthContext.jsx\n\nimport React, { createContext, useState, useEffect } from 'react';\nimport authService from '../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Load user on mount\n  useEffect(() => {\n    const initAuth = async () => {\n      try {\n        // Check if the user is authenticated\n        if (authService.isAuthenticated()) {\n          const userData = authService.getUser();\n          setUser(userData);\n        }\n      } catch (error) {\n        console.error('Auth initialization error:', error);\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    initAuth();\n  }, []);\n\n  // Login handler\n  const login = async (email, password) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const result = await authService.login({\n        email,\n        password\n      });\n      if (result.success) {\n        setUser(result.user);\n        return {\n          success: true\n        };\n      } else {\n        setError(result.error || 'Login failed');\n        return {\n          success: false,\n          error: result.error\n        };\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      setError(error.message);\n      return {\n        success: false,\n        error: error.message\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Register handler\n  const register = async userData => {\n    setLoading(true);\n    setError(null);\n    try {\n      const result = await authService.register(userData);\n      if (result.success) {\n        setUser(result.user);\n        return {\n          success: true\n        };\n      } else {\n        setError(result.error || 'Registration failed');\n        return {\n          success: false,\n          error: result.error\n        };\n      }\n    } catch (error) {\n      console.error('Registration error:', error);\n      setError(error.message);\n      return {\n        success: false,\n        error: error.message\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Logout handler\n  const logout = () => {\n    authService.logout();\n    setUser(null);\n  };\n\n  // Update profile handler\n  const updateProfile = async userData => {\n    setLoading(true);\n    setError(null);\n    try {\n      const result = await authService.updateProfile(userData);\n      if (result.success) {\n        setUser(result.user);\n        return {\n          success: true\n        };\n      } else {\n        setError(result.error || 'Profile update failed');\n        return {\n          success: false,\n          error: result.error\n        };\n      }\n    } catch (error) {\n      console.error('Profile update error:', error);\n      setError(error.message);\n      return {\n        success: false,\n        error: error.message\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Value to be provided to consumers\n  const value = {\n    user,\n    loading,\n    error,\n    isAuthenticated: !!user,\n    login,\n    register,\n    logout,\n    updateProfile\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"PA9FxEY9xSNRrsSqaLtbYei52Hs=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","authService","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","error","setError","initAuth","isAuthenticated","userData","getUser","console","message","login","email","password","result","success","register","logout","updateProfile","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/juliu/Desktop/web/src/context/AuthContext.js"],"sourcesContent":["// src/context/AuthContext.jsx\r\n\r\nimport React, { createContext, useState, useEffect } from 'react';\r\nimport authService from '../services/authService';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  \r\n  // Load user on mount\r\n  useEffect(() => {\r\n    const initAuth = async () => {\r\n      try {\r\n        // Check if the user is authenticated\r\n        if (authService.isAuthenticated()) {\r\n          const userData = authService.getUser();\r\n          setUser(userData);\r\n        }\r\n      } catch (error) {\r\n        console.error('Auth initialization error:', error);\r\n        setError(error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    initAuth();\r\n  }, []);\r\n  \r\n  // Login handler\r\n  const login = async (email, password) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const result = await authService.login({ email, password });\r\n      \r\n      if (result.success) {\r\n        setUser(result.user);\r\n        return { success: true };\r\n      } else {\r\n        setError(result.error || 'Login failed');\r\n        return { success: false, error: result.error };\r\n      }\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      setError(error.message);\r\n      return { success: false, error: error.message };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Register handler\r\n  const register = async (userData) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const result = await authService.register(userData);\r\n      \r\n      if (result.success) {\r\n        setUser(result.user);\r\n        return { success: true };\r\n      } else {\r\n        setError(result.error || 'Registration failed');\r\n        return { success: false, error: result.error };\r\n      }\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      setError(error.message);\r\n      return { success: false, error: error.message };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Logout handler\r\n  const logout = () => {\r\n    authService.logout();\r\n    setUser(null);\r\n  };\r\n  \r\n  // Update profile handler\r\n  const updateProfile = async (userData) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const result = await authService.updateProfile(userData);\r\n      \r\n      if (result.success) {\r\n        setUser(result.user);\r\n        return { success: true };\r\n      } else {\r\n        setError(result.error || 'Profile update failed');\r\n        return { success: false, error: result.error };\r\n      }\r\n    } catch (error) {\r\n      console.error('Profile update error:', error);\r\n      setError(error.message);\r\n      return { success: false, error: error.message };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Value to be provided to consumers\r\n  const value = {\r\n    user,\r\n    loading,\r\n    error,\r\n    isAuthenticated: !!user,\r\n    login,\r\n    register,\r\n    logout,\r\n    updateProfile\r\n  };\r\n  \r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}