{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\juliu\\\\Desktop\\\\web\\\\src\\\\context\\\\SubscriptionContext.jsx\",\n  _s = $RefreshSig$();\n// src/context/SubscriptionContext.jsx\nimport React, { createContext, useState, useEffect } from 'react';\nimport subscriptionService from '../services/SubscriptionService';\n\n// Create context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SubscriptionContext = /*#__PURE__*/createContext(null);\n\n// Provider component\nexport const SubscriptionProvider = ({\n  children\n}) => {\n  _s();\n  const [subscription, setSubscription] = useState(null);\n  const [isInitialized, setIsInitialized] = useState(false);\n\n  // Initialize subscription status on mount\n  useEffect(() => {\n    const initSubscription = async () => {\n      try {\n        const currentSubscription = await subscriptionService.checkSubscription();\n        setSubscription(currentSubscription);\n      } catch (error) {\n        console.error('Error initializing subscription:', error);\n      } finally {\n        setIsInitialized(true);\n      }\n    };\n    initSubscription();\n  }, []);\n\n  // Context value\n  const value = {\n    subscription,\n    setSubscription,\n    isInitialized\n  };\n  return /*#__PURE__*/_jsxDEV(SubscriptionContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(SubscriptionProvider, \"UOG0A0tUg2KOngfsHCD4dlgjRGI=\");\n_c = SubscriptionProvider;\nvar _c;\n$RefreshReg$(_c, \"SubscriptionProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","subscriptionService","jsxDEV","_jsxDEV","SubscriptionContext","SubscriptionProvider","children","_s","subscription","setSubscription","isInitialized","setIsInitialized","initSubscription","currentSubscription","checkSubscription","error","console","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/juliu/Desktop/web/src/context/SubscriptionContext.jsx"],"sourcesContent":["// src/context/SubscriptionContext.jsx\r\nimport React, { createContext, useState, useEffect } from 'react';\r\nimport subscriptionService from '../services/SubscriptionService';\r\n\r\n// Create context\r\nexport const SubscriptionContext = createContext(null);\r\n\r\n// Provider component\r\nexport const SubscriptionProvider = ({ children }) => {\r\n  const [subscription, setSubscription] = useState(null);\r\n  const [isInitialized, setIsInitialized] = useState(false);\r\n  \r\n  // Initialize subscription status on mount\r\n  useEffect(() => {\r\n    const initSubscription = async () => {\r\n      try {\r\n        const currentSubscription = await subscriptionService.checkSubscription();\r\n        setSubscription(currentSubscription);\r\n      } catch (error) {\r\n        console.error('Error initializing subscription:', error);\r\n      } finally {\r\n        setIsInitialized(true);\r\n      }\r\n    };\r\n    \r\n    initSubscription();\r\n  }, []);\r\n  \r\n  // Context value\r\n  const value = {\r\n    subscription,\r\n    setSubscription,\r\n    isInitialized\r\n  };\r\n  \r\n  return (\r\n    <SubscriptionContext.Provider value={value}>\r\n      {children}\r\n    </SubscriptionContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,mBAAmB,MAAM,iCAAiC;;AAEjE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,mBAAmB,gBAAGN,aAAa,CAAC,IAAI,CAAC;;AAEtD;AACA,OAAO,MAAMO,oBAAoB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACpD,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;;EAEzD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMY,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,mBAAmB,GAAG,MAAMZ,mBAAmB,CAACa,iBAAiB,CAAC,CAAC;QACzEL,eAAe,CAACI,mBAAmB,CAAC;MACtC,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MAC1D,CAAC,SAAS;QACRJ,gBAAgB,CAAC,IAAI,CAAC;MACxB;IACF,CAAC;IAEDC,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMK,KAAK,GAAG;IACZT,YAAY;IACZC,eAAe;IACfC;EACF,CAAC;EAED,oBACEP,OAAA,CAACC,mBAAmB,CAACc,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAX,QAAA,EACxCA;EAAQ;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACmB,CAAC;AAEnC,CAAC;AAACf,EAAA,CAhCWF,oBAAoB;AAAAkB,EAAA,GAApBlB,oBAAoB;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}